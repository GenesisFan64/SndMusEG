00000000                            ; ====================================================================
00000000                            ; MARS Side
00000000                            ; ====================================================================
00000000                            
00000000                            		include	"engine/ram.asm"
00000000                            ; =====================================================
00000000                            ; RAM
00000000                            ; =====================================================
00000000                            
00000000                            ; ----------------
00000000                            ; Sega CD RAM
00000000                            ; ----------------
00000000                            
00000000                            		rsset $FFFF6800
00000000                            		
00000000                            ; =====================================================
00000000                            ; ----------------------------------------
00000000                            ; Variables
00000000                            ; ----------------------------------------
00000000                            
00000000 =00000000                  bitFrameWait		equ	0
00000000 =00000001                  bitVBlankWait		equ	1
00000000 =00000002                  bitHBlankWait		equ	2
00000000 =00000003                  bitDontWaitHInt		equ	3
00000000 =00000004                  bitLockPads		equ	4
00000000 =00000005                  bitHotStart		equ	5
00000000 =00000006                  bitWaitHint		equ	6
00000000 =00000007                  bitHasTMSS		equ	7
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Game vars
00000000                            ; ----------------------------------------
00000000                            
00000000                            ; =====================================================
00000000                            ; ----------------------------------------
00000000                            ; Mode buffer
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFF6800                  RAM_SharedBuffer	rs.b	$80
00000000 =FFFF6880                  RAM_ModeBuffer		rs.b	$7000
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Work stuff
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFD880                  RAM_VIntJumpTo		rs.w	1		;DONT SEPARATE
00000000 =FFFFD882                  RAM_VIntAddr		rs.l	1		;*
00000000 =FFFFD886                  RAM_HIntJumpTo		rs.w	1		;DONT SEPARATE
00000000 =FFFFD888                  RAM_HIntAddr		rs.l	1		;*
00000000                            
00000000 =FFFFD88C                  RAM_FrameCount		rs.l	1
00000000 =FFFFD890                  RAM_VIntWait		rs.b 	1
00000000 =FFFFD891                  RAM_GameMode		rs.b 	1
00000000 =FFFFD892                  RAM_Joypads		rs.b	$40
00000000 =FFFFD8D2                  RAM_SprControl		rs.b	$10
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Sound
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFD8E2                  RAM_SndDriver		rs.b	$400
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; DMA
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFDCE2                  RAM_DMA_Buffer		rs.b	$400
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; PalFade
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFE0E2                  RAM_PalFadeControl	rs.b	$10*2
00000000                            			
00000000 =FFFFE102                  RAM_PalFadeBuff		rs.w	64
00000000 =FFFFE182                  RAM_PalFadeBuffHint	rs.w	64
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Visual stuff
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFE202                  RAM_HorBuffer		rs.l	240;224
00000000 =FFFFE5C2                  RAM_VerBuffer		rs.l	(320/16)
00000000 =FFFFE612                  RAM_SprBuffer		rs.b	(8*80)
00000000 =FFFFE892                  RAM_PalBuffer		rs.w	64
00000000 =FFFFE912                  RAM_VdpRegs		rs.b	$18
00000000                            
00000000 =FFFFE92A                  RAM_VerBufferHint	rs.l	(320/16)
00000000 =FFFFE97A                  RAM_SprBufferHint	rs.l	(8*80)
00000000 =FFFFF37A                  RAM_PalBufferHint	rs.w	64
00000000                            
00000000                            ; =====================================================
00000000                            ; ----------------------------------------
00000000                            ; Last RAM
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFF3FA                  RAM_End			rs.b	0
00000000                            ;                                 inform 0,"RAM ENDS AT: %h",RAM_End
00000000                            ;                         inform 0,"%h",RAM_FrameCount
00000000                            ;                         inform 0,"%h",RAM_FrameCount
00000000                            		include	"mars/incl/68k_map.asm"
00000000                            ;-------------------------------------------------------;
00000000                            ;	MARS Sample Program
00000000                            ;	Mega Drive Map
00000000                            ;
00000000                            ;	Copyright SEGA ENTERPRISES,LTD. 1994
00000000                            ;-------------------------------------------------------;
00000000                            
00000000 =00600000                  wordram		equ	$600000
00000000                            
00000000 =00840000                  framebuffer	equ	$840000
00000000 =00860000                  overwrite	equ	$860000
00000000 =00880000                  marsipl		equ	$880000
00000000 =00900000                  marsbank	equ	$900000
00000000                            
00000000                            *---------------------------------------------------------------*
00000000 =00A00000                  zprg_ram	equ	$a00000
00000000                            
00000000                            *---------------------------------------------------------------*
00000000 =00000000                  _versionflag	equ	0
00000000 =00A10001                  _version	equ	$a10001		; byte		 md version
00000000 =00A10003                  _port_a		equ	$a10003		; byte		 joy pad a
00000000 =00A10005                  _port_b		equ	$a10005		; byte		 joy pad b
00000000 =00A10007                  _port_c		equ	$a10007		; byte		 joy pad c
00000000 =00A10009                  _pa_cont	equ	$a10009		; byte		 joy pad a control
00000000 =00A1000B                  _pb_cont	equ	$a1000b		; byte		 joy pad b control
00000000 =00A1000D                  _pc_cont	equ	$a1000d		; byte		 joy pad c control
00000000 =00A11000                  _cartmode	equ	$a11000		; word
00000000                            
00000000                            *---------------------------------------------------------------*
00000000 =00A11100                  z_brq		equ	$a11100				; Z80 bus request
00000000 =00A11200                  z_res		equ	$a11200				; Z80 reset
00000000                            
00000000                            *---------------------------------------------------------------*
00000000 =00A130EC                  mars_ID		equ	$a130ec		; long		 MARS ID "MARS"
00000000 =00A130F1                  bankchip	equ	$a130f1		;		 Bank Chip Reg.0
00000000                            
00000000                            *---------------------------------------------------------------*
00000000 =00000001                  _securityflag	equ	1
00000000 =00A14000                  _securityaddr	equ	$a14000		; long		 md security
00000000 =00A14100                  _v6os		equ	$a14100		; word
00000000                            
00000000                            *---------------------------------------------------------------*
00000000 =00A15100                  marsreg		equ	$a15100
00000000 =00000000                  access		equ	$00		; byte		; MARS VDP access control
00000000 =00000001                  adapter		equ	$01		; byte		; MARS adapter control
00000000 =00000003                  intctl		equ	$03		; byte		; SH2 interrupt control
00000000 =00000005                  bankctl		equ	$05		; byte		; BANK conterol
00000000 =00000007                  dreqctl		equ	$07		; byte		; DREQ control
00000000 =00000008                  dreqsource	equ	$08		; long		; 68 to SH DREQ source address
00000000 =0000000C                  dreqdest	equ	$0c		; long		; 68 to SH DREQ destination address
00000000 =00000010                  dreqlength	equ	$10		; word		; 68 to SH DREQ length
00000000 =00000012                  dreqfifo	equ	$12		; word		; 68 to SH DREQ FIFO
00000000 =0000001B                  segatv		equ	$1b		; byte		; SEGA TV Reg.
00000000 =00000020                  comm0		equ	$20		; 		; Communcation Reg.
00000000 =00000022                  comm2		equ	$22		; 		; Communcation Reg.
00000000 =00000024                  comm4		equ	$24		; 		; Communcation Reg.
00000000 =00000026                  comm6		equ	$26		; 		; Communcation Reg.
00000000 =00000028                  comm8		equ	$28		; 		; Communcation Reg.
00000000 =00000029                  comm9		equ	$29		; 		; Communcation Reg.
00000000 =0000002A                  comm10		equ	$2a		; 		; Communcation Reg.
00000000 =0000002C                  comm12		equ	$2c		; 		; Communcation Reg.
00000000 =0000002E                  comm14		equ	$2e		; 		; Communcation Reg.
00000000                            
00000000 =00000080                  tvmode		equ	$80		; byte		; NTSC/PAL
00000000 =00000081                  bitmapmode	equ	$81		; byte		; BitMap Mode Reg.
00000000 =00000083                  shift		equ	$83		; byte		; Packed Pixel Dot Shift
00000000 =00000085                  filllength	equ	$85		; byte		; DRAM Fill Length
00000000 =00000086                  fillstart	equ	$86		; word		; DRAM Fill Start Address
00000000 =00000088                  filldata	equ	$88		; word		; DRAM Fill Data
00000000 =0000008A                  vdpsts		equ	$8a		; byte		; VDP status
00000000 =0000008B                  framectl	equ	$8b		; byte		; Frame Buffer Control
00000000                            
00000000 =00A15200                  palette		equ	$a15200		; 256 words	; Palette Data
00000000                            
00000000                            
00000000 =00C00000                  _vdpdata	equ	$c00000				; vdp data port
00000000 =00C00004                  _vdpreg		equ	$c00004				; vdp register
00000000                            
00000000                            
00000000                            
00000000                            ;---------------------------------------------------------------;
00000000                            ;	Bit Assign
00000000                            ;---------------------------------------------------------------;
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; access
00000000                            ;-------------------------------------------------------;
00000000 =00000007                  FM		equ	7		; 0:MD		/1: SH
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; adapter
00000000                            ;-------------------------------------------------------;
00000000 =00000000                  ADEN		equ	0		; 0: disenable 	/1: enable
00000000 =00000001                  RES		equ	1		; 0: SH2 reset 	/1: SH2 reset off
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; intctl
00000000                            ;-------------------------------------------------------;
00000000 =00000000                  INTM		equ	0		; 0: NOP	/1: master CMD INT
00000000 =00000001                  INTS		equ	1		; 0: NOP	/1: slave  CMD INT
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; dreqctl
00000000                            ;-------------------------------------------------------;
00000000 =00000000                  RV		equ	0		; 0: NOP	/1: ROM to VRAM DMA
00000000 =00000001                  DMA		equ	1		; 0: CPU write	/1: DMA write
00000000 =00000002                  D68S		equ	2		; 0: NOP	/1: DREQ start
00000000 =00000003                  DSEL		equ	3		; 0: FIFO to SD /1: ROM to PWM
00000000 =00000007                  FULL		equ	7		; 0: empty	/1: full
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; segatv
00000000                            ;-------------------------------------------------------;
00000000 =00000000                  CM		equ	0		; 0: ROM	/1: DRAM
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; tvmode
00000000                            ;-------------------------------------------------------;
00000000 =00000007                  PAL		equ	7		; 0:NTSC	/1: PAL
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; bitmapmode
00000000                            ;-------------------------------------------------------;
00000000 =00000006                  L240		equ	6		; 0:224line	/1: 240line
00000000 =00000007                  PRI		equ	7
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; shift
00000000                            ;-------------------------------------------------------;
00000000 =00000000                  SFT		equ	0		; 0:Nomal	/1: Dot Shift
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; vdpsts
00000000                            ;-------------------------------------------------------;
00000000 =00000005                  PEN		equ	5		; 0:Palette EN	/1: Palette DisEN
00000000 =00000006                  HBLK		equ	6		; 0:Disp	/1: Blank
00000000 =00000007                  VBLK		equ	7		; 0:Disp	/1: Blank
00000000                            
00000000                            ;-------------------------------------------------------;
00000000                            ; framectl
00000000                            ;-------------------------------------------------------;
00000000 =00000000                  FS		equ	0		; 0:DRAM0	/1: DRAM1
00000000 =00000001                  FEN		equ	1		; 0:access EN	/1: access DisEN
00000000                            
00000000                            
00000000                            		
00000000                            ; ====================================================================
00000000                            ; ---------------------------------------------
00000000                            ; Header / Init
00000000                            ; ---------------------------------------------
00000000                            
00000000                            		include "mars/init.asm"
00000000                            ; ====================================================================
00000000                            ; -----------------------------------------------------------------
00000000                            ; Header
00000000                            ; -----------------------------------------------------------------
00000000                            
00000000                            		include	"mars/sh2/include/shared_map.asm"
00000000                            ; ==================================================================
00000000                            ; ---------------------------------------------------
00000000                            ; SH2 variables
00000000                            ; 
00000000                            ; For both SH2 and 68k
00000000                            ; ---------------------------------------------------
00000000                            
00000000 =00008000                  sizeof_code		equ	$8000
00000000                            
00000000 =06000000                  MasterEntry		equ	$06000000
00000000 =06008000                  SlaveEntry		equ	$06000000+sizeof_code
00000000 =06010000                  Sh2_CodeEnd		equ	$06000000+(sizeof_code*2)
00000000                            
00000000                            ; ---------------------------------------------------
00000000                            ; Variables
00000000                            ; ---------------------------------------------------
00000000                            
00000000                            ; 			rsreset
00000000                            ; m_loadpic		rs.b 1
00000000                            ; m_loadpic		rs.b 1
00000000                            		
00000000                            		org 0
00000000 0000 0000                  		dc.l 0
00000004 0000 03F0 0000 03F0 0000+  		dcb.l $B,$3F0
00000030 0000 0000 0000 0000 0000+  		cnop 0,$70
00000070 0000 0000                                  dc.l MD_Hint&$7FFFF
00000074 0000 0000                  		cnop 0,$78
00000078 0000 0000                                  dc.l MD_Vint&$7FFFF
0000007C                            
0000007C 0000 0000 0000 0000 0000+  		cnop 0,$100
00000100 5345 4741 2033 3258 2020+  		dc.b "SEGA 32X        "
00000110                            		cnop 0,$110
00000110 2843 2947 4636 3420 3230+  		dc.b "(C)GF64 2016.???"
00000120                                            cnop 0,$120
00000120 3F3F 3F3F 3F3F 3F3F 3F3F+  		dc.b "?????????????????????                           "
00000150                                            cnop 0,$150
00000150 4C61 636B 206F 6620 6964+                  dc.b "Lack of ideas: the videogame MARS               "
00000180 474D 2048 4F4D 4542 5245+                  dc.b "GM HOMEBREW-00"
0000018E 0000                                       cnop 0,$190
00000190 4A20 2020 2020 2020 2020+  		dc.b "J               "
000001A0                            
000001A0 0000 0000                  		dc.l 0
000001A4 0000 0000                  		dc.l MD_RomEnd
000001A8 00FF 0000                  		dc.l $FF0000
000001AC 00FF FFFF                  		dc.l $FFFFFF
000001B0 5241 E820                  		dc.b "RA",$E8,$20
000001B4 0020 0000                  		dc.l $200000
000001B8 0020 3FFF                  		dc.l $203FFF
000001BC                            
000001BC 0000 0000 0000 0000 0000+  		cnop 0,$1F0
000001F0 5520 2020 2020 2020 2020+  		dc.b "U               "
00000200                            
00000200                            ; ----------------------------------------
00000200                            ; MARS vector
00000200                            ; ----------------------------------------
00000200                            
00000200                                            cnop 0,$200
00000200 4EF9 0000 0000             		jmp	MD_Entry
00000206 0000 0000 0000 0000 0000+  		cnop 0,$2A2
000002A2 4EF9 0000 0000             		jmp	MD_Hint
000002A8 0000 0000 0000             		cnop 0,$2AE
000002AE 4EF9 0000 0000             		jmp	MD_Vint
000002B4                            		
000002B4                            ; ----------------------------------------
000002B4                            ; MARS User Header
000002B4                            ; ----------------------------------------
000002B4                            
000002B4                            		cnop 0,$3C0
000003C0 2A33 3278 2043 6865 636B+  		dc.b "*32x Check Mode*"				; module name
000003D0 0000 0000                  		dc.l 0						; version
000003D4 0000 0000                  		dc.l SH2_Start					; SH2 Program start address
000003D8 0000 0000                  		dc.l 0						; SH2 Program write address
000003DC 0000 0000                  		dc.l SH2_End-SH2_Start				; SH2 Program length
000003E0 0600 0120                  		dc.l MasterEntry+$120				; Master SH2 initial PC
000003E4 0600 8120                  		dc.l SlaveEntry+$120				; Slave SH2 initial PC
000003E8 0600 0000                  		dc.l MasterEntry				; Master SH2 initial VBR address
000003EC 0600 8000                  		dc.l SlaveEntry					; Slave SH2 intitial VBR address
000003F0                            	
000003F0                            		incbin	"mars/incl/security.bin"
00000800                            		
00000800                            ; ----------------------------------------
00000800                            ; Finished checking
00000800                            ; ----------------------------------------
00000800                            
00000800 6500 0000                   		bcs	@NoMars
00000804                             
00000804                            ; ----------------------------------------
00000804                            ; Init already...
00000804                            ; ----------------------------------------
00000804                            
00000804                            @init:
00000804 46FC 2700                  		move	#$2700,sr
00000808 4BF9 00A1 5100             		lea	(marsreg),a5
0000080E                            		
0000080E 0CAD 4D5F 4F4B 0020        @M_OK:		cmp.l	#'M_OK',$20(a5)
00000816 6600 FFF6                  		bne	@M_OK
0000081A 0CAD 535F 4F4B 0024        @S_OK:		cmp.l	#'S_OK',$24(a5)
00000822 6600 FFF6                  		bne	@S_OK
00000826                            
00000826 7000                       		moveq	#0,d0
00000828 2B40 0020                  		move.l	d0,$20(a5)
0000082C 2B40 0024                  		move.l	d0,$24(a5)
00000830                            		
00000830 4EF9 0000 0000              		jmp	MD_Entry
00000836                             		
00000836                            ; ===========================================================================
00000836                            ; ----------------------------------------
00000836                            ; 32x not inserted
00000836                            ; ----------------------------------------
00000836                            
00000836                            @NoMars:
00000836 46FC 2700                  		move.w	#$2700,sr
0000083A                            		
0000083A 4EB9 0000 0000             		jsr	(Vdp_Init)&$7FFFF
00000840 4EB9 0000 0000             		jsr	(Vdp_Update)&$7FFFF	
00000846 33FC 4EF9 FFFF D880        		move.w	#$4EF9,(RAM_VIntJumpTo)
0000084E 23FC 0000 0000 FFFF D882   		move.l	#MiniVint,(RAM_VIntAddr)
00000858                            
00000858                            ; 		lea	NoMars_Pal(pc),a0
00000858                            ; 		lea	(RAM_PalFadeBuff),a1
00000858                            ; 		move.w	#$F,d0
00000858                            ; @loadpal:
00000858                            ; 		move.w	(a0)+,(a1)+
00000858                            ; 		dbf	d0,@loadpal
00000858                            ; 		
00000858                            ; 		lea	NoMars_Art(pc),a0
00000858                            ; 		move.l	#$40200000,($C00004)
00000858                            ; 		move.w	#(NoMars_Art_End-NoMars_Art)/4,d0
00000858                            ; @loadart:
00000858                            ; 		move.l	(a0)+,($C00000)
00000858                            ; 		dbf	d0,@loadart
00000858                            ; 
00000858                            ; 		lea	NoMars_Map(pc),a0
00000858                            ;  		moveq	#0,d0
00000858                            ; 		move.l	#($000A<<16)|$0009,d1
00000858                            ;  		move.l	#((((160)/8)-1)<<16)|(((72)/8)-1),d2
00000858                            ; 		move.w	#1,d3
00000858                            ; 		jsr	(VDP_LoadMaps)&$7FFFF
00000858                            ; 		
00000858                            ; 		move.w	#$2000,sr
00000858                            ; 		
00000858                            ; 		moveq	#ID_FadeIn,d0
00000858                            ; 		move.l	#$000F0008,d1
00000858                            ;  		jsr	(PalFade_Set)&$7FFFF
00000858                            ;  		jsr	(PalFade_Wait)&$7FFFF
00000858                            		
00000858                            @loop:
00000858                            ; 		jsr	(VSync)&$7FFFF
00000858                            		
00000858 4E71                       		nop
0000085A 4E71                       		nop
0000085C 6000 FFFA                  		bra	@loop
00000860                            
00000860                            ; -----------------------------------------------------------------
00000860                            
00000860                            MiniVint:
00000860 4EB9 0000 0000             		jsr	(PalFade)&$7FFFF
00000866                            		
00000866 4DF9 FFFF E892             		lea	(RAM_PalBuffer),a6
0000086C 23FC C000 0000 00C0 0004   		move.l	#$C0000000,($C00004).l
00000876 303C 003F                  		move.w	#$3F,d0
0000087A                            @PalBuf:
0000087A 33DE 00C0 0000             		move.w	(a6)+,($C00000).l
00000880 51C8 FFF8                  		dbf	d0,@PalBuf
00000884 4E75                       		rts
00000886                            
00000886                            ; -----------------------------------------------------------------
00000886                            
00000886                            ; NoMars_Art:	incbin "engine/misc/nomars/art.bin"
00000886                            ; NoMars_Art_End:
00000886                            ; 		even
00000886                            ; NoMars_Pal:	incbin "engine/misc/nomars/pal.bin"
00000886                            ; 		even
00000886                            ; NoMars_Map:	incbin "engine/misc/nomars/map.bin"
00000886                            ; 		even
00000886                            ; 		
00000886                            ; ===========================================================================
00000886                            ; -----------------------------------------------------------------
00000886                            ; Startup code
00000886                            ; -----------------------------------------------------------------
00000886                            
00000886                             		obj *+marsipl
00880886                            MD_Entry:	
00880886 08B9 0007 00A1 5100        		bclr 	#FM,(marsreg+access)
0088088E                            ;  		bsr	Mars_InitVdpFrame
0088088E                            		
0088088E 6100 0000                  		bsr	Vdp_Init
00880892 6100 0000                  		bsr	Vdp_Update
00880896                            
00880896 13FC 0000 FFFF D891        		move.b	#0,(RAM_GameMode)
0088089E 6000 0000                  		bra 	MD_Main
008808A2                            		
008808A2                            		
008808A2                            		
008808A2                            ; ====================================================================
008808A2                            ; ---------------------------------------------
008808A2                            ; IPL
008808A2                            ; ---------------------------------------------
008808A2                            
008808A2                            		include	"engine/main.asm"
008808A2                            ; ====================================================================
008808A2                            ; -------------------------------------------------
008808A2                            ; Start
008808A2                            ; -------------------------------------------------
008808A2                            
008808A2                            MD_Main:
008808A2 46FC 2700                  		move.w	#$2700,sr
008808A6                            
008808A6 33FC 4EF9 FFFF D880        		move.w	#$4EF9,(RAM_VIntJumpTo)
008808AE 33FC 4EF9 FFFF D886        		move.w	#$4EF9,(RAM_HIntJumpTo)	
008808B6 23FC 0000 0000 FFFF D882   		move.l	#VInt_Default,(RAM_VIntAddr)
008808C0 23FC 0000 0000 FFFF D888   		move.l	#Hint_Default,(RAM_HIntAddr)
008808CA                            		
008808CA 42B9 FFFF DCE2             		clr.l	(RAM_DMA_Buffer)
008808D0 6100 0000                  		bsr	SRAM_Init
008808D4 6100 0000                  		bsr	Vdp_Init
008808D8 6100 0000                  		bsr	SMEG_Init
008808DC 6100 0000                  		bsr	Pads_Init
008808E0 46FC 2000                   		move.w	#$2000,sr
008808E4                            		
008808E4                            ; -------------------------------------------------
008808E4                            ; Modes
008808E4                            ; -------------------------------------------------
008808E4                            
008808E4                            @RunMode:
008808E4 7000                                       moveq	#0,d0
008808E6 1039 FFFF D891                             move.b	(RAM_GameMode),d0
008808EC E548                                       lsl.w	#2,d0
008808EE 0240 00FC                                  and.w	#%11111100,d0
008808F2 41FA 0000                                  lea	GameModes(pc),a0
008808F6 2070 0000                                  movea.l	(a0,d0.w),a0
008808FA 4E90                                       jsr	(a0)
008808FC 60E6                                       bra.s	@RunMode
008808FE                            		
008808FE                            ; ====================================================================
008808FE                            ; ====================================================================
008808FE                            
008808FE                            ; -------------------------------------------------
008808FE                            ; Mode list
008808FE                            ; -------------------------------------------------
008808FE                            
008808FE                            GameModes:
008808FE 0000 0000                   		dc.l mode_Title
00880902                            ;  		dc.l mode_Level
00880902                             		even
00880902                            
00880902                            ; ====================================================================
00880902                            ; ---------------------------------------------
00880902                            ; MARS subs
00880902                            ; ---------------------------------------------
00880902                            
00880902                            		include	"mars/subs.asm"
00880902                            ; ====================================================================
00880902                            ; ---------------------------------------------
00880902                            ; Variables
00880902                            ; ---------------------------------------------
00880902                            
00880902 =FFFF7800                  RAM_MarsPalette equ	$FFFF7800
00880902 =FFFF7A00                  RAM_MarsPalFade equ	$FFFF7A00
00880902                            
00880902                            ; ---------------------------------------------
00880902                            ; Variables
00880902                            ; ---------------------------------------------
00880902                            
00880902 =0000000F                  MARSVDP_SwapFB	equ	$F
00880902 =00000010                  MARS3D_Run	equ	$10
00880902 =00000020                  MARS3D_New	equ	$20
00880902 =00000022                  MARS3D_SetXYZ	equ	$22
00880902 =00000023                  MARS3D_RotXYZ	equ	$23
00880902                            
00880902                            ; ---------------------------------------------
00880902                            ; Communications
00880902                            ; ---------------------------------------------
00880902                            
00880902                            Mars_Task_Master:
00880902 13C0 00A1 5120             		move.b	d0,(marsreg+comm0)
00880908 08F9 0000 00A1 5103          		bset 	#0,(marsreg+intctl)
00880910 4E75                       		rts
00880912                            
00880912                            Mars_Wait_Master:
00880912 4A39 00A1 5120              		tst.b	(marsreg+comm0)
00880918 66F8                        		bne.s	Mars_Wait_Master		
0088091A                            ;   		btst 	#0,(marsreg+intctl)
0088091A                            ;  		bne.s	Mars_Wait_Master
0088091A 4E75                        		rts
0088091C                            
0088091C                            Mars_Wait_Master_Flag:
0088091C 70FF                        		moveq	#-1,d0
0088091E 4A39 00A1 5120                		tst.b	(marsreg+comm0)
00880924 6600                        		bne.s	@Working 		
00880926                            ;   		btst 	#0,(marsreg+intctl)
00880926                            ;  		bne.s	@Working
00880926 7000                       		moveq	#0,d0
00880928                            @Working:
00880928 4A40                       		tst.w	d0
0088092A 4E75                        		rts
0088092C                             		
0088092C                            ; ---------------------------------------------
0088092C                            
0088092C                            Mars_Task_Slave:
0088092C 0240 000F                  		and.w	#%00001111,d0
00880930 8139 00A1 5121             		or.b	d0,(marsreg+comm0+1)
00880936 08F9 0001 00A1 5103         		bset 	#1,(marsreg+intctl)
0088093E 4E75                       		rts
00880940                            
00880940                            Mars_Wait_Slave:
00880940 48E7 4000                  		movem.l	d1,-(sp)
00880944                            @Wait:
00880944 1239 00A1 5121             		move.b	(marsreg+comm0+1),d1
0088094A 0241 000F                  		and.w	#$F,d1
0088094E 4A01                          		tst.b	d1
00880950                            ;  		btst	#1,(marsreg+intctl)
00880950 66F2                        		bne.s	@Wait
00880952 4CDF 0002                   		movem.l	(sp)+,d1
00880956 4E75                        		rts
00880958                            
00880958                            Mars_Wait_Slave_Flag:
00880958 48E7 4000                  		movem.l	d1,-(sp)
0088095C 70FF                       		moveq	#-1,d0
0088095E 1239 00A1 5121             		move.b	(marsreg+comm0+1),d1
00880964 0241 000F                  		and.w	#$F,d1
00880968 4A01                          		tst.b	d1
0088096A                            ; 		btst	#1,(marsreg+intctl)
0088096A 6600                        		bne.s	@Working
0088096C 7000                       		moveq	#0,d0
0088096E                            @Working:
0088096E 4CDF 0002                   		movem.l	(sp)+,d1
00880972 4E75                        		rts
00880974                             		
00880974                            ; ====================================================================	
00880974                            ; ---------------------------------------------------
00880974                            ; MarsVdp_LoadPic
00880974                            ;
00880974                            ; Loads graphics
00880974                            ; 
00880974                            ; Input:
00880974                            ; a0 - Data
00880974                            ; d1 - Xpos
00880974                            ; d2 - Ypos
00880974                            ; d3 - Width
00880974                            ; d4 - Height
00880974                            ; d5 - Mode
00880974                            ; ---------------------------------------------------
00880974                            
00880974                            MarsVdp_LoadPic:
00880974 2040                       		movea.l	d0,a0
00880976                            ; 		mov	r6,r0
00880976                            ;  		cmp/eq	#3,r0
00880976                            ; 		bt	@rle_art
00880976                            ;  		cmp/eq	#2,r0
00880976                            ; 		bt	@hicolor_art
00880976                            ; 
00880976 43F9 0084 0200             		lea	(framebuffer+$200),a1
0088097C D2C1                       		adda	d1,a1
0088097E 4A42                       		tst.w	d2
00880980 6700                       		beq.s	@zero_y
00880982 0442 0001                  		sub.w	#1,d2
00880986                            @next_y:
00880986 D2FC 0140                  		adda 	#320,a1
0088098A 51CA FFFA                  		dbf	d2,@next_y
0088098E                            @zero_y:
0088098E 3A03                       		move.w	d3,d5
00880990                            		
00880990 0C44 00E0                  		cmp.w	#224,d4
00880994 6F00                       		ble.s	@loop_y
00880996 383C 00E0                  		move.w	#224,d4
0088099A                            @loop_y:
0088099A 2448                       		movea.l	a0,a2
0088099C 2649                       		movea.l	a1,a3
0088099E                            @loop_x:
0088099E 12D8                       		move.b	(a0)+,(a1)+
008809A0 51CB FFFC                  		dbf	d3,@loop_x
008809A4 204A                       		movea.l	a2,a0
008809A6 224B                       		movea.l	a3,a1
008809A8 D0C5                       		adda 	d5,a0
008809AA D2C5                       		adda 	d5,a1
008809AC 3605                       		move.w	d5,d3
008809AE 51CC FFEA                  		dbf	d4,@loop_y
008809B2 4E75                       		rts
008809B4                            
008809B4                            ; ; -------------------------
008809B4                            ; ; mode 2
008809B4                            ; ; -------------------------
008809B4                            ; 
008809B4                            ; @hicolor_art:
008809B4                            ; 		mov.l	#_framebuffer+$200,r6
008809B4                            ;   		;Xadd here
008809B4                            ;   		;Yadd here
008809B4                            ; 
008809B4                            ;     		mov.l	#204,r0
008809B4                            ;     		cmp/gt	r0,r5
008809B4                            ;     		bf	@hloop_Y
008809B4                            ;     		mov.l	#204,r5
008809B4                            ; @hloop_Y:
008809B4                            ; 		mov.l	r6,r7			; Save framebuffer address
008809B4                            ; 		mov.l	r1,r8			; Save art address
008809B4                            ; 		mov.l	r4,r9			; Save width
008809B4                            ; 		
008809B4                            ; @hloop_X:
008809B4                            ; 		mov.l	#$0000,r2		; priority
008809B4                            ; 
008809B4                            ; 		mov.b	@r1+,r0			; R
008809B4                            ; 		and	#$FF,r0
008809B4                            ;  		shlr2	r0
008809B4                            ; 		shlr 	r0
008809B4                            ; 		add	r0,r2
008809B4                            ; 
008809B4                            ;  		mov.b	@r1+,r0			; G
008809B4                            ; 		and	#$FF,r0
008809B4                            ;  		shlr2	r0
008809B4                            ;  		shlr 	r0
008809B4                            ;  		shll2	r0
008809B4                            ;  		shll2	r0
008809B4                            ;  		shll	r0
008809B4                            ;  		add	r0,r2
008809B4                            ;  
008809B4                            ;  		mov.b	@r1+,r0			; B
008809B4                            ; 		and	#$FF,r0
008809B4                            ;  		shlr2	r0
008809B4                            ;  		shlr 	r0
008809B4                            ;  		shll8	r0
008809B4                            ;  		shll2	r0
008809B4                            ;  		add	r0,r2
008809B4                            ; 		
008809B4                            ; 		mov.w	r2,@r6
008809B4                            ; 		add.l	#2,r6
008809B4                            ; 		
008809B4                            ;  		dt	r4
008809B4                            ;  		bf	@hloop_X
008809B4                            ;  		
008809B4                            ; 		mov.l	r9,r4			; Restore width
008809B4                            ; 		mov.l	r8,r1			; Restore art address
008809B4                            ; 		mov.l	r7,r6			; Restore framebuffer address
008809B4                            ; 		
008809B4                            ; 		mov.l	#2,r0
008809B4                            ; 		mulu	r0,r4
008809B4                            ; 		mov	macl,r0
008809B4                            ; 		add	r0,r6
008809B4                            ; 		
008809B4                            ; 		mov.l	#3,r0
008809B4                            ; 		mulu	r0,r4
008809B4                            ; 		mov	macl,r0
008809B4                            ;      		add 	r0,r1
008809B4                            ; 		
008809B4                            ;  		dt	r5
008809B4                            ;  		bf	@hloop_Y
008809B4                            ;  		
008809B4                            ; 		rts
008809B4                            ; 		nop
008809B4                            ; 		cnop 0,4
008809B4                            ; 		lits
008809B4                            ; 	
008809B4                            ; ; -------------------------
008809B4                            ; ; mode 3
008809B4                            ; ; -------------------------
008809B4                            ; 
008809B4                            ; @rle_art:
008809B4                            ; 		mov.l	#_framebuffer+$200,r6
008809B4                            ;   		add	r2,r6			;X-pos
008809B4                            ;  
008809B4                            ;     		mov	#320,r0			;Y-pos
008809B4                            ;     		mulu	r3,r0
008809B4                            ;     		mov	macl,r0
008809B4                            ;     		add 	r0,r6
008809B4                            ; 
008809B4                            ; @rleloop_Y:
008809B4                            ; 		mov.l	r6,r7			; Save framebuffer address
008809B4                            ; 		mov.l	r1,r8			; Save art address
008809B4                            ; 		mov.l	r4,r9			; Save width
008809B4                            ; 
008809B4                            ; @rleloop_X:
008809B4                            ; 		mov.b	@r1+,r0
008809B4                            ; 		mov.b	r0,@r6
008809B4                            ;  		add 	#1,r6
008809B4                            ; 		
008809B4                            ;  		dt	r4
008809B4                            ;  		bf	@rleloop_X
008809B4                            ; 
008809B4                            ; 		mov.l	r9,r4			; Restore width
008809B4                            ; 		mov.l	r8,r1			; Restore art address
008809B4                            ; 		mov.l	r7,r6			; Restore framebuffer address
008809B4                            ; 		add	r4,r1			; art + width = new addr
008809B4                            ; 		add	r4,r6			; framebuffer + width = new addr
008809B4                            ; 
008809B4                            ; 		dt	r5
008809B4                            ; 		bf	@loop_Y
008809B4                            ; 		rts
008809B4                            ; 		nop
008809B4                            ; 		cnop 0,4
008809B4                            ; 		lits
008809B4                            		
008809B4                            		
008809B4                            ; 		mov.l	#_framebuffer,r8
008809B4                            ; 		mov.l	#$100,r6
008809B4                            ; 		mov.l	#(320/2),r5
008809B4                            ; 		mov.l	#224,r7
008809B4                            ; @mapset1:
008809B4                            ; 		mov.w	r6,@r8
008809B4                            ; 		add	#2,r8
008809B4                            ; 		add	r5,r6
008809B4                            ; 		dt	r7
008809B4                            ; 		bf	@mapset1
008809B4                            
008809B4                            
008809B4                            		
008809B4                            ; 		mov	#_vdpreg,r1
008809B4                            ; 		mov	#curr_frame,r2
008809B4                            ; 		mov.b	@(framectl,r1),r0
008809B4                            ; 		xor	#1,r0
008809B4                            ; 		mov.b	r0,@(framectl,r1)
008809B4                            ; 		mov.b	r0,@r2
008809B4                            ; 		mov	#_vdpreg,r1
008809B4                            ; 		mov	#curr_frame,r2
008809B4                            ; 		mov.b	@r2,r0
008809B4                            ; 		mov	r0,r2
008809B4                            ; @wait1:
008809B4                            ; 		mov.b	@(framectl,r1),r0
008809B4                            ; 		cmp/eq	r0,r2
008809B4                            ; 		bf	@wait1
008809B4                            		
008809B4                            ; 		rts
008809B4                            	
008809B4                            ; ---------------------------------------------------
008809B4                            ; MarsVdp_LoadPal_Raw | MarsVdp_LoadPalFade_Raw
008809B4                            ;
008809B4                            ; Loads RAW palette, modes 1 and 3 only.
008809B4                            ; 
008809B4                            ; Input:
008809B4                            ; a0 - input
008809B4                            ; a1 - output result
008809B4                            ; ---------------------------------------------------
008809B4                            
008809B4                            MarsVdp_LoadPal_Raw_Fade:
008809B4 0280 0007 FFFF             		and.l	#$7FFFF,d0
008809BA 2040                       		movea.l	d0,a0
008809BC 43F9 FFFF 7A00             		lea	(RAM_MarsPalFade),a1
008809C2 6000                       		bra.s	LoadPal_RawCont
008809C4                            		
008809C4                            MarsVdp_LoadPal_Raw:
008809C4 0280 0007 FFFF             		and.l	#$7FFFF,d0
008809CA 2040                       		movea.l	d0,a0
008809CC 43F9 FFFF 7800             		lea	(RAM_MarsPalette),a1
008809D2                            		
008809D2                            LoadPal_RawCont:
008809D2 343C 00FF                  		move.w	#256-1,d2
008809D6                            @Next:
008809D6 323C 0000                  		move.w	#$0000,d1		;prio
008809DA                            
008809DA 7000                       		moveq	#0,d0
008809DC 1018                        		move.b	(a0)+,d0		;R
008809DE 0240 00FF                     		and.w	#$FF,d0
008809E2 E648                          		lsr.w	#3,d0
008809E4 0240 001F                     		and.w	#%0000000000011111,d0
008809E8 8240                         		or.w	d0,d1
008809EA 1018                        		move.b	(a0)+,d0		;G
008809EC 0240 00FF                      		and.w	#$FF,d0
008809F0 E648                           		lsr.w	#3,d0
008809F2 EB48                           		lsl.w	#5,d0
008809F4 0240 03E0                     		and.w	#%0000001111100000,d0
008809F8 8240                         		or.w	d0,d1
008809FA 1018                         		move.b	(a0)+,d0		;B
008809FC 0240 00FF                      		and.w	#$FF,d0
00880A00 E648                           		lsr.w	#3,d0
00880A02 E148                           		lsl.w	#8,d0
00880A04 E548                           		lsl.w	#2,d0
00880A06 0240 7C00                     		and.w	#%0111110000000000,d0
00880A0A D240                         		add.w	d0,d1
00880A0C                             		
00880A0C 32C1                        		move.w	d1,(a1)+
00880A0E 51CA FFC6                   		dbf	d2,@Next
00880A12 4E75                        		rts
00880A14                             		
00880A14                            ; ---------------------------------------------
00880A14                            ; Tasks
00880A14                            ; 
00880A14                            ; 68k side
00880A14                            ; ---------------------------------------------
00880A14                            
00880A14                            Mars_InitVdpFrame:
00880A14                            ; 		move.b	d0,(marsreg+bitmapmode)
00880A14                            
00880A14 41F9 0084 0000             		lea	(framebuffer),a0
00880A1A 303C 0100                  		move.w	#$100,d0
00880A1E 323C 00A0                  		move.w	#(320/2),d1
00880A22 343C 00DF                  		move.w	#224-1,d2
00880A26                            @mapset1:
00880A26 30C0                       		move.w	d0,(a0)+
00880A28 D041                       		add.w	d1,d0
00880A2A 51CA FFFA                  		dbf	d2,@mapset1
00880A2E 0879 0000 00A1 518B        		bchg	#0,(marsreg+framectl)
00880A36                            		
00880A36 41F9 0084 0000             		lea	(framebuffer),a0
00880A3C 303C 0100                  		move.w	#$100,d0
00880A40 323C 00A0                  		move.w	#(320/2),d1
00880A44 343C 00DF                  		move.w	#224-1,d2
00880A48                            @mapset2:
00880A48 30C0                       		move.w	d0,(a0)+
00880A4A D041                       		add.w	d1,d0
00880A4C 51CA FFFA                  		dbf	d2,@mapset2
00880A50 0879 0000 00A1 518B        		bchg	#0,(marsreg+framectl)
00880A58 4E75                       		rts
00880A5A                            		
00880A5A                            ; ---------------------------------------------
00880A5A                            ; Tasks
00880A5A                            ; 
00880A5A                            ; Requesting from MD to SH2
00880A5A                            ; 
00880A5A                            ; Uses:
00880A5A                            ; d7
00880A5A                            ; ---------------------------------------------
00880A5A                            
00880A5A                            Mars_DoTask_Master:
00880A5A 7E00                       		moveq	#0,d7
00880A5C 3E00                       		move.w	d0,d7
00880A5E 4A47                       		tst.w	d7
00880A60 6700                       		beq.s	@No_Args
00880A62 DE47                       		add.w	d7,d7
00880A64 4840                       		swap	d0
00880A66 303B 7000                  		move.w	@Tasks(pc,d7.w),d0
00880A6A 4EBB 0000                  		jsr	@Tasks(pc,d0.w)
00880A6E 4840                       		swap	d0
00880A70                            @No_Args:
00880A70 0240 00FF                  		and.w	#$FF,d0
00880A74 6100 FE8C                  		bsr 	Mars_Task_Master
00880A78 6000 FE98                   		bra 	Mars_Wait_Master
00880A7C                             		
00880A7C                            ; ---------------------------------------------
00880A7C                            
00880A7C                            @Tasks:
00880A7C 0000                       		dc.w 0
00880A7E 0000                       		dc.w @cmd_1-@Tasks
00880A80 0000                       		dc.w @cmd_2_3-@Tasks
00880A82 0000                       		dc.w @cmd_2_3-@Tasks
00880A84 0000                       		dc.w 0
00880A86 0000                       		dc.w 0
00880A88 0000                       		dc.w 0
00880A8A 0000                       		dc.w 0
00880A8C 0000                       		dc.w 0
00880A8E 0000                       		dc.w 0
00880A90 0000                       		dc.w 0
00880A92 0000                       		dc.w 0
00880A94 0000                       		dc.w 0
00880A96 0000                       		dc.w 0
00880A98 0000                       		dc.w @cmd_E-@Tasks
00880A9A 0000                       		dc.w 0				;NO ARGS for $F
00880A9C                            		
00880A9C 0000                       		dc.w 0
00880A9E 0000                       		dc.w 0
00880AA0 0000                       		dc.w 0
00880AA2 0000                       		dc.w 0
00880AA4 0000                       		dc.w 0
00880AA6 0000                       		dc.w 0
00880AA8 0000                       		dc.w 0
00880AAA 0000                       		dc.w 0
00880AAC 0000                       		dc.w 0
00880AAE 0000                       		dc.w 0
00880AB0 0000                       		dc.w 0
00880AB2 0000                       		dc.w 0
00880AB4 0000                       		dc.w 0
00880AB6 0000                       		dc.w 0
00880AB8 0000                       		dc.w 0
00880ABA 0000                       		dc.w 0
00880ABC                            		
00880ABC 0000                       		dc.w @cmd_20-@Tasks
00880ABE 0000                       		dc.w 0
00880AC0 0000                       		dc.w 0
00880AC2 0000                       		dc.w 0
00880AC4 0000                       		dc.w 0
00880AC6 0000                       		dc.w 0
00880AC8 0000                       		dc.w 0
00880ACA 0000                       		dc.w 0
00880ACC 0000                       		dc.w 0
00880ACE 0000                       		dc.w 0
00880AD0 0000                       		dc.w 0
00880AD2 0000                       		dc.w 0
00880AD4 0000                       		dc.w 0
00880AD6 0000                       		dc.w 0
00880AD8 0000                       		dc.w 0
00880ADA 0000                       		dc.w 0
00880ADC                            		even
00880ADC                            		
00880ADC                            ; ---------------------------------------------------
00880ADC                            ; Command 01
00880ADC                            ; 
00880ADC                            ; Loads a bitmap to the framebuffer
00880ADC                            ; (must swap framebuffer to show it)
00880ADC                            ; 
00880ADC                            ; Input:
00880ADC                            ; d1 | LONG - Bitmap data (MARS SIDE Only)
00880ADC                            ; d2 | LONG - Xstart|Ystart
00880ADC                            ; d3 | LONG - Xsize|Ysize
00880ADC                            ; ---------------------------------------------------
00880ADC                            
00880ADC                            @cmd_1:
00880ADC 23C1 00A1 5124             		move.l	d1,(marsreg+comm4)
00880AE2 33C2 00A1 512A             		move.w	d2,(marsreg+comm10)
00880AE8 4842                       		swap	d2
00880AEA 33C2 00A1 5128             		move.w	d2,(marsreg+comm8)
00880AF0 33C3 00A1 512E             		move.w	d3,(marsreg+comm14)
00880AF6 4843                       		swap	d3
00880AF8 33C3 00A1 512C             		move.w	d3,(marsreg+comm12)
00880AFE 4E75                       		rts
00880B00                             		
00880B00                            ; ------------------------------------------------
00880B00                            ; Command 02/03
00880B00                            ;
00880B00                            ; Load palette for fade
00880B00                            ; 
00880B00                            ; d1 | LONG - Address
00880B00                            ; d2 | LONG - StartFrom|NumOfColors
00880B00                            ; ------------------------------------------------
00880B00                            
00880B00                            @cmd_2_3:
00880B00 23C1 00A1 5124             		move.l	d1,(marsreg+comm4)
00880B06 33C2 00A1 512A             		move.w	d2,(marsreg+comm10)
00880B0C 4842                       		swap	d2
00880B0E 33C2 00A1 5128             		move.w	d2,(marsreg+comm8)
00880B14 4E75                       		rts
00880B16                            	
00880B16                            ; ---------------------------------------------------
00880B16                            ; Command 0E
00880B16                            ; 
00880B16                            ; Sets the MARS Video mode
00880B16                            ; 
00880B16                            ; Input:
00880B16                            ; d1 | WORD - Mode ID
00880B16                            ; ---------------------------------------------------
00880B16                            
00880B16                            @cmd_E:
00880B16 0241 0003                  		and.w	#%11,d1
00880B1A 33C1 00A1 5124                 		move.w	d1,(marsreg+comm4)
00880B20 4E75                           		rts
00880B22                                
00880B22                            ; ---------------------------------------------------
00880B22                            ; Command 20
00880B22                            ; 
00880B22                            ; Set a 3D model
00880B22                            ; 
00880B22                            ; Input:
00880B22                            ; d1 | LONG - Model data (MARS SIDE Only)
00880B22                            ; d2 | WORD - Slot
00880B22                            ; ---------------------------------------------------
00880B22                            
00880B22                            @cmd_20:
00880B22 23C1 00A1 5124             		move.l	d1,(marsreg+comm4)
00880B28 33C2 00A1 5128             		move.w	d2,(marsreg+comm8)
00880B2E 4E75                       		rts
00880B30                             		
00880B30                            ; ---------------------------------------------------
00880B30                            ; MARS3D_Run
00880B30                            ; ---------------------------------------------------
00880B30                            
00880B30                            MarsSh2_3D_Run:
00880B30 6100 FDE0                        		bsr	Mars_Wait_Master
00880B34 7010                             		moveq	#$10,d0
00880B36 6100 FDCA                        		bsr	Mars_Task_Master
00880B3A 6000 FDD6                        		bra	Mars_Wait_Master
00880B3E                            
00880B3E                            ; ---------------------------------------------------
00880B3E                            ; MARS3D_RunDrop
00880B3E                            ; ---------------------------------------------------
00880B3E                            
00880B3E                            MarsSh2_3D_RunDrop:
00880B3E 6100 FDDC                        		bsr	Mars_Wait_Master_Flag
00880B42 6600                             		bne.s	@Wait
00880B44 7010                             		moveq	#$10,d0
00880B46 6100 FDBA                        		bsr	Mars_Task_Master
00880B4A                            @Wait:
00880B4A 4E75                       		rts
00880B4C                            		
00880B4C                            		
00880B4C                            		
00880B4C                            ; ====================================================================
00880B4C                            ; ---------------------------------------------
00880B4C                            ; Subs
00880B4C                            ; ---------------------------------------------
00880B4C                            
00880B4C                            		include	"engine/subs/vdp.asm"
00880B4C                            ; ====================================================================
00880B4C                            ; ---------------------------------------------
00880B4C                            ; VDP
00880B4C                            ; ---------------------------------------------
00880B4C                            
00880B4C =00000004                  bit_vdpHint	equ	4
00880B4C                            
00880B4C =00000081                  vdp_H40		equ	$81
00880B4C =00000000                  vdp_H32		equ	$00
00880B4C =00000006                  vdp_Double	equ	%00000110
00880B4C                            
00880B4C =00000002                  vdpReg_PattFG	equ	2			;00???000 = ???00000 00000000
00880B4C =00000003                  vdpReg_PattWD	equ	3			;
00880B4C =00000004                  vdpReg_PattBG	equ	4			;00000??? = ???00000 00000000
00880B4C =0000000A                  vdpReg_HVal	equ	$A
00880B4C =0000000B                  vdpReg_Scroll	equ	$B
00880B4C =0000000C                  vdpReg_HMode	equ	$C
00880B4C =00000010                  vdpReg_PlnSize	equ	$10
00880B4C =00000011                  vdpReg_WindowX	equ	$11
00880B4C =00000012                  vdpReg_WindowY	equ	$12
00880B4C                            
00880B4C                            ; --------------------------------------------
00880B4C                            ; Clear planes
00880B4C                            ; --------------------------------------------
00880B4C                            
00880B4C                            VDP_ClearPlanes:
00880B4C 6100                       		bsr.s	VDP_ClrPlane_FG
00880B4E                            
00880B4E                            VDP_ClrPlane_BG:
00880B4E 7000                       		moveq	#0,d0
00880B50 1039 FFFF E914             		move.b	(RAM_VdpRegs+vdpReg_PattFG),d0
00880B56 E148                       		lsl.w	#8,d0
00880B58 E548                       		lsl.w	#2,d0
00880B5A 6100 0000                  		bsr	VDP_VramToCmd
00880B5E 23C0 00C0 0004             		move.l	d0,($C00004).l
00880B64 303C 07FF                  		move.w	#$7FF,d0
00880B68                            @ClrBG:
00880B68 42B9 00C0 0000             		clr.l	($C00000).l
00880B6E 51C8 FFF8                  		dbf	d0,@ClrBG
00880B72 4E75                       		rts
00880B74                            
00880B74                            VDP_ClrPlane_FG:
00880B74 7000                       		moveq	#0,d0
00880B76 1039 FFFF E916             		move.b	(RAM_VdpRegs+vdpReg_PattBG),d0
00880B7C E148                       		lsl.w	#8,d0
00880B7E EB48                       		lsl.w	#5,d0
00880B80 6100 0000                  		bsr	VDP_VramToCmd
00880B84 23C0 00C0 0004             		move.l	d0,($C00004).l
00880B8A 303C 07FF                  		move.w	#$7FF,d0
00880B8E                            @ClrFG:
00880B8E 42B9 00C0 0000             		clr.l	($C00000).l
00880B94 51C8 FFF8                  		dbf	d0,@ClrFG
00880B98 4E75                       		rts
00880B9A                            
00880B9A                            ; --------------------------------------------
00880B9A                            ; VDP_ClearScroll
00880B9A                            ;
00880B9A                            ; Set both scrollings to $0000
00880B9A                            ; --------------------------------------------
00880B9A                            
00880B9A                            VDP_ClearScroll:
00880B9A 41F9 FFFF E202             		lea	(RAM_HorBuffer),a0
00880BA0 303C 00EF                  		move.w	#(240)-1,d0
00880BA4                            @ClrScrl:
00880BA4 4298                       		clr.l	(a0)+
00880BA6 51C8 FFFC                  		dbf	d0,@ClrScrl
00880BAA                            		
00880BAA 41F9 FFFF E5C2             		lea	(RAM_VerBuffer),a0
00880BB0 303C 0013                  		move.w	#(320/16)-1,d0
00880BB4                            @ClrVScrl:
00880BB4 4298                       		clr.l	(a0)+
00880BB6 51C8 FFFC                  		dbf	d0,@ClrVScrl
00880BBA 4E75                       		rts
00880BBC                            
00880BBC                            ; --------------------------------------------
00880BBC                            ; VDP_SendData_W, VDP_SendData_L
00880BBC                            ;
00880BBC                            ; Input:
00880BBC                            ; a0 - Data address
00880BBC                            ;
00880BBC                            ; d0 | VRAM Address
00880BBC                            ; d1 | Data size
00880BBC                            ; --------------------------------------------
00880BBC                            
00880BBC                            VDP_SendData_W:
00880BBC EB48                       		lsl.w	#5,d0
00880BBE 6100 0000                  		bsr	VDP_VramToCmd
00880BC2 23C0 00C0 0004             		move.l	d0,($C00004)
00880BC8                            @Loop:
00880BC8 33D8 00C0 0000             		move.w	(a0)+,($C00000).l
00880BCE 51C9 FFF8                  		dbf	d1,@Loop
00880BD2 4E75                       		rts
00880BD4                            
00880BD4                            VDP_SendData_L:
00880BD4 EB48                       		lsl.w	#5,d0
00880BD6 6100 0000                  		bsr	VDP_VramToCmd
00880BDA 23C0 00C0 0004             		move.l	d0,($C00004)
00880BE0                            @Loop:
00880BE0 23D8 00C0 0000             		move.l	(a0)+,($C00000).l
00880BE6 51C9 FFF8                  		dbf	d1,@Loop
00880BEA 4E75                       		rts
00880BEC                            
00880BEC                            ; --------------------------------------------
00880BEC                            ; VDP_VramToCmd
00880BEC                            ;
00880BEC                            ; Input:
00880BEC                            ; d0 | WORD - VRAM to convert
00880BEC                            ;
00880BEC                            ; Output:
00880BEC                            ; d0 | LONG - VDP Command (Write mode)
00880BEC                            ; --------------------------------------------
00880BEC                            
00880BEC                            VDP_VramToCmd:
00880BEC 0C40 4000                  		cmp.w	#$4000,d0
00880BF0 6500                       		bcs.s	@NoBank
00880BF2 4840                       		swap	d0
00880BF4 303C 0001                  		move.w	#1,d0
00880BF8 4840                       		swap	d0
00880BFA 0C40 8000                  		cmp.w	#$8000,d0
00880BFE 6500                       		bcs.s	@NoBank	
00880C00 4840                       		swap	d0
00880C02 303C 0002                  		move.w	#2,d0
00880C06 4840                       		swap	d0
00880C08 0C40 C000                  		cmp.w	#$C000,d0
00880C0C 6500                       		bcs.s	@NoBank	
00880C0E 4840                       		swap	d0
00880C10 303C 0003                  		move.w	#3,d0
00880C14 4840                       		swap	d0
00880C16                            @NoBank:
00880C16 0240 3FFF                    		and.w	#$3FFF,d0
00880C1A 0040 4000                    		or.w	#$4000,d0
00880C1E 4840                          		swap	d0
00880C20 4E75                       		rts
00880C22                            		
00880C22                            ; --------------------------------------------
00880C22                            ; VDP_ShowVal (variants)
00880C22                            ; 
00880C22                            ; Input:
00880C22                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
00880C22                            ; d1 | LONG - XPos (WORD) | YPos (WORD)
00880C22                            ; d2 | WORD - VRAM
00880C22                            ; d3 | LONG - Value
00880C22                            ; 
00880C22                            ; Uses:
00880C22                            ; d4-d5
00880C22                            ; --------------------------------------------
00880C22                            
00880C22                            ; HEX 
00880C22                            
00880C22                            VDP_ShowVal_Nibl:
00880C22 6100 0000                  		bsr	vdpshv_findvdppos
00880C26 E14B                       		lsl.w	#8,d3
00880C28 E94B                       		lsl.w	#4,d3
00880C2A 4843                       		swap	d3
00880C2C 7800                       		moveq	#(1)-1,d4
00880C2E 6000 0000                  		bra	vdpshv_showval
00880C32                            VDP_ShowVal_B:
00880C32 6100 0000                  		bsr	vdpshv_findvdppos
00880C36 E14B                       		lsl.w	#8,d3
00880C38 4843                       		swap	d3
00880C3A 7801                       		moveq	#(1*2)-1,d4
00880C3C 6000 0000                  		bra	vdpshv_showval
00880C40                            VDP_ShowVal_W:
00880C40 6100 0000                  		bsr	vdpshv_findvdppos
00880C44 4843                       		swap	d3
00880C46 7803                       		moveq	#(2*2)-1,d4
00880C48 6000 0000                  		bra	vdpshv_showval
00880C4C                            VDP_ShowVal_L:
00880C4C 6100 0000                  		bsr	vdpshv_findvdppos
00880C50 7807                       		moveq	#(4*2)-1,d4
00880C52 6000 0000                  		bra	vdpshv_showval
00880C56                            	
00880C56                            ; DEC
00880C56                            ; WARNING: semi-slow
00880C56                            
00880C56                            VDP_ShowValDec_Nibl:
00880C56 6100 0000                  		bsr	vdpshv_findvdppos
00880C5A                            ; 		bsr	vdpshv_hextobcd
00880C5A E14B                       		lsl.w	#8,d3
00880C5C E94B                       		lsl.w	#4,d3
00880C5E 4843                       		swap	d3
00880C60 7800                       		moveq	#(1)-1,d4
00880C62 6000 0000                  		bra	vdpshv_showval
00880C66                            		
00880C66                            VDP_ShowValDec_B:
00880C66 6100 0000                  		bsr	vdpshv_findvdppos
00880C6A                            ; 		bsr	vdpshv_hextobcd
00880C6A E14B                       		lsl.w	#8,d3
00880C6C 4843                       		swap	d3
00880C6E 7801                       		moveq	#(1*2)-1,d4
00880C70 6000 0000                  		bra	vdpshv_showval
00880C74                            VDP_ShowValDec_W:
00880C74 6100 0000                  		bsr	vdpshv_findvdppos
00880C78                            ; 		bsr	vdpshv_hextobcd
00880C78 4843                       		swap	d3
00880C7A 7803                       		moveq	#(2*2)-1,d4
00880C7C 6000 0000                  		bra	vdpshv_showval
00880C80                            VDP_ShowValDec_L:
00880C80 6100 0000                  		bsr	vdpshv_findvdppos
00880C84                            ; 		bsr	vdpshv_hextobcd
00880C84 7807                       		moveq	#(4*2)-1,d4
00880C86 6000 0000                  		bra	vdpshv_showval
00880C8A                            		
00880C8A                            ; -----------------------
00880C8A                            ; Uses: d4-d5
00880C8A                            ; -----------------------
00880C8A                            
00880C8A                            vdpshv_findvdppos:
00880C8A                            		;Check plane to use
00880C8A 3A00                       		move.w	d0,d5
00880C8C 7000                       		moveq	#0,d0
00880C8E 1039 FFFF E914             		move.b	(RAM_VdpRegs+vdpReg_PattFG),d0
00880C94 0805 0001                  		btst	#1,d5				;%10? (WD)
00880C98 6700                       		beq.s	@FG
00880C9A 1039 FFFF E915             		move.b	(RAM_VdpRegs+vdpReg_PattWD),d0
00880CA0                            @FG:
00880CA0 E148                       		lsl.w	#8,d0
00880CA2 E548                       		lsl.w	#2,d0
00880CA4 0805 0000                  		btst	#0,d5				;%01? (BG)
00880CA8 6700                       		beq.s	@FGWD
00880CAA 7000                       		moveq	#0,d0
00880CAC 1039 FFFF E916             		move.b	(RAM_VdpRegs+vdpReg_PattBG),d0
00880CB2 E148                       		lsl.w	#8,d0
00880CB4 EB48                       		lsl.w	#5,d0
00880CB6                            @FGWD:
00880CB6                            
00880CB6                            		;Start Y
00880CB6 7800                       		moveq	#0,d4
00880CB8 3801                          		move.w	d1,d4
00880CBA ED8C                         		lsl.l	#6,d4
00880CBC 0805 0001                   		btst	#1,d5
00880CC0 6700                        		beq.s	@def_fgbg
00880CC2                             		
00880CC2                             		;TODO: WD resolution check
00880CC2                            ;    		move.b	(RAM_VdpRegs+vdpReg_HMode),d5
00880CC2                            ;    		and.w	#%10000001,d5
00880CC2                            ;    		bne.s	@Not128
00880CC2 E38C                           		lsl.l	#1,d4
00880CC4 6000                       		bra.s	@Not128
00880CC6                            @def_fgbg:
00880CC6 0839 0000 FFFF E922         		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
00880CCE 6700                        		beq.s	@Not40
00880CD0 E38C                         		lsl.l	#1,d4
00880CD2                            @Not40:
00880CD2 0839 0001 FFFF E922         		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
00880CDA 6700                        		beq.s	@Not128
00880CDC E38C                           		lsl.l	#1,d4
00880CDE                            @Not128:
00880CDE D044                        		add.w	d4,d0			;+Y Start
00880CE0 4841                       		swap	d1
00880CE2 E349                       		lsl.w	#1,d1
00880CE4 D041                       		add.w	d1,d0			;+X Start
00880CE6 6000 FF04                  		bra	VDP_VramToCmd
00880CEA                            	
00880CEA                            ; -----------------------
00880CEA                            
00880CEA                            vdpshv_showval:
00880CEA 7200                       		moveq	#0,d1
00880CEC 23C0 00C0 0004             		move.l	d0,($C00004)
00880CF2                            @next:
00880CF2 E99B                       		rol.l	#4,d3
00880CF4 1203                       		move.b	d3,d1
00880CF6 0241 000F                  		and.w	#$F,d1
00880CFA 0C41 000A                  		cmp.w	#$A,d1
00880CFE 6500 0000                  		bcs	@lessF
00880D02 0641 0007                  		add.w	#7,d1
00880D06                            @lessF
00880D06 D242                       		add.w	d2,d1
00880D08 33C1 00C0 0000             		move.w	d1,($C00000)
00880D0E 51CC FFE2                  		dbf	d4,@next
00880D12 4E75                       		rts
00880D14                            	
00880D14                            ; ; -----------------------
00880D14                            ; ; Input:
00880D14                            ; ; d3 - HEX
00880D14                            ; ; 
00880D14                            ; ; Output:
00880D14                            ; ; d3 - BCD
00880D14                            ; ; 
00880D14                            ; ; Uses:
00880D14                            ; ; d4-d5
00880D14                            ; ; -----------------------
00880D14                            ; 
00880D14                            ; vdpshv_hextobcd:
00880D14                            ; 		move.l	d3,d5
00880D14                            ; 		moveq	#0,d3
00880D14                            ; 		move.l	d5,d4
00880D14                            ; 	
00880D14                            ; 		move.w	d4,d1
00880D14                            ; 		lsr.w	#8,d1
00880D14                            ; 		and.w	#$FF,d1
00880D14                            ; 		tst.w	d1
00880D14                            ; 		beq	@part2
00880D14                            ; 		sub.w	#1,d1
00880D14                            ; 		add.w	d1,d1
00880D14                            ; 		add.w	d1,d1
00880D14                            ; 		move.l	@hideclist(pc,d1.w),d3
00880D14                            ; 		bra	@part2
00880D14                            ; 	
00880D14                            ; ; -----------------------
00880D14                            ; ; $X00+ array
00880D14                            ; ; -----------------------
00880D14                            ; 
00880D14                            ; @hideclist:
00880D14                            ; 		dc.l $256, $512, $768, $1024, $1280, $1536, $1792, $2048
00880D14                            ; 		dc.l $2304, $2560, $2816, $3072, $3328, $3584, $3840, $4096
00880D14                            ; 		dc.l $4352, $4608, $4864, $5120, $5376, $5632, $5888, $6144
00880D14                            ; 		dc.l $6400, $6656, $6912, $7168, $7424, $7680, $7936, $8192
00880D14                            ; 		dc.l $8448, $8704, $8960, $9216, $9472, $9728, $9984, $10240
00880D14                            ; 		dc.l $10496, $10752, $11008, $11264, $11520, $11776, $12032, $12288
00880D14                            ; 		dc.l $12544, $12800, $13056, $13312, $13568, $13824, $14080, $14336
00880D14                            ; 		dc.l $14592, $14848, $15104, $15360, $15616, $15872, $16128, $16384
00880D14                            ; 		dc.l $16640, $16896, $17152, $17408, $17664, $17920, $18176, $18432
00880D14                            ; 		dc.l $18688, $18944, $19200, $19456, $19712, $19968, $20224, $20480
00880D14                            ; 		dc.l $20736, $20992, $21248, $21504, $21760, $22016, $22272, $22528
00880D14                            ; 		dc.l $22784, $23040, $23296, $23552, $23808, $24064, $24320, $24576
00880D14                            ; 		dc.l $24832, $25088, $25344, $25600, $25856, $26112, $26368, $26624
00880D14                            ; 		dc.l $26880, $27136, $27392, $27648, $27904, $28160, $28416, $28672
00880D14                            ; 		dc.l $28928, $29184, $29440, $29696, $29952, $30208, $30464, $30720
00880D14                            ; 		dc.l $30976, $31232, $31488, $31744, $32000, $32256, $32512, $32768
00880D14                            ; 		dc.l $33024, $33280, $33536, $33792, $34048, $34304, $34560, $34816
00880D14                            ; 		dc.l $35072, $35328, $35584, $35840, $36096, $36352, $36608, $36864
00880D14                            ; 		dc.l $37120, $37376, $37632, $37888, $38144, $38400, $38656, $38912
00880D14                            ; 		dc.l $39168, $39424, $39680, $39936, $40192, $40448, $40704, $40960
00880D14                            ; 		dc.l $41216, $41472, $41728, $41984, $42240, $42496, $42752, $43008
00880D14                            ; 		dc.l $43264, $43520, $43776, $44032, $44288, $44544, $44800, $45056
00880D14                            ; 		dc.l $45312, $45568, $45824, $46080, $46336, $46592, $46848, $47104
00880D14                            ; 		dc.l $47360, $47616, $47872, $48128, $48384, $48640, $48896, $49152
00880D14                            ; 		dc.l $49408, $49664, $49920, $50176, $50432, $50688, $50944, $51200
00880D14                            ; 		dc.l $51456, $51712, $51968, $52224, $52480, $52736, $52992, $53248
00880D14                            ; 		dc.l $53504, $53760, $54016, $54272, $54528, $54784, $55040, $55296
00880D14                            ; 		dc.l $55552, $55808, $56064, $56320, $56576, $56832, $57088, $57344
00880D14                            ; 		dc.l $57600, $57856, $58112, $58368, $58624, $58880, $59136, $59392
00880D14                            ; 		dc.l $59648, $59904, $60160, $60416, $60672, $60928, $61184, $61440
00880D14                            ; 		dc.l $61696, $61952, $62208, $62464, $62720, $62976, $63232, $63488
00880D14                            ; 		dc.l $63744, $64000, $64256, $64512, $64768, $65024, $65280, $65536
00880D14                            ; 		
00880D14                            ; @part2:
00880D14                            ; 		and.l	#$FF,d4
00880D14                            ; 		tst.w	d4
00880D14                            ; 		beq.s	@final
00880D14                            ; @lownibloop:
00880D14                            ; 		sub.l	#1,d4
00880D14                            ; 		bcs	@final
00880D14                            ; 		add.l	#1,d3
00880D14                            ; 		move.w	d3,d1
00880D14                            ; 		and.w	#$F,d1
00880D14                            ; 		cmp.w	#$A,d1
00880D14                            ; 		blt.s	@nohex1
00880D14                            ; 		add.l	#6,d3
00880D14                            ; @nohex1:
00880D14                            ; 		move.w	d3,d1
00880D14                            ; 		and.w	#$F0,d1
00880D14                            ; 		beq.s	@lownibloop
00880D14                            ; 		cmp.w	#$A0,d1
00880D14                            ; 		bcs.s	@nohex2
00880D14                            ; 		add.l	#$60,d3
00880D14                            ; @nohex2:
00880D14                            ; 		move.l	d3,d1
00880D14                            ; 		and.w	#$F00,d1
00880D14                            ; 		beq.s	@lownibloop
00880D14                            ; 		cmp.w	#$A00,d1
00880D14                            ; 		bcs.s	@nohex3
00880D14                            ; 		add.l	#$600,d3
00880D14                            ; @nohex3:
00880D14                            ; 		move.l	d3,d1
00880D14                            ;  		and.l	#$F000,d1
00880D14                            ;  		beq.s	@lownibloop
00880D14                            ;  		cmp.l	#$A000,d1
00880D14                            ;  		bcs.s	@nohex4
00880D14                            ;  		add.l	#$6000,d3
00880D14                            ; @nohex4:
00880D14                            ; 		move.l	d3,d1
00880D14                            ;  		and.l	#$F0000,d1
00880D14                            ;  		beq.s	@lownibloop
00880D14                            ;  		cmp.l	#$A0000,d1
00880D14                            ;  		bcs.s	@nohex5
00880D14                            ;  		add.l	#$60000,d3
00880D14                            ; @nohex5:
00880D14                            ; 
00880D14                            ;  		bra	@lownibloop
00880D14                            ; @final:
00880D14                            ; 		rts
00880D14                            ; 		
00880D14                            ; ; -----------------------
00880D14                            ; ; $X0 array
00880D14                            ; ; -----------------------
00880D14                            ; 
00880D14                            ; @middeclist:
00880D14                            ; 		dc.l $16
00880D14                            ; 		dc.l $32
00880D14                            ; 		dc.l $64
00880D14                            ; 		dc.l $128
00880D14                            		
00880D14                            ; --------------------------------------------
00880D14                            ; VDP_LoadMaps
00880D14                            ; 
00880D14                            ; Input:
00880D14                            ; a0 - Pattern data
00880D14                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
00880D14                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
00880D14                            ; d2 | LONG - XSize (WORD) | YSize (WORD)
00880D14                            ; d3 | WORD - VRAM
00880D14                            ; 
00880D14                            ; Uses:
00880D14                            ; d4-d6
00880D14                            ; --------------------------------------------
00880D14                            
00880D14                            VDP_LoadMaps:
00880D14                            		;Check plane to use
00880D14 6100 FF74                  		bsr	vdpshv_findvdppos
00880D18                            		
00880D18 283C 0040 0000             		move.l	#$400000,d4
00880D1E 0839 0000 FFFF E922        		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
00880D26 6700                       		beq.s	@JpNot40
00880D28 E38C                        		lsl.l	#1,d4
00880D2A                            @JpNot40:
00880D2A 0839 0001 FFFF E922        		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
00880D32 6700                       		beq.s	@Y_Loop
00880D34 E38C                            		lsl.l	#1,d4
00880D36                                 		
00880D36                            @Y_Loop:
00880D36 23C0 00C0 0004             		move.l	d0,($C00004).l		; Set VDP location from d0
00880D3C 4842                       		swap	d2
00880D3E 3A02                       		move.w	d2,d5	  		; Move X-pos value to d3
00880D40 4842                       		swap	d2
00880D42                            @X_Loop:
00880D42 3C18                       		move.w	(a0)+,d6
00880D44 DC43                                       add.w	d3,d6
00880D46 33C6 00C0 0000                             move.w	d6,($C00000)		; Put data
00880D4C 51CD FFF4                  		dbf	d5,@X_Loop		; X-pos loop (from d1 to d3)
00880D50 D084                       		add.l	d4,d0                   ; Next line
00880D52 51CA FFE2                  		dbf	d2,@Y_Loop		; Y-pos loop
00880D56 4E75                       		rts
00880D58                            
00880D58                            ; --------------------------------------------
00880D58                            ; VDP_LoadAsc
00880D58                            ;
00880D58                            ; Input:
00880D58                            ; a0 - String
00880D58                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
00880D58                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
00880D58                            ; d2 | VRAM
00880D58                            ; 
00880D58                            ; Uses:
00880D58                            ; d3-d4
00880D58                            ; --------------------------------------------
00880D58                            
00880D58                            VDP_LoadAsc:
00880D58                            		;Check plane to use
00880D58 6100 FF30                  		bsr	vdpshv_findvdppos
00880D5C                            		
00880D5C 283C 0040 0000             		move.l	#$400000,d4
00880D62 0839 0000 FFFF E922        		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
00880D6A 6700                       		beq.s	@JpNot40
00880D6C E38C                        		lsl.l	#1,d4
00880D6E                            @JpNot40:
00880D6E 0839 0001 FFFF E922        		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
00880D76 6700                       		beq.s	@Space
00880D78 E38C                            		lsl.l	#1,d4
00880D7A                                 		
00880D7A                            @Reset:
00880D7A 23C0 00C0 0004             		move.l	d0,($C00004).l
00880D80                            @Next:
00880D80 7600                       		moveq	#0,d3
00880D82 1618                       		move.b	(a0)+,d3
00880D84 0C03 000A                  		cmp.b	#$A,d3
00880D88 6700                       		beq.s	@Space
00880D8A 4A03                       		tst.b	d3
00880D8C 6600                       		bne.s	@Char
00880D8E 4E75                       		rts
00880D90                            @Char:
00880D90 D642                       		add.w	d2,d3
00880D92 33C3 00C0 0000             		move.w	d3,($C00000).l
00880D98 60E6                       		bra.s	@Next
00880D9A                            @Space:
00880D9A D084                       		add.l	d4,d0                   ; Next line
00880D9C 60DC                       		bra.s	@Reset
00880D9E                            @Exit:
00880D9E 4E75                       		rts
00880DA0                            
00880DA0                            ; --------------------------------------------
00880DA0                            ; Vdp_Init
00880DA0                            ;
00880DA0                            ; Set the default registers
00880DA0                            ; --------------------------------------------
00880DA0                            
00880DA0                            Vdp_Init:
00880DA0 41FA 0000                  		lea	Vdp_RegData(pc),a0
00880DA4 43F9 FFFF E912             		lea	(RAM_VdpRegs),a1
00880DAA 323C 8000                  		move.w	#$8000,d1
00880DAE 7016                       		moveq	#$17-1,d0
00880DB0                            @Loop:
00880DB0 12D8                       		move.b	(a0)+,(a1)+
00880DB2 51C8 FFFC                  		dbf	d0,@Loop
00880DB6 4E75                       		rts
00880DB8                            
00880DB8                            ; --------------------------------------------
00880DB8                            ; Vdp_Update
00880DB8                            ;
00880DB8                            ; Refresh VDP
00880DB8                            ; --------------------------------------------
00880DB8                            
00880DB8                            Vdp_Update:
00880DB8 41F9 FFFF E912             		lea	(RAM_VdpRegs),a0
00880DBE 323C 8000                  		move.w	#$8000,d1
00880DC2 7016                       		moveq	#$17-1,d0
00880DC4                            @Loop:
00880DC4 1218                       		move.b	(a0)+,d1
00880DC6 33C1 00C0 0004             		move.w	d1,($C00004).l
00880DCC 123C 0000                  		move.b	#0,d1
00880DD0 0641 0100                  		add.w	#$100,d1
00880DD4 51C8 FFEE                  		dbf	d0,@Loop
00880DD8 4E75                       		rts
00880DDA                            		
00880DDA                            ; --------------------------------------------
00880DDA                            ; VSync
00880DDA                            ; --------------------------------------------
00880DDA                            
00880DDA                            VSync:
00880DDA 08F9 0000 FFFF D890        		bset	#bitFrameWait,(RAM_VIntWait)
00880DE2                            @StillOn:
00880DE2 0839 0000 FFFF D890        		btst	#bitFrameWait,(RAM_VIntWait)
00880DEA 66F6                       		bne.s	@StillOn
00880DEC 4E75                       		rts
00880DEE                            		
00880DEE                            ; 		move.b	($C00005),d0
00880DEE                            ; 		btst	#3,d0
00880DEE                            ; 		beq.s	@StillOn
00880DEE                            
00880DEE                            ; -----------------------------------------
00880DEE                            
00880DEE                            Vdp_RegData:
00880DEE 04                         		dc.b $04
00880DEF 74                         		dc.b $74
00880DF0 30                         		dc.b $30
00880DF1 34                         		dc.b $34
00880DF2 07                         		dc.b $07
00880DF3 7C                         		dc.b $7C
00880DF4 00                         		dc.b $00
00880DF5 00                         		dc.b $00
00880DF6 00                         		dc.b $00
00880DF7 00                         		dc.b $00
00880DF8 00                         		dc.b $00
00880DF9 03                         		dc.b $03
00880DFA 81                         		dc.b $81
00880DFB 3F                         		dc.b $3F
00880DFC 00                         		dc.b $00
00880DFD 02                         		dc.b $02
00880DFE 01                         		dc.b $01
00880DFF 00                         		dc.b $00
00880E00 00                         		dc.b $00
00880E01 00                         		dc.b $00
00880E02 00                         		dc.b $00
00880E03 00                         		dc.b $00
00880E04 00                         		dc.b $00
00880E05 00                         		dc.b $00
00880E06                            		even
00880E06                            
00880E06                            ; --------------------------------------------
00880E06                            ; Vdp_RawAutoMap
00880E06                            ;
00880E06                            ; Input:
00880E06                            ; d0 | LONG - VDP Address
00880E06                            ; d1 | WORD - Width
00880E06                            ; d2 | WORD - Height
00880E06                            ; d3 | WORD - Start from this value
00880E06                            ; d4 | WORD - Horizontal size type (32,40,128)
00880E06                            ;
00880E06                            ; Output:
00880E06                            ; none
00880E06                            ;
00880E06                            ; Breaks:
00880E06                            ; d5
00880E06                            ; --------------------------------------------
00880E06                            		
00880E06                            Vdp_RawAutoMap:
00880E06 7A00                       		moveq	#0,d5
00880E08 DA43                       		add.w	d3,d5
00880E0A 3605                       		move.w	d5,d3
00880E0C                            
00880E0C 1839 FFFF E922             		move.b	(RAM_VdpRegs+vdpReg_PlnSize),d4
00880E12 0244 0003                  		and.w	#%00000011,d4
00880E16 E54C                       		lsl.w	#2,d4
00880E18 4BFA 0000                  		lea	VDP_LineAddr(pc),a5
00880E1C 2835 4000                  		move.l	(a5,d4.w),d4		;Space
00880E20                            
00880E20                            @Loop_2:
00880E20 23C0 00C0 0004             		move.l	d0,($C00004)		;Set VDP location from d0
00880E26 3A01                       		move.w	d1,d5	  		;Move X-pos value to d3
00880E28                            @Loop:
00880E28 33C3 00C0 0000             		move.w	d3,($C00000)		;Put data
00880E2E 0643 0001                                  add.w	#1,d3
00880E32 51CD FFF4                  		dbf	d5,@Loop		;X-pos loop (from d1 to d3)
00880E36 D084                       		add.l	d4,d0                   ;Next line
00880E38 51CA FFE6                  		dbf	d2,@Loop_2		;Y-pos loop
00880E3C 4E75                       		rts
00880E3E                            		
00880E3E                            VDP_LineAddr:
00880E3E 0040 0000                  		dc.l $400000
00880E42 0080 0000                  		dc.l $800000
00880E46 0080 0000                  		dc.l $800000
00880E4A 0100 0000                  		dc.l $1000000
00880E4E                            		even
00880E4E                            		
00880E4E                            		
00880E4E                            		
00880E4E                            		include	"engine/subs/fade.asm"
00880E4E                            ; =====================================================
00880E4E                            ; FadeIn/FadeOut
00880E4E                            ; =====================================================
00880E4E                            
00880E4E                            ; ---------------------------------------
00880E4E                            ; Variables
00880E4E                            ; ---------------------------------------
00880E4E                            
00880E4E                            ; PalFadeHint		equ	$50
00880E4E                            
00880E4E =00000001                  ID_FadeOut		equ	$01
00880E4E =00000002                  ID_FadeIn		equ	$02
00880E4E =00000003                  ID_ToWhite		equ	$03
00880E4E =00000004                  ID_FadeWhite		equ	$04
00880E4E                            
00880E4E                            ; ---------------------------------------
00880E4E                            
00880E4E =00000001                  PalFadeFlags		equ	1
00880E4E =00000002                  PalFadeStart		equ	2  ;START(byte)|END(byte)|TIMER(word)
00880E4E =00000003                  PalFadeEnd		equ	3
00880E4E =00000004                  PalFadeTmr		equ	4
00880E4E =00000008                  PalFadeSource		equ	8
00880E4E                            
00880E4E                            ; ---------------------------------------
00880E4E                            
00880E4E =00000007                  bitFinished		equ 	7
00880E4E                            
00880E4E                            ; =====================================================
00880E4E                            ; Genesis palette
00880E4E                            ; =====================================================
00880E4E                            
00880E4E                            PalFade:
00880E4E                            ; 		if MARS
00880E4E                            ; 		bsr	PalFade_Mars
00880E4E                            ; 		endif
00880E4E                            
00880E4E 4DF9 FFFF E0E2             		lea	(RAM_PalFadeControl),a6
00880E54 0816 0007                  		btst	#bitFinished,(a6)
00880E58 6700                       		beq.s	@NotFinished
00880E5A 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00880E60 6B00 0000                  		bmi	@Finished
00880E64 4E75                       		rts
00880E66                            @NotFinished:
00880E66 7000                       		moveq	#0,d0
00880E68 1016                       		move.b	(a6),d0
00880E6A D040                       		add.w	d0,d0
00880E6C 323B 0000                  		move.w	@DoList(pc,d0.w),d1
00880E70 4EFB 1000                  		jmp	@DoList(pc,d1.w)
00880E74                            
00880E74                            @Finished:
00880E74 3D6E 0004 0006              		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00880E7A 4216                       		clr.b	(a6)
00880E7C                            @Return:
00880E7C 6100 0000                  		bsr	MARS_PalFadeUpd
00880E80 4E75                       		rts
00880E82                            		
00880E82                            ; =====================================================
00880E82                            
00880E82                            @DoList:
00880E82 FFFA                       		dc.w	@Return-@DoList
00880E84 0000                       		dc.w	@FadeOut-@DoList
00880E86 0000                       		dc.w	@FadeIn-@DoList
00880E88 0000                       		dc.w	@ToWhite-@DoList
00880E8A 0000                       		dc.w	@FromWhite-@DoList
00880E8C                            		even
00880E8C                            
00880E8C                            ; =====================================================
00880E8C                            ; ---------------------------------------------------
00880E8C                            ; FadeOut
00880E8C                            ; ---------------------------------------------------
00880E8C                            
00880E8C                            @FadeOut:
00880E8C 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00880E92 6A00 FFE8                  		bpl	@Return
00880E96 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00880E9C                            
00880E9C 4BF9 FFFF E892             		lea	(RAM_PalBuffer),a5
00880EA2 49F9 FFFF F37A             		lea	(RAM_PalBufferHint),a4
00880EA8                            
00880EA8 362E 0002                  		move.w	PalFadeStart(a6),d3
00880EAC 3803                       		move.w	d3,d4
00880EAE E04C                       		lsr.w	#8,d4
00880EB0 DAC4                       		adda	d4,a5
00880EB2 D8C4                       		adda	d4,a4
00880EB4                            
00880EB4 7C00                       		moveq	#0,d6
00880EB6 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
00880EBA 7400                       		moveq	#0,d2
00880EBC                            @Next:
00880EBC 3015                       		move.w	(a5),d0
00880EBE 3200                       		move.w	d0,d1
00880EC0 0241 000E                  		and.w	#$E,d1
00880EC4 4A41                       		tst.w	d1
00880EC6 6700                       		beq.s	@RedLast
00880EC8 0400 0002                  		sub.b	#2,d0
00880ECC                            @RedLast:
00880ECC 3200                       		move.w	d0,d1
00880ECE E849                       		lsr.w	#4,d1
00880ED0 0241 000E                  		and.w	#$E,d1
00880ED4 4A41                       		tst.w	d1
00880ED6 6700                       		beq.s	@GreenLast
00880ED8 0440 0020                  		sub.w	#$20,d0
00880EDC                            @GreenLast:
00880EDC 3200                       		move.w	d0,d1
00880EDE E049                       		lsr.w	#8,d1
00880EE0 0241 000E                  		and.w	#$E,d1
00880EE4 4A41                       		tst.w	d1
00880EE6 6700                       		beq.s	@BlueLast
00880EE8 0440 0200                  		sub.w	#$200,d0
00880EEC                            @BlueLast:
00880EEC 4A40                       		tst.w	d0
00880EEE 6600 0000                  		bne.w	@NotBlack
00880EF2 0642 0001                  		add.w	#1,d2
00880EF6                            @NotBlack:
00880EF6 3AC0                       		move.w	d0,(a5)+
00880EF8 38C0                       		move.w	d0,(a4)+
00880EFA 51CE FFC0                  		dbf	d6,@Next
00880EFE                            
00880EFE 7800                       		moveq	#0,d4
00880F00 1803                       		move.b	d3,d4
00880F02 B444                       		cmp.w	d4,d2
00880F04 6D00 FF76                  		blt	@Return
00880F08                            
00880F08 08D6 0007                  		bset	#bitFinished,(a6)
00880F0C 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00880F12 4E75                       		rts
00880F14                            
00880F14                            ; =====================================================
00880F14                            ; ---------------------------------------------------
00880F14                            ; FadeIn
00880F14                            ; ---------------------------------------------------
00880F14                            
00880F14                            @FadeIn:
00880F14 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00880F1A 6A00 FF60                  		bpl	@Return
00880F1E 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00880F24                            
00880F24 4BF9 FFFF E892             		lea	(RAM_PalBuffer),a5
00880F2A 47F9 FFFF F37A             		lea	(RAM_PalBufferHint),a3
00880F30 49F9 FFFF E102             		lea	(RAM_PalFadeBuff),a4
00880F36                            
00880F36 302E 0002                  		move.w	PalFadeStart(a6),d0
00880F3A 3800                       		move.w	d0,d4
00880F3C E04C                       		lsr.w	#8,d4
00880F3E DAC4                       		adda	d4,a5
00880F40 D6C4                       		adda	d4,a3
00880F42                            
00880F42 7C00                       		moveq	#0,d6
00880F44 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
00880F48 7A00                       		moveq	#0,d5
00880F4A                            @Next_2:
00880F4A 3015                       		move.w	(a5),d0
00880F4C 3214                       		move.w	(a4),d1
00880F4E 3400                       		move.w	d0,d2
00880F50 3601                       		move.w	d1,d3
00880F52 0242 000E                  		and.w	#$E,d2
00880F56 0243 000E                  		and.w	#$E,d3
00880F5A B443                       		cmp.w	d3,d2
00880F5C 6C00                       		bge.s	@RedFirst
00880F5E 0640 0002                  		add.w	#2,d0
00880F62                            @RedFirst:
00880F62                            
00880F62 3400                       		move.w	d0,d2
00880F64 3601                       		move.w	d1,d3
00880F66 E84A                       		lsr.w	#4,d2
00880F68 E84B                       		lsr.w	#4,d3
00880F6A 0242 000E                  		and.w	#$E,d2
00880F6E 0243 000E                  		and.w	#$E,d3
00880F72 B443                       		cmp.w	d3,d2
00880F74 6C00                       		bge.s	@GreenFirst
00880F76 0640 0020                  		add.w	#$20,d0
00880F7A                            @GreenFirst:
00880F7A                            
00880F7A 3400                       		move.w	d0,d2
00880F7C 3601                       		move.w	d1,d3
00880F7E E04A                       		lsr.w	#8,d2
00880F80 E04B                       		lsr.w	#8,d3
00880F82 0242 000E                  		and.w	#$E,d2
00880F86 0243 000E                  		and.w	#$E,d3
00880F8A B443                       		cmp.w	d3,d2
00880F8C 6C00                       		bge.s	@BlueFirst
00880F8E 0640 0200                  		add.w	#$200,d0
00880F92                            @BlueFirst:	
00880F92 3400                       		move.w	d0,d2
00880F94 3214                       		move.w	(a4),d1
00880F96 B242                       		cmp.w	d2,d1
00880F98 6600                       		bne.s	@NotEqual
00880F9A 0645 0001                  		add.w	#1,d5
00880F9E                            @NotEqual:
00880F9E D8FC 0002                  		adda	#2,a4
00880FA2 3AC0                       		move.w	d0,(a5)+
00880FA4 36C0                       		move.w	d0,(a3)+
00880FA6 51CE FFA2                  		dbf	d6,@Next_2
00880FAA                            
00880FAA 0445 0001                  		sub.w	#1,d5
00880FAE 3D45 0008                  		move.w	d5,PalFadeSource(a6)
00880FB2                            
00880FB2 7800                       		moveq	#0,d4
00880FB4 7400                       		moveq	#0,d2
00880FB6 142E 0003                  		move.b	PalFadeStart+1(a6),d2
00880FBA 1805                       		move.b	d5,d4
00880FBC B444                       		cmp.w	d4,d2
00880FBE 6E00 FEBC                  		bgt	@Return
00880FC2                            		
00880FC2 08D6 0007                  		bset	#bitFinished,(a6)
00880FC6 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00880FCC 4E75                       		rts
00880FCE                            
00880FCE                            ; =====================================================
00880FCE                            ; ---------------------------------------------------
00880FCE                            ; ToWhite
00880FCE                            ; ---------------------------------------------------
00880FCE                            
00880FCE                            @ToWhite:
00880FCE 4BF9 FFFF E892             		lea	(RAM_PalBuffer),a5
00880FD4 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00880FDA 6A00 FEA0                  		bpl	@Return
00880FDE 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00880FE4                            
00880FE4 362E 0002                  		move.w	PalFadeStart(a6),d3
00880FE8                            
00880FE8 3C3C 003F                  		move.w	#$3F,d6
00880FEC 7400                       		moveq	#0,d2
00880FEE                            @NextW:
00880FEE 3015                       		move.w	(a5),d0
00880FF0 3200                       		move.w	d0,d1
00880FF2 0241 000E                  		and.w	#$E,d1
00880FF6 0C41 000E                  		cmp.w	#$E,d1
00880FFA 6700                       		beq.s	@RedLastW
00880FFC 0600 0002                  		add.b	#2,d0
00881000                            @RedLastW:
00881000 3200                       		move.w	d0,d1
00881002 E849                       		lsr.w	#4,d1
00881004 0241 000E                  		and.w	#$E,d1
00881008 0C41 000E                  		cmp.w	#$E,d1
0088100C 6700                       		beq.s	@GreenLastW
0088100E 0640 0020                  		add.w	#$20,d0
00881012                            @GreenLastW:
00881012 3200                       		move.w	d0,d1
00881014 E049                       		lsr.w	#8,d1
00881016 0241 000E                  		and.w	#$E,d1
0088101A 0C41 000E                  		cmp.w	#$E,d1
0088101E 6700                       		beq.s	@BlueLastW
00881020 0640 0200                  		add.w	#$200,d0
00881024                            @BlueLastW:
00881024 0C40 0EEE                  		cmp.w	#$EEE,d0
00881028 6D00 0000                  		blt.w	@NotWhite
0088102C 0642 0001                  		add.w	#1,d2
00881030                            @NotWhite:
00881030 3AC0                       		move.w	d0,(a5)+
00881032 51CE FFBA                  		dbf	d6,@NextW
00881036                            
00881036 7800                       		moveq	#0,d4
00881038 1803                       		move.b	d3,d4
0088103A B444                       		cmp.w	d4,d2
0088103C 6D00 FE3E                  		blt	@Return
00881040                            		
00881040 08D6 0007                  		bset	#bitFinished,(a6)
00881044 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
0088104A 4E75                       		rts
0088104C                            
0088104C                            ; =====================================================
0088104C                            ; ---------------------------------------------------
0088104C                            ; FromWhite
0088104C                            ; ---------------------------------------------------
0088104C                            
0088104C                            @FromWhite:
0088104C 08D6 0007                  		bset	#bitFinished,(a6)
00881050                            ; 		clr.b	(a6)
00881050 4E75                       		rts
00881052                            
00881052                            ; =====================================================
00881052                            ; ---------------------------------------------------
00881052                            ; Subs
00881052                            ; ---------------------------------------------------
00881052                            
00881052                            ; =====================================================
00881052                            ; MARS palette
00881052                            ; =====================================================
00881052                            		
00881052                            PalFade_Mars:
00881052 4DF9 FFFF E0F2             		lea	(RAM_PalFadeControl+$10),a6
00881058 0816 0007                  		btst	#bitFinished,(a6)
0088105C 6700                       		beq.s	@NotFinished
0088105E 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00881064 6B00 0000                  		bmi	@Finished
00881068 4E75                       		rts
0088106A                            @NotFinished:
0088106A 7000                       		moveq	#0,d0
0088106C 1016                       		move.b	(a6),d0
0088106E D040                       		add.w	d0,d0
00881070 323B 0000                  		move.w	@MarsDoList(pc,d0.w),d1
00881074 4EFB 1000                  		jmp	@MarsDoList(pc,d1.w)
00881078                            @Return:
00881078 4E75                       		rts
0088107A                            @Finished:
0088107A 3D6E 0004 0006              		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00881080 4216                       		clr.b	(a6)
00881082 4E75                       		rts
00881084                            		
00881084                            ; =====================================================
00881084                            
00881084                            @MarsDoList:
00881084 FFF4                       		dc.w	@Return-@MarsDoList
00881086 0000                       		dc.w	@FadeOut-@MarsDoList
00881088 0000                       		dc.w	@FadeIn-@MarsDoList
0088108A FFF4                       		dc.w	@Return-@MarsDoList
0088108C FFF4                       		dc.w	@Return-@MarsDoList
0088108E                            		even
0088108E                            		
0088108E                            ; =====================================================
0088108E                            ; ---------------------------------------------------
0088108E                            ; FadeIn
0088108E                            ; ---------------------------------------------------
0088108E                            
0088108E                            @FadeIn:
0088108E 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00881094 6A00 FFE2                  		bpl	@Return
00881098 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
0088109E                            
0088109E 4BF9 FFFF 7800             		lea	(RAM_MarsPalette),a5
008810A4 49F9 FFFF 7A00             		lea	(RAM_MarsPalFade),a4
008810AA                            
008810AA 302E 0002                  		move.w	PalFadeStart(a6),d0
008810AE 3800                       		move.w	d0,d4
008810B0 E04C                       		lsr.w	#8,d4
008810B2 E34C                       		lsl.w	#1,d4
008810B4 DAC4                       		adda	d4,a5
008810B6                            		
008810B6 7A00                       		moveq	#0,d5
008810B8 7C00                       		moveq	#0,d6
008810BA 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
008810BE                            @Next_Color:
008810BE 383C 001F                  		move.w	#%11111,d4
008810C2 3015                       		move.w	(a5),d0
008810C4 3214                       		move.w	(a4),d1
008810C6 3400                        		move.w	d0,d2
008810C8 3601                        		move.w	d1,d3
008810CA C444                        		and.w	d4,d2
008810CC C644                        		and.w	d4,d3
008810CE B443                        		cmp.w	d3,d2
008810D0 6C00                        		bge.s	@RedFirst
008810D2 343C 0001                   		move.w	#1,d2
008810D6 D042                       		add.w	d2,d0
008810D8                            @RedFirst:
008810D8 EB4C                       		lsl.w	#5,d4
008810DA 3400                        		move.w	d0,d2
008810DC 3601                        		move.w	d1,d3
008810DE C444                        		and.w	d4,d2
008810E0 C644                        		and.w	d4,d3
008810E2 B443                        		cmp.w	d3,d2
008810E4 6C00                        		bge.s	@GreenFirst
008810E6 343C 0020                   		move.w	#$20,d2
008810EA D042                       		add.w	d2,d0
008810EC                            @GreenFirst:
008810EC EB4C                       		lsl.w	#5,d4
008810EE 3400                        		move.w	d0,d2
008810F0 3601                        		move.w	d1,d3
008810F2 C444                        		and.w	d4,d2
008810F4 C644                        		and.w	d4,d3
008810F6 B443                        		cmp.w	d3,d2
008810F8 6C00                        		bge.s	@BlueFirst
008810FA 343C 0400                   		move.w	#$400,d2
008810FE D042                       		add.w	d2,d0
00881100                            @BlueFirst:	
00881100 B240                        		cmp.w	d0,d1
00881102 6600                        		bne.s	@NotEqual
00881104 0645 0001                   		add.w	#1,d5
00881108                            @NotEqual:
00881108 D8FC 0002                  		adda	#2,a4
0088110C 3AC0                       		move.w	d0,(a5)+
0088110E 51CE FFAE                  		dbf	d6,@Next_Color
00881112                            
00881112 0445 0001                   		sub.w	#1,d5
00881116 3D45 0008                   		move.w	d5,PalFadeSource(a6)
0088111A                            
0088111A 7000                       		moveq	#0,d0
0088111C 102E 0003                  		move.b	PalFadeStart+1(a6),d0
00881120 B045                       		cmp.w	d5,d0
00881122 6600                       		bne.s	@Return_In
00881124                            		
00881124 08D6 0007                     		bset	#bitFinished,(a6)
00881128 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
0088112E                            @Return_In:
0088112E 4E75                       		rts
00881130                            
00881130                            ; ---------------------------------------------------
00881130                            ; FadeOut
00881130                            ; ---------------------------------------------------
00881130                            
00881130                            @FadeOut:
00881130 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00881136 6A00 FF40                  		bpl	@Return
0088113A 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00881140                            
00881140 4BF9 FFFF 7800             		lea	(RAM_MarsPalette),a5
00881146 49F9 FFFF 7A00             		lea	(RAM_MarsPalFade),a4
0088114C                            
0088114C 362E 0002                  		move.w	PalFadeStart(a6),d3
00881150 3803                       		move.w	d3,d4
00881152 E04C                       		lsr.w	#8,d4
00881154 DAC4                       		adda	d4,a5
00881156 D8C4                       		adda	d4,a4
00881158                            
00881158 7C00                       		moveq	#0,d6
0088115A 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
0088115E 7400                       		moveq	#0,d2
00881160                            @NextOut:
00881160 383C 001F                  		move.w	#%11111,d4		;MAX color
00881164 3015                       		move.w	(a5),d0
00881166 3200                       		move.w	d0,d1
00881168 C244                       		and.w	d4,d1
0088116A 4A41                       		tst.w	d1
0088116C 6700                       		beq.s	@RedLastOut
0088116E 323C 0001                   		move.w	#1,d1
00881172 9041                       		sub.w	d1,d0
00881174                            @RedLastOut:
00881174 EB4C                       		lsl.w	#5,d4
00881176 3200                       		move.w	d0,d1
00881178 C244                       		and.w	d4,d1
0088117A 4A41                       		tst.w	d1
0088117C 6700                       		beq.s	@GreenLastOut
0088117E 323C 0020                   		move.w	#$20,d1
00881182 9041                       		sub.w	d1,d0
00881184                            @GreenLastOut:
00881184 EB4C                       		lsl.w	#5,d4
00881186 3200                        		move.w	d0,d1
00881188 C244                        		and.w	d4,d1
0088118A 4A41                        		tst.w	d1
0088118C 6700                        		beq.s	@BlueLastOut
0088118E 323C 0400                    		move.w	#$400,d1
00881192 9041                        		sub.w	d1,d0
00881194                            @BlueLastOut:
00881194 3200                       		move.w	d0,d1
00881196 0241 7FFF                  		and.w	#$7FFF,d1
0088119A 4A41                       		tst.w	d1
0088119C 6600 0000                  		bne.w	@NotBlackOut
008811A0 0642 0001                  		add.w	#1,d2
008811A4                            @NotBlackOut:
008811A4 3AC0                       		move.w	d0,(a5)+
008811A6 38C0                       		move.w	d0,(a4)+
008811A8 51CE FFB6                  		dbf	d6,@NextOut
008811AC                            
008811AC 7800                       		moveq	#0,d4
008811AE 1803                       		move.b	d3,d4
008811B0 B444                       		cmp.w	d4,d2
008811B2 6D00 FEC4                  		blt	@Return
008811B6                            
008811B6 08D6 0007                  		bset	#bitFinished,(a6)
008811BA 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
008811C0 4E75                       		rts
008811C2                            		
008811C2                            ; ---------------------------------------------------
008811C2                            
008811C2                            MARS_PalFadeUpd:
008811C2 0839 0007 00A1 5100        		btst 	#7,(marsreg+access)
008811CA 6600                       		bne.s	@sh2_prio
008811CC 4BF9 FFFF 7800             		lea	(RAM_MarsPalette),a5
008811D2 4DF9 00A1 5200             		lea	(palette),a6
008811D8 303C 00FF                  		move.w	#255,d0
008811DC                            @MarsPalBuf:
008811DC 3CDD                       		move.w	(a5)+,(a6)+
008811DE 51C8 FFFC                  		dbf	d0,@MarsPalBuf
008811E2                            @sh2_prio:
008811E2 4E75                       		rts
008811E4                            		
008811E4                            ; ---------------------------------------------------
008811E4                            
008811E4                            		
008811E4                            ; =====================================================
008811E4                            ; ---------------------------------------
008811E4                            ; Subs
008811E4                            ; ---------------------------------------
008811E4                            
008811E4                            ; ---------------------------------------
008811E4                            ; PalFade_Set
008811E4                            ; 
008811E4                            ; Input:
008811E4                            ; d0 - Request type
008811E4                            ; d1 - Settings:
008811E4                            ;      $SSEETTTT   SS StartFrom
008811E4                            ;                  EE NumOfColors
008811E4                            ;                TTTT Timer
008811E4                            ; ---------------------------------------
008811E4                            
008811E4                            PalFade_Set:
008811E4 41F9 FFFF E0E2             		lea	(RAM_PalFadeControl),a0
008811EA                            
008811EA 2141 0002                  		move.l	d1,PalFadeStart(a0)
008811EE 3168 0004 0006             		move.w	PalFadeTmr(a0),PalFadeTmr+2(a0)
008811F4 1080                       		move.b	d0,(a0)
008811F6 4E75                       		rts
008811F8                            
008811F8                            ; ---------------------------------------
008811F8                            ; PalFadeMars_Set
008811F8                            ; 
008811F8                            ; Input:
008811F8                            ; d0 - Request type
008811F8                            ; d1 - Settings:
008811F8                            ;      $SSEETTTT   SS StartFrom
008811F8                            ;                  EE NumOfColors
008811F8                            ;                TTTT Timer
008811F8                            ; ---------------------------------------
008811F8                            
008811F8                            PalFadeMars_Set:
008811F8 0839 0007 00A1 5100        		btst 	#FM,(marsreg+access)
00881200 6600                       		bne.s	@Sh2
00881202                            		
00881202 4BF9 FFFF E0F2             		lea	(RAM_PalFadeControl+$10),a5
00881208 2B41 0002                  		move.l	d1,PalFadeStart(a5)
0088120C 3B6D 0004 0006             		move.w	PalFadeTmr(a5),PalFadeTmr+2(a5)
00881212 1A80                       		move.b	d0,(a5)
00881214 4E75                       		rts
00881216                            @Sh2:
00881216                            
00881216 33C0 00A1 5124             		move.w	d0,(marsreg+comm4)
0088121C 33C1 00A1 5126             		move.w	d1,(marsreg+comm6)
00881222 4841                       		swap	d1
00881224 3001                       		move.w	d1,d0
00881226 0240 00FF                  		and.w	#$FF,d0
0088122A E049                       		lsr.w	#8,d1
0088122C 0241 00FF                  		and.w	#$FF,d1
00881230 33C1 00A1 5128             		move.w	d1,(marsreg+comm8)
00881236 33C0 00A1 512A             		move.w	d0,(marsreg+comm10)
0088123C                            
0088123C 700C                        		moveq	#$C,d0
0088123E 6100 F6C2                   		bsr 	Mars_Task_Master
00881242 6000 F6CE                    		bra 	Mars_Wait_Master
00881246 4E75                       		rts
00881248                            		
00881248                            ; ---------------------------------------
00881248                            ; PalFade_Wait
00881248                            ; 
00881248                            ; Wait until fade finishes
00881248                            ; ---------------------------------------
00881248                            
00881248                            ;TODO: its broken, temporal solution
00881248                            
00881248                            PalFade_Wait:
00881248                              
00881248                              		;MARS
00881248 0839 0007 00A1 5100           		btst	#FM,(marsreg+access)
00881250 6700                          		beq.s	@MD_Mode
00881252 1039 00A1 5121               		move.b	(marsreg+comm0+1),d0
00881258 0240 0010                    		and.w	#%00010000,d0
0088125C 66EA                         		bne.s	PalFade_Wait
0088125E 6000                         		bra.s	@MARS_Mode
00881260                            @MD_Mode:
00881260 4A39 FFFF E0E2                		tst.b	(RAM_PalFadeControl)
00881266 66F8                          		bne.s	@MD_Mode
00881268                            @MARS_Mode:
00881268                            
00881268 4E75                       		rts
0088126A                            
0088126A                            ; ---------------------------------------
0088126A                            ; PalFade_Wait_Flag
0088126A                            ; 
0088126A                            ; Wait until fade finishes
0088126A                            ; 
0088126A                            ; Output:
0088126A                            ; bmi - Busy
0088126A                            ; beq - Finished
0088126A                            ; ---------------------------------------
0088126A                            
0088126A                            PalFade_Wait_Flag:
0088126A 7CFF                        		moveq	#-1,d6
0088126C 4A39 FFFF E0E2             		tst.b	(RAM_PalFadeControl)
00881272 6600                       		bne.s	@no
00881274 7C00                       		moveq	#0,d6
00881276                            @no:
00881276 4A46                       		tst.w	d6
00881278 4E75                       		rts	
00881278 4E75                       		rts	
0088127A                            		include	"engine/subs/misc.asm"
0088127A                            ; ====================================================================
0088127A                            ; ---------------------------------------------
0088127A                            ; Mode cleanup
0088127A                            ; ---------------------------------------------
0088127A                            
0088127A                            Mode_Cleanup:
0088127A 4DF9 FFFF E892             		lea	(RAM_PalBuffer),a6
00881280 303C 003F                  		move.w	#$3F,d0
00881284                            @PalBuf:
00881284 425E                       		clr.w	(a6)+
00881286 51C8 FFFC                  		dbf	d0,@PalBuf
0088128A                            
0088128A 4DF9 FFFF E5C2             		lea	(RAM_VerBuffer),a6
00881290 303C 001F                  		move.w	#(($7F)/4),d0
00881294                            @VerBuf:
00881294 429E                       		clr.l	(a6)+
00881296 51C8 FFFC                  		dbf	d0,@VerBuf
0088129A                            
0088129A 4DF9 FFFF E612             		lea	(RAM_SprBuffer),a6
008812A0 303C 007F                  		move.w	#$7F,d0
008812A4                            @SprBuf:
008812A4 429E                       		clr.l	(a6)+
008812A6 51C8 FFFC                  		dbf	d0,@SprBuf
008812AA                            
008812AA 4DF9 FFFF E202             		lea	(RAM_HorBuffer),a6
008812B0 303C 00DF                  		move.w	#(($37F)/4),d0
008812B4                            @HorBuf:
008812B4 429E                       		clr.l	(a6)+
008812B6 51C8 FFFC                  		dbf	d0,@HorBuf
008812BA                            
008812BA 4E75                       		rts
008812BC                            
008812BC                            ; ====================================================================
008812BC                            ; ---------------------------------------------
008812BC                            ; Full fadein/fadeout
008812BC                            ; ---------------------------------------------
008812BC                            
008812BC                            Mode_FadeIn:
008812BC 7002                       		moveq	#ID_FadeIn,d0
008812BE 223C 003F 0001             		move.l	#$003F0001,d1
008812C4 0839 0007 00A1 5100         		btst	#FM,(marsreg+access)
008812CC 6700                        		beq.s	@MD_Only
008812CE 223C 003F 0003              		move.l	#$003F0003,d1
008812D4                            @MD_Only:
008812D4 6100 FF0E                   		bsr	PalFade_Set
008812D8                            		
008812D8 7002                       		moveq	#ID_FadeIn,d0
008812DA 223C 00FF 0001             		move.l	#$00FF0001,d1
008812E0 6100 FF16                  		bsr	PalFadeMars_Set
008812E4 6000 FF62                  		bra	PalFade_Wait
008812E8                            
008812E8                            Mode_FadeOut:
008812E8 7001                       		moveq	#ID_FadeOut,d0
008812EA 223C 003F 0001             		move.l	#$003F0001,d1
008812F0 0839 0007 00A1 5100         		btst	#FM,(marsreg+access)
008812F8 6700                        		beq.s	@MD_Only
008812FA 223C 003F 0003              		move.l	#$003F0003,d1
00881300                            @MD_Only:
00881300 6100 FEE2                   		bsr	PalFade_Set
00881304                            		
00881304 7001                       		moveq	#ID_FadeOut,d0
00881306 223C 00FF 0001             		move.l	#$00FF0001,d1
0088130C 6100 FEEA                  		bsr	PalFadeMars_Set
00881310 6000 FF36                  		bra	PalFade_Wait
00881314                            		
00881314                            ; ====================================================================
00881314                            ; ---------------------------------------------
00881314                            ; Generic data loaders
00881314                            ;
00881314                            ; NonVDP:
00881314                            ; a0 - Input
00881314                            ; a1 - Output
00881314                            ; d0 - Size
00881314                            ; ---------------------------------------------
00881314                            
00881314                            LoadData_Byte:
00881314 12D8                       		move.b	(a0)+,(a1)+
00881316 51C8 FFFC                  		dbf	d0,LoadData_Byte
0088131A 4E75                       		rts
0088131C                            
0088131C                            LoadData_Word:
0088131C 32D8                       		move.w	(a0)+,(a1)+
0088131E 51C8 FFFC                  		dbf	d0,LoadData_Word
00881322 4E75                       		rts
00881324                            
00881324                            LoadData_Long:
00881324 22D8                       		move.l	(a0)+,(a1)+
00881326 51C8 FFFC                  		dbf	d0,LoadData_Long
0088132A 4E75                       		rts
0088132C                            		
0088132C                            ; ====================================================================
0088132C                            ; ---------------------------------------------
0088132C                            ; RLE decompression
0088132C                            ; byte $FF is end-of-data
0088132C                            ;
0088132C                            ; a0 - Input
0088132C                            ; a1 - Output
0088132C                            ; ---------------------------------------------
0088132C                            
0088132C                            RLE_decompress:
0088132C 7000                       		moveq	#0,d0
0088132E 7200                       		moveq	#0,d1
00881330 1018                       		move.b	(a0)+,d0
00881332 0C00 00FF                  		cmp.b	#-1,d0
00881336 6700 0000                  		beq	@Finish
0088133A 1218                       		move.b	(a0)+,d1
0088133C                            @CopyIt:
0088133C 12C1                       		move.b	d1,(a1)+
0088133E 51C8 FFFC                  		dbf	d0,@CopyIt
00881342                            		
00881342 60E8                       		bra.s	RLE_decompress
00881344                            @Finish:
00881344 4E75                       		rts
00881346                                		
00881346                            ; ====================================================================
00881346                            ; ---------------------------------------------
00881346                            ; CalcSine
00881346                            ;
00881346                            ; Input:
00881346                            ; d0 | WORD
00881346                            ;
00881346                            ; Output:
00881346                            ; d0 | WORD
00881346                            ; d1 | WORD
00881346                            ; ---------------------------------------------
00881346                            
00881346                            CalcSine:
00881346 0240 00FF                  		and.w	#$FF,d0
0088134A D040                       		add.w	d0,d0
0088134C 0640 0080                  		add.w	#$80,d0
00881350 323B 0000                  		move.w	Sine_Data(pc,d0.w),d1
00881354 0440 0080                  		sub.w	#$80,d0
00881358 303B 0000                  		move.w	Sine_Data(pc,d0.w),d0
0088135C 4E75                       		rts	
0088135E                            
0088135E                            Sine_Data:
0088135E 0000 0006 000C 0012 0019+  		dc.w 0,	6, $C, $12, $19, $1F, $25, $2B,	$31, $38, $3E
00881374 0044 004A 0050 0056 005C+  		dc.w $44, $4A, $50, $56, $5C, $61, $67,	$6D, $73, $78
00881388 007E 0083 0088 008E 0093+  		dc.w $7E, $83, $88, $8E, $93, $98, $9D,	$A2, $A7, $AB
0088139C 00B0 00B5 00B9 00BD 00C1+  		dc.w $B0, $B5, $B9, $BD, $C1, $C5, $C9,	$CD, $D1, $D4
008813B0 00D8 00DB 00DE 00E1 00E4+  		dc.w $D8, $DB, $DE, $E1, $E4, $E7, $EA,	$EC, $EE, $F1
008813C4 00F3 00F4 00F6 00F8 00F9+  		dc.w $F3, $F4, $F6, $F8, $F9, $FB, $FC,	$FD, $FE, $FE
008813D8 00FF 00FF 00FF 0100 00FF+  		dc.w $FF, $FF, $FF, $100, $FF, $FF, $FF, $FE, $FE, $FD
008813EC 00FC 00FB 00F9 00F8 00F6+  		dc.w $FC, $FB, $F9, $F8, $F6, $F4, $F3,	$F1, $EE, $EC
00881400 00EA 00E7 00E4 00E1 00DE+  		dc.w $EA, $E7, $E4, $E1, $DE, $DB, $D8,	$D4, $D1, $CD
00881414 00C9 00C5 00C1 00BD 00B9+  		dc.w $C9, $C5, $C1, $BD, $B9, $B5, $B0,	$AB, $A7, $A2
00881428 009D 0098 0093 008E 0088+  		dc.w $9D, $98, $93, $8E, $88, $83, $7E,	$78, $73, $6D
0088143C 0067 0061 005C 0056 0050+  		dc.w $67, $61, $5C, $56, $50, $4A, $44,	$3E, $38, $31
00881450 002B 0025 001F 0019 0012+  		dc.w $2B, $25, $1F, $19, $12, $C, 6, 0,	-6, -$C, -$12
00881466 FFE7 FFE1 FFDB FFD5 FFCF+  		dc.w -$19, -$1F, -$25, -$2B, -$31, -$38, -$3E, -$44, -$4A
00881478 FFB0 FFAA FFA4 FF9F FF99+  		dc.w -$50, -$56, -$5C, -$61, -$67, -$6D, -$75, -$78, -$7E
0088148A FF7D FF78 FF72 FF6D FF68+  		dc.w -$83, -$88, -$8E, -$93, -$98, -$9D, -$A2, -$A7, -$AB
0088149C FF50 FF4B FF47 FF43 FF3F+  		dc.w -$B0, -$B5, -$B9, -$BD, -$C1, -$C5, -$C9, -$CD, -$D1
008814AE FF2C FF28 FF25 FF22 FF1F+  		dc.w -$D4, -$D8, -$DB, -$DE, -$E1, -$E4, -$E7, -$EA, -$EC
008814C0 FF12 FF0F FF0D FF0C FF0A+  		dc.w -$EE, -$F1, -$F3, -$F4, -$F6, -$F8, -$F9, -$FB, -$FC
008814D2 FF03 FF02 FF02 FF01 FF01+  		dc.w -$FD, -$FE, -$FE, -$FF, -$FF, -$FF, -$100,	-$FF, -$FF
008814E4 FF01 FF02 FF02 FF03 FF04+  		dc.w -$FF, -$FE, -$FE, -$FD, -$FC, -$FB, -$F9, -$F8, -$F6
008814F6 FF0C FF0D FF0F FF12 FF14+  		dc.w -$F4, -$F3, -$F1, -$EE, -$EC, -$EA, -$E7, -$E4, -$E1
00881508 FF22 FF25 FF28 FF2C FF2F+  		dc.w -$DE, -$DB, -$D8, -$D4, -$D1, -$CD, -$C9, -$C5, -$C1
0088151A FF43 FF47 FF4B FF50 FF55+  		dc.w -$BD, -$B9, -$B5, -$B0, -$AB, -$A7, -$A2, -$9D, -$98
0088152C FF6D FF72 FF78 FF7D FF82+  		dc.w -$93, -$8E, -$88, -$83, -$7E, -$78, -$75, -$6D, -$67
0088153E FF9F FFA4 FFAA FFB0 FFB6+  		dc.w -$61, -$5C, -$56, -$50, -$4A, -$44, -$3E, -$38, -$31
00881550 FFD5 FFDB FFE1 FFE7 FFEE+  		dc.w -$2B, -$25, -$1F, -$19, -$12, -$C,	-6, 0, 6, $C, $12
00881566 0019 001F 0025 002B 0031+  		dc.w $19, $1F, $25, $2B, $31, $38, $3E,	$44, $4A, $50
0088157A 0056 005C 0061 0067 006D+  		dc.w $56, $5C, $61, $67, $6D, $73, $78,	$7E, $83, $88
0088158E 008E 0093 0098 009D 00A2+  		dc.w $8E, $93, $98, $9D, $A2, $A7, $AB,	$B0, $B5, $B9
008815A2 00BD 00C1 00C5 00C9 00CD+  		dc.w $BD, $C1, $C5, $C9, $CD, $D1, $D4,	$D8, $DB, $DE
008815B6 00E1 00E4 00E7 00EA 00EC+  		dc.w $E1, $E4, $E7, $EA, $EC, $EE, $F1,	$F3, $F4, $F6
008815CA 00F8 00F9 00FB 00FC 00FD+  		dc.w $F8, $F9, $FB, $FC, $FD, $FE, $FE,	$FF, $FF, $FF
008815DE                            		even
008815DE                            		
008815DE                            ; ====================================================================
008815DE                            ; ---------------------------------------------
008815DE                            ; Sprites system
008815DE                            ; ---------------------------------------------
008815DE                            
008815DE                            ; TODO: talvez moverlo
008815DE                            
008815DE                            ; Start: $FFBDDA
008815DE                            ; End: $FFC05A
008815DE                            ; Size: $280 | $A0
008815DE                            
008815DE                            		rsreset
008815DE =00000000                  sprite_free	rs.l	1
008815DE =00000004                  sprite_link	rs.w	1
008815DE =00000006                  sprite_used	rs.w	1
008815DE                            		
008815DE                            ; ---------------------------------------------
008815DE                            ; Sprites_Reset
008815DE                            ; ---------------------------------------------
008815DE                            
008815DE                            Sprites_Reset:
008815DE 4DF9 FFFF D8D2             		lea	(RAM_SprControl),a6
008815E4 2A6E 0000                  		movea.l	sprite_free(a6),a5
008815E8 BAFC E612                  		cmpa	#((RAM_SprBuffer)&$FFFF),a5
008815EC 6D00                       		blt.s	@Full
008815EE                            @NextEntry:
008815EE                            ; 		tst.l	(a5)
008815EE                            ; 		beq.s	@Full
008815EE                            ; 		tst.l	4(a5)
008815EE                            ; 		beq.s	@Full
008815EE BAFC E892                   		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
008815F2 6E00                        		bgt.s	@Full
008815F4 429D                        		clr.l	(a5)+
008815F6 429D                         		clr.l	(a5)+
008815F8 BAFC E892                    		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
008815FC 6DF0                         		blt.s	@NextEntry
008815FE                            @Full:
008815FE 2D7C FFFF E612 0000        		move.l	#RAM_SprBuffer,sprite_free(a6)
00881606 3D7C 0001 0004             		move.w	#1,sprite_link(a6)
0088160C                            @Return:
0088160C 4E75                       		rts
0088160E                            		
0088160E                            ; ====================================================================
0088160E                            ; ---------------------------------------------
0088160E                            ; SRAM
0088160E                            ; ---------------------------------------------
0088160E                            
0088160E                            SRAM_Init:
0088160E 13FC 0003 00A1 30F1        		move.b	#%11,($A130F1)		;read+write
00881616 41F9 0020 0000             		lea	($200000),a0
0088161C 0108 0001                  		movep.w	1(a0),d0
00881620 0C80 0000 4745             		cmp.l	#"GE",d0
00881626 6700                       		beq.s	@exit
00881628 43FA 0000                  		lea	@SramHead(pc),a1
0088162C 7006                       		moveq	#7-1,d0
0088162E                            @header:
0088162E 1019                       		move.b	(a1)+,d0
00881630 1140 0001                  		move.b	d0,1(a0)
00881634 D0FC 0002                  		adda	#2,a0
00881638 51C8 FFF4                  		dbf	d0,@header
0088163C                            @exit:
0088163C 13FC 0000 00A1 30F1        		move.b	#0,($A130F1)
00881644 4E75                       		rts
00881646                            
00881646                            ; ---------------------------------------------
00881646                            
00881646 4745 4E59 5341 5645 00     @SramHead:	dc.b "GENYSAVE",0
00881650 00                         		even
00881650                            		
00881650                            		
00881650                            		include	"engine/subs/pads.asm"
00881650                            ; ====================================================================
00881650                            ; Joypads
00881650                            ; ====================================================================
00881650                            
00881650                            		rsreset
00881650 =00000000                  CtrlID		rs.b	1
00881650 =00000001                  FightPad	rs.b	1		;only TRUE $01 or FALSE $00
00881650 =00000002                  ExOnHold	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
00881650 =00000003                  OnHold		rs.b	1		;SACBRLDU
00881650 =00000004                  ExOnPress	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
00881650 =00000005                  OnPress		rs.b	1		;SACBRLDU
00881650 =00000006                  MouseX		rs.w	1		;TODO
00881650 =00000008                  MouseY		rs.w	1
00881650 =00000010                  Port2		equ	$10
00881650                            
00881650                            
00881650 =00000001                  JoyUp		equ	%00000001
00881650 =00000002                  JoyDown		equ	%00000010
00881650 =00000004                  JoyLeft		equ	%00000100
00881650 =00000008                  JoyRight	equ	%00001000
00881650 =00000010                  JoyB		equ	%00010000
00881650 =00000020                  JoyC		equ	%00100000
00881650 =00000040                  JoyA		equ	%01000000
00881650 =00000080                  JoyStart	equ	%10000000
00881650 =00000000                  bitJoyUp	equ	0
00881650 =00000001                  bitJoyDown	equ	1
00881650 =00000002                  bitJoyLeft	equ	2
00881650 =00000003                  bitJoyRight	equ	3
00881650 =00000004                  bitJoyB		equ	4
00881650 =00000005                  bitJoyC		equ	5
00881650 =00000006                  bitJoyA		equ	6
00881650 =00000007                  bitJoyStart	equ	7
00881650                            
00881650 =00000001                  JoyZ		equ	%00000001
00881650 =00000002                  JoyY		equ	%00000010
00881650 =00000004                  JoyX		equ	%00000100
00881650 =00000008                  JoyMode		equ	%00001000
00881650 =00000000                  bitJoyZ		equ	0
00881650 =00000001                  bitJoyY		equ	1
00881650 =00000002                  bitJoyX		equ	2
00881650 =00000003                  bitJoyMode	equ	3
00881650                            
00881650                            ; --------------------------------------------
00881650                            ; Pads_Init
00881650                            ; --------------------------------------------
00881650                            
00881650                            Pads_Init:
00881650 33FC 0100 00A1 1100        		move.w	#$100,($A11100)
00881658 33FC 0100 00A1 1200        		move.w	#$100,($A11200)
00881660                            @WaitZ80:
00881660 0839 0000 00A1 1100        		btst	#0,($A11100)
00881668 66F6                        		bne.s	@WaitZ80
0088166A                             
0088166A 7240                       		moveq	#$40,d1
0088166C 13C1 00A1 0009             		move.b	d1,($A10009).l
00881672 13C1 00A1 000B             		move.b	d1,($A1000B).l
00881678 13C1 00A1 000D             		move.b	d1,($A1000D).l
0088167E                            
0088167E 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00881686 4E75                       		rts
00881688                            
00881688                            ; --------------------------------------------
00881688                            ; Pads_Read
00881688                            ; --------------------------------------------
00881688                            
00881688                            Pads_Read:
00881688 33FC 0100 00A1 1100        		move.w	#$100,($A11100)
00881690                            ; 		move.w	#$100,($A11200)
00881690                            @WaitZ80:
00881690 0839 0000 00A1 1100        		btst	#0,($A11100)
00881698 66F6                        		bne.s	@WaitZ80
0088169A                             		
0088169A 4BF9 FFFF D892             		lea	(RAM_Joypads),a5
008816A0 7000                       		moveq	#0,d0
008816A2 6100                       		bsr.s	@DoIt
008816A4 4BF9 FFFF D8A2             		lea	(RAM_Joypads+Port2),a5
008816AA 7001                       		moveq	#1,d0
008816AC 6100                       		bsr.s	@DoIt
008816AE                            
008816AE 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
008816B6 4E75                       		rts
008816B8                            
008816B8                            ; ---------------------------------------
008816B8                            
008816B8                            @DoIt:
008816B8 4DF9 00A1 0003             		lea	($A10003).l,a6
008816BE E348                       		lsl.w	#1,d0
008816C0 DCC0                       		add.w	d0,a6			;Add result to port
008816C2 6100 0000                  		bsr	@FindJoypad
008816C6 1A80                       		move.b	d0,(a5)
008816C8                            
008816C8 0C00 000F                                  cmp.b	#$F,d0
008816CC 6700                                       beq.s	@End
008816CE 0C00 000D                  		cmp.b	#$D,d0
008816D2 6700                                       beq.s	@Controller
008816D4 0C00 0007                    		cmp.b	#7,d0			;Multitap
008816D8 6700                                       beq.s	@End
008816DA 0C00 0003                  		cmp.b	#3,d0
008816DE 6700 0000                                  beq	@Mouse
008816E2                            
008816E2                            @End:
008816E2 4E75                       		rts
008816E4                            
008816E4                            ; ------------------------------------
008816E4                            ; Controller
008816E4                            ; ------------------------------------
008816E4                            
008816E4                            @Controller:
008816E4 1D7C 0040 0006             		move.b	#$40,6(a6)
008816EA 4E71                       		nop
008816EC 4E71                       		nop
008816EE 1CBC 0040                  		move.b	#$40,(a6)		; Show CB|RLDU
008816F2 4E71                       		nop
008816F4 4E71                       		nop
008816F6 1CBC 0000                  		move.b	#$00,(a6)		; Show SA|RLDU
008816FA 4E71                       		nop
008816FC 4E71                       		nop
008816FE 1CBC 0040                  		move.b	#$40,(a6)		; Show CB|RLDU
00881702 4E71                       		nop
00881704 4E71                       		nop
00881706 1CBC 0000                  		move.b	#$00,(a6)		; Show SA|RLDU
0088170A 4E71                       		nop
0088170C 4E71                       		nop
0088170E 1CBC 0040                  		move.b	#$40,(a6)		; "Okay OKAY!, I have more buttons"
00881712 4E71                       		nop
00881714 4E71                       		nop
00881716 1016                       		move.b	(a6),d0
00881718 1CBC 0000                   		move.b	#$00,(a6)		; "Heres my ID"
0088171C 4E71                         		nop
0088171E 4E71                         		nop
00881720 1216                        		move.b	(a6),d1
00881722 1CBC 0040                   		move.b	#$40,(a6)
00881726 4E71                        		nop
00881728 4E71                        		nop
0088172A                            		
0088172A 7400                       		moveq	#0,d2
0088172C 0241 000F                  		and.w	#$F,d1
00881730 0C41 000F                  		cmp.w	#$F,d1
00881734 6600                       		bne.s	@Original
00881736                            		
00881736 7401                       		moveq	#1,d2
00881738 7200                        		moveq	#0,d1
0088173A 122D 0002                   		move.b	ExOnHold(a5),d1
0088173E 4601                       		not.b	d1
00881740 B101                        		eor.b	d0,d1
00881742 C200                        		and.b	d0,d1
00881744 0241 000F                   		and.w	#$F,d1
00881748 1B41 0004                   		move.b	d1,ExOnPress(a5)
0088174C 4600                        		not.b	d0
0088174E 0240 000F                   		and.w	#$F,d0
00881752 1B40 0002                   		move.b	d0,ExOnHold(a5)
00881756                             		
00881756                            @Original:	
00881756 1B42 0001                  		move.b	d2,FightPad(a5)
0088175A                            	
0088175A 1CBC 0000                  		move.b	#0,(a6)
0088175E 4E71                       		nop
00881760 4E71                       		nop
00881762 1016                       		move.b	(a6),d0
00881764 E508                       		lsl.b	#2,d0
00881766 0200 00C0                  		and.b	#$C0,d0	
0088176A 1CBC 0040                  		move.b	#$40,(a6)
0088176E 4E71                       		nop
00881770 4E71                       		nop
00881772 1216                       		move.b	(a6),d1
00881774 0201 003F                  		and.b	#$3F,d1
00881778 8001                       		or.b	d1,d0
0088177A 4600                       		not.b	d0
0088177C 122D 0003                  		move.b	OnHold(a5),d1
00881780 B101                       		eor.b	d0,d1
00881782 1B40 0003                  		move.b	d0,OnHold(a5)
00881786 C200                       		and.b	d0,d1
00881788 1B41 0005                  		move.b	d1,OnPress(a5)
0088178C 4E75                       		rts
0088178E                            
0088178E                            ; ; ------------------------------------
0088178E                            ; ; Multitap
0088178E                            ; ; ------------------------------------
0088178E                            ; 
0088178E                            ; @Multitap:
0088178E                            ; 		bra	@End
0088178E                            
0088178E                            ; ------------------------------------
0088178E                            ; Sega Mega Mouse
0088178E                            ;
0088178E                            ; in: d1 - port number
0088178E                            ; out: d0 - status
0088178E                            ;      d2
0088178E                            ; ------------------------------------
0088178E                            
0088178E                            @Mouse:
0088178E 7200                       		moveq	#0,d1
00881790 6100 0000                  		bsr	@ReadIt
00881794                            		
00881794 2002                       		move.l	d2,d0
00881796 4840                       		swap	d0
00881798 0240 00FF                  		and.w	#$FF,d0
0088179C 122D 0003                  		move.b	OnHold(a5),d1
008817A0 B101                       		eor.b	d0,d1
008817A2 1B40 0003                  		move.b	d0,OnHold(a5)
008817A6 C200                        		and.b	d0,d1
008817A8 1B41 0005                  		move.b	d1,OnPress(a5)
008817AC                            		
008817AC                            		;TODO
008817AC 3002                       		move.w	d2,d0
008817AE 0240 00FF                  		and.w	#$FF,d0
008817B2 4880                       		ext.w	d0
008817B4 4440                       		neg.w	d0
008817B6 3B40 0008                   		move.w	d0,MouseY(a5)
008817BA                             		
008817BA E04A                        		lsr.w	#8,d2
008817BC 0242 00FF                   		and.w	#$FF,d2
008817C0 4882                       		ext.w	d2
008817C2 3B42 0006                   		move.w	d2,MouseX(a5)
008817C6 6000 FF1A                   		bra	@End
008817CA                            
008817CA                            ; ------------------------------------
008817CA                            
008817CA                            @ReadIt:
008817CA 48E7 5902                  		movem.l	d1/d3/d4/d7/a6,-(sp)
008817CE                            
008817CE 7000                       		moveq	#0,d0			;Error flag
008817D0 0C41 0002                  		cmp.w	#2,d1			;Control ID < 2?
008817D4 6200 0000                  		bhi	@Error
008817D8 D241                       		add.w	d1,d1
008817DA                            	;	lea	($A10003),a6
008817DA                            @Connect:
008817DA 1D7C 0060 0006             		move.b	#$60,6(a6)
008817E0 4E71                                       nop
008817E2 4E71                                       nop
008817E4 1CBC 0060                                  move.b	#$60,(a6)		;TH,TR=11 (END DATA)
008817E8 7400                                       moveq	#0,d2
008817EA 7600                                       moveq	#0,d3
008817EC                            @NotReady:
008817EC 0816 0004                   		btst	#4,(a6)
008817F0 67FA                        		beq.s	@NotReady
008817F2 1816                        		move.b	(a6),d4			;d4.b = ? 1 1 1 | 0 0 0
008817F4 0204 000F                   		and.b	#$F,d4
008817F8 4A04                        		tst.b	d4
008817FA 6600 0000                   		bne	@Error			;No mouse
008817FE 1CBC 0020                   		move.b	#$20,(a6)		;Select t1 m1 1 1
00881802 3E3C 00FE                   		move.w	#$FE,d7
00881806                            @lp1:
00881806 0816 0004                  		btst.b	#4,(a6)
0088180A 6600                       		bne.s	@Mouse_10
0088180C 51CF FFF8                  		dbra	d7,@lp1
00881810 6000 0000                  		bra	@Error
00881814                            		
00881814                            @Mouse_10:
00881814 1016                       		move.b	(a6),d0			;d0 = xxxx|xxxx|xxxx|t1 m1 1 1
00881816 E148                       		lsl.w	#8,d0			;d0 = xxxx|t1 m1 1 1|0000|0000
00881818 1CBC 0000                  		move.b	#0,(a6)
0088181C 4E71                       		nop
0088181E                            @lp2:
0088181E 0816 0004                  		btst	#4,(a6)
00881822 6700                       		beq.s	@Mouse_20
00881824 51CF FFF8                  		dbra	d7,@lp2
00881828 6000 0000                  		bra	@Error
0088182C                            		
0088182C                            @Mouse_20:
0088182C 1616                       		move.b	(a6),d3
0088182E 1CBC 0020                  		move.b	#$20,(a6)
00881832 E14B                       		lsl.w	#8,d3
00881834                            @lp3:
00881834 0816 0004                  		btst	#4,(a6)
00881838 6600                       		bne.s	@Mouse_30
0088183A 51CF FFF8                  		dbra	d7,@lp3
0088183E 6000 0000                  		bra	@Error
00881842                            		
00881842                            @Mouse_30:
00881842 1616                       		move.b	(a6),d3
00881844 E90B                       		lsl.b	#4,d3
00881846 E84B                       		lsr.w	#4,d3
00881848 1CBC 0000                  		move.b	#0,(a6)
0088184C 8043                       		or.w	d3,d0
0088184E 7600                       		moveq	#0,d3
00881850                            @lp4:
00881850 0816 0004                  		btst	#4,(a6)
00881854 6700                                       beq.s	@Mouse_40
00881856 51CF FFF8                                  dbra	d7,@lp4
0088185A 6000 0000                                  bra	@Error
0088185E                            
0088185E                            @Mouse_40:
0088185E 1416                       		move.b	(a6),d2
00881860 1CBC 0020                  		move.b	#$20,(a6)
00881864 E14A                       		lsl.w	#8,d2
00881866                            @lp5:
00881866 0816 0004                  		btst	#4,(a6)
0088186A 6600                       		bne.s	@Mouse_50
0088186C 51CF FFF8                  		dbra	d7,@lp5
00881870 6000 0000                  		bra	@Error
00881874                            		
00881874                            @Mouse_50:
00881874 1416                       		move.b	(a6),d2
00881876 1CBC 0000                  		move.b	#0,(a6)
0088187A E90A                       		lsl.b	#4,d2
0088187C E94A                       		lsl.w	#4,d2
0088187E                            @lp6:
0088187E 0816 0004                  		btst	#4,(a6)
00881882 6700                       		beq.s	@Mouse_60
00881884 51CF FFF8                  		dbra	d7,@lp6
00881888 6000 0000                  		bra	@Error
0088188C                            
0088188C                            @Mouse_60:
0088188C 1416                       		move.b	(a6),d2
0088188E 1CBC 0020                  		move.b	#$20,(a6)
00881892 E90A                       		lsl.b	#4,d2
00881894 E98A                       		lsl.l	#4,d2
00881896                            @lp7:
00881896 0816 0004                  		btst	#4,(a6)
0088189A 6600                       		bne.s	@Mouse_70
0088189C 51CF FFF8                  		dbra	d7,@lp7
008818A0 6000                       		bra.s	@Error
008818A2                            
008818A2                            @Mouse_70:
008818A2 1416                       		move.b	(a6),d2
008818A4 1CBC 0000                  		move.b	#0,(a6)
008818A8 E90A                       		lsl.b	#4,d2
008818AA E98A                       		lsl.l	#4,d2
008818AC                            @lp8:
008818AC 0816 0004                  		btst	#4,(a6)
008818B0 6700                       		beq.s	@Mouse_80
008818B2 51CF 0000                  		dbra	d7,@Mouse_80
008818B6 6000                       		bra.s	@Error
008818B8                            
008818B8                            @Mouse_80:
008818B8 1416                       		move.b	(a6),d2
008818BA 1CBC 0020                  		move.b	#$20,(a6)
008818BE E90A                       		lsl.b	#4,d2
008818C0 E98A                       		lsl.l	#4,d2
008818C2                            @lp9:
008818C2 0816 0004                  		btst	#4,(a6)
008818C6 6700                       		beq.s	@Mouse_90
008818C8 51CF FFF8                  		dbra	d7,@lp9
008818CC 6000                       		bra.s	@Error
008818CE                            
008818CE                            @Mouse_90:
008818CE 1416                       		move.b	(a6),d2
008818D0 1CBC 0060                  		move.b	#$60,(a6)
008818D4 E90A                       		lsl.b	#4,d2
008818D6 E88A                       		lsr.l	#4,d2
008818D8                            @lp10:
008818D8 0816 0004                  		btst	#4,(a6)
008818DC 67FA                       		beq.s	@lp10
008818DE 0082 0000 0000             		or.l	#0,d2
008818E4                            @Exit:
008818E4 33FC 0000 00A1 1100        		move.w	#0,($A11100)
008818EC 4CDF 409A                  		movem.l	(sp)+,d1/d3/d4/d7/a6
008818F0 4E75                       		rts
008818F2                            
008818F2                            @Error:
008818F2 1CBC 0060                  		move.b	#$60,(a6)
008818F6 4E71                       		nop
008818F8 4E71                       		nop
008818FA                            @erlp:
008818FA 1CBC 0004                  		move.b	#4,(a6)
008818FE 67FA                       		beq.s	@erlp
00881900 0082 8000 0000             		or.l	#$80000000,d2
00881906 7000                       		moveq	#0,d0
00881908 33FC 0000 00A1 1100        		move.w	#0,($A11100)
00881910 4CDF 409A                  		movem.l	(sp)+,d1/d3/d4/d7/a6
00881914 4E75                       		rts
00881916                            
00881916                            ; ------------------------------------
00881916                            ; d0.w
00881916                            ; $0F - Nothing
00881916                            ; $0D - Controller
00881916                            ; $07 - Multitap
00881916                            ; $03 - Mouse
00881916                            ;
00881916                            ; d1.l
00881916                            ; $00xx00yy - Key presses
00881916                            ; ------------------------------------
00881916                            
00881916                            @FindJoypad:
00881916 7000                       		moveq	#0,d0
00881918 1CBC 0070                  		move.b	#$70,(a6)
0088191C 6100                       		bsr.s	@GetPress
0088191E 4841                       		swap	d1
00881920 1CBC 0030                  		move.b	#$30,(a6)
00881924 D040                       		add.w	d0,d0
00881926                            
00881926                            @GetPress:
00881926 1216                       		move.b	(a6),d1
00881928 1401                       		move.b	d1,d2
0088192A 0202 000C                  		and.b	#$C,d2
0088192E 6700                       		beq.s	@Nope1
00881930 5240                       		addq.w	#1,d0
00881932                            
00881932                            @Nope1:
00881932 D040                       		add.w	d0,d0
00881934 1601                       		move.b	d1,d3
00881936 0243 0003                  		and.w	#3,d3
0088193A 6700                       		beq.s	@Nope2
0088193C 5240                       		addq.w	#1,d0
0088193E                            
0088193E                            @Nope2:
0088193E 4E75                       		rts
00881940                            		
00881940                            		
00881940                            		include	"engine/subs/dma.asm"
00881940                            ; =====================================================================================
00881940                            ; DMA
00881940                            ; =====================================================================================
00881940                            
00881940                            ; -----------------------------------
00881940                            ; Read
00881940                            ; -----------------------------------
00881940                            
00881940                            ; ROM data
00881940                            ; Size
00881940                            ; VRAM Destiantion
00881940                            
00881940                            DMA_Read:
00881940 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
00881948                            @WaitZ80:
00881948 0839 0000 00A1 1100        		btst	#0,($A11100).l
00881950 66F6                       		bne.s	@WaitZ80
00881952                            		
00881952 4DF9 FFFF DCE2              		lea	(RAM_DMA_Buffer),a6
00881958                             		
00881958 381E                         		move.w	(a6)+,d4
0088195A 4A44                         		tst.w	d4
0088195C 6700 0000                    		beq	@FinishList
00881960 0444 0001                    		sub.w	#1,d4
00881964                            @NextEntry:
00881964 2C1E                        		move.l	(a6)+,d6			;ROM address
00881966 0286 000F FFFF             		and.l	#$FFFFF,d6
0088196C E28E                         		lsr.l	#1,d6
0088196E 3A3C 9500                    		move.w	#$9500,d5
00881972 1A06                        		move.b	d6,d5
00881974 33C5 00C0 0004              		move.w	d5,($C00004).l
0088197A 2A3C 9700 9600               		move.l	#$97009600,d5			;ROM Address (XXXX00)
00881980 E08E                        		lsr.l	#8,d6
00881982 1A06                        		move.b	d6,d5
00881984 4845                        		swap	d5
00881986 E08E                        		lsr.l	#8,d6
00881988 1A06                        		move.b	d6,d5
0088198A 23C5 00C0 0004              		move.l	d5,($C00004).l
00881990                             		
00881990 2A3C 9400 9300              		move.l	#$94009300,d5			;Size
00881996 3C1E                        		move.w	(a6)+,d6
00881998 1A06                        		move.b	d6,d5
0088199A 4845                        		swap	d5
0088199C E04E                        		lsr.w	#8,d6
0088199E 1A06                        		move.b	d6,d5
008819A0 23C5 00C0 0004              		move.l	d5,($C00004).l
008819A6                             		
008819A6 3C1E                        		move.w	(a6)+,d6			;VRAM Destiantion
008819A8 0246 07FF                   		and.w	#$7FF,d6
008819AC EB4E                        		lsl.w	#5,d6				;x20
008819AE 0286 0000 FFE0              		and.l	#$FFE0,d6
008819B4 E58E                        		lsl.l	#2,d6
008819B6 E44E                        		lsr.w	#2,d6
008819B8 4846                        		swap	d6
008819BA 0086 4000 0080              		or.l	#$40000080,d6
008819C0 23C6 00C0 0004              		move.l	d6,($C00004)
008819C6 51CC FF9C                   		dbf	d4,@NextEntry
008819CA                            @FinishList:
008819CA 4279 FFFF DCE2             		clr.w	(RAM_DMA_Buffer)
008819D0 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
008819D8 4E75                        		rts
008819DA                            
008819DA                            ; -----------------------------------
008819DA                            ; Set new entry to the list
008819DA                            ; 
008819DA                            ; Input:
008819DA                            ; d0 - ROM Address
008819DA                            ; d1 - Size
008819DA                            ; d2 - VRAM
008819DA                            ; 
008819DA                            ; Uses:
008819DA                            ; a2/d3
008819DA                            ; -----------------------------------
008819DA                            
008819DA                            DMA_Set:
008819DA 45F9 FFFF DCE2             		lea	(RAM_DMA_Buffer),a2
008819E0 0C52 0040                  		cmp.w	#64,(a2)
008819E4 6C00                       		bge.s	@Return
008819E6 3612                       		move.w	(a2),d3
008819E8 E74B                       		lsl.w	#3,d3			;Size: 8
008819EA D4C3                       		adda 	d3,a2
008819EC D4FC 0002                  		adda	#2,a2
008819F0                            
008819F0 24C0                       		move.l	d0,(a2)+		;ROM Address
008819F2 34C1                       		move.w	d1,(a2)+
008819F4 34C2                       		move.w	d2,(a2)+
008819F6 0679 0001 FFFF DCE2        		add.w	#1,(RAM_DMA_Buffer)
008819FE                            @Return:
008819FE 4E75                       		rts
00881A00                            
00881A00                            ; -----------------------------------
00881A00                            ; Quick set
00881A00                            ; 
00881A00                            ; External
00881A00                            ; 
00881A00                            ; d0 - Destiantion
00881A00                            ; d1 - Source
00881A00                            ; d2 - Size
00881A00                            ; -----------------------------------
00881A00                            
00881A00                            DMA_QuickSet:
00881A00 48E7 0060                  		movem.l	a1-a2,-(sp)
00881A04 2241                       		move.l	d1,a1
00881A06 5481                       		addq.l	#2,d1
00881A08 E281                       		asr.l	#1,d1
00881A0A 45F9 00C0 0004             		lea	($C00004).l,a2
00881A10 34BC 8F02                  		move.w	#$8F02,(a2)
00881A14                            ; 		move.w	#$8164,d3
00881A14                            ; 		bset	#4,d3
00881A14                            ; 		move.w	d3,(a2)
00881A14 263C 0094 0000             		move.l	#$940000,d3
00881A1A 3602                       		move.w	d2,d3
00881A1C E18B                       		lsl.l	#8,d3
00881A1E 363C 9300                  		move.w	#$9300,d3
00881A22 1602                       		move.b	d2,d3
00881A24 2483                       		move.l	d3,(a2)
00881A26 263C 0096 0000             		move.l	#$960000,d3
00881A2C 3601                       		move.w	d1,d3
00881A2E E18B                       		lsl.l	#8,d3
00881A30 363C 9500                  		move.w	#$9500,d3
00881A34 1601                       		move.b	d1,d3
00881A36 2483                       		move.l	d3,(a2)
00881A38 4841                       		swap	d1
00881A3A 363C 9700                  		move.w	#$9700,d3
00881A3E 1601                       		move.b	d1,d3
00881A40 3483                       		move.w	d3,(a2)
00881A42 0080 4000 0080             		or.l	#$40000080,d0
00881A48 4840                       		swap	d0
00881A4A 3480                       		move.w	d0,(a2)
00881A4C 4840                       		swap	d0
00881A4E 3F00                       		move.w	d0,-(sp)
00881A50 349F                       		move.w	(sp)+,(a2)
00881A52                            ; 		move.w	#$8164,(a2)
00881A52 0240 FF7F                  		and.w	#$FF7F,d0
00881A56 2480                       		move.l	d0,(a2)
00881A58 2551 FFFC                  		move.l	(a1),-4(a2)
00881A5C 34BC 8F02                  		move.w	#$8F02,(a2)
00881A60 4CDF 0600                  		movem.l	(sp)+,a1-a2
00881A64 4E75                       		rts
00881A66                            		
00881A66                            		
00881A66                                            include	"engine/ints.asm"
00881A66                            ; ====================================================================
00881A66                            ; -------------------------------------------------
00881A66                            ; VBlank
00881A66                            ; -------------------------------------------------
00881A66                            
00881A66                            MD_Vint:
00881A66 4AB9 FFFF D882             		tst.l	(RAM_VIntAddr)
00881A6C 6700                       		beq.s	@NoVIntEx
00881A6E                            		
00881A6E 48E7 FFFE                  		movem.l	a0-a6/d0-d7,-(sp)
00881A72 4EB9 FFFF D880             		jsr	(RAM_VIntJumpTo)
00881A78 4CDF 7FFF                  		movem.l	(sp)+,a0-a6/d0-d7
00881A7C                            @NoVIntEx:
00881A7C 52B9 FFFF D88C             		addq.l	#1,(RAM_FrameCount)
00881A82 08F9 0001 FFFF D890        		bset	#1,(RAM_VIntWait)
00881A8A 08B9 0000 FFFF D890        		bclr	#bitFrameWait,(RAM_VIntWait)
00881A92 4E73                       		rte
00881A94                            
00881A94                            ; ====================================================================
00881A94                            ; -------------------------------------------------
00881A94                            ; HBlank
00881A94                            ; -------------------------------------------------
00881A94                            
00881A94                            MD_Hint:		
00881A94 4EB9 FFFF D886             		jsr	(RAM_HIntJumpTo)
00881A9A 4E73                       		rte
00881A9C                            		
00881A9C                            ; ====================================================================
00881A9C                            ; -------------------------------------------------
00881A9C                            ; Separate routines
00881A9C                            ; -------------------------------------------------
00881A9C                            
00881A9C                            VInt_Default:
00881A9C 6100 F3B0                  		bsr	PalFade
00881AA0 6100 0000                  		bsr	SMEG_Upd
00881AA4 6100 FBE2                  		bsr	Pads_Read
00881AA8                            ;  		bsr	DMA_Read
00881AA8                             	
00881AA8                            ; -------------------------------------------------
00881AA8                            
00881AA8                            Dma_Visual:
00881AA8                            ; 		move.w	#$100,($A11100)
00881AA8                            ; @WaitZ80:
00881AA8                            ; 		btst	#0,($A11100)
00881AA8                            ;  		bne.s	@WaitZ80
00881AA8                             		
00881AA8                            ; -----------
00881AA8                             
00881AA8 4DF9 00C0 0004             		lea	($C00004),a6
00881AAE                            		
00881AAE                            ; -----------
00881AAE                            ; Palette
00881AAE                            ; -----------
00881AAE 2CBC 9340 9400              		move.l	#$9400+((($80)&$FF00)>>9)|(($9300+((($80)&$FF)>>1))<<16),(a6)
00881AB4 2CBC 9549 96F4              		move.l	#$9600+(((RAM_PalBuffer>>1)&$FF00)>>8)|(($9500+((RAM_PalBuffer>>1)&$FF))<<16),(a6)
00881ABA 3CBC 977F                  		move.w	#$9700+((((RAM_PalBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00881ABE 3CBC C000                  		move.w	#$C000,(a6)
00881AC2 3F3C 0080                  		move.w	#$0000|$80,-(sp)
00881AC6 3C9F                       		move.w	(sp)+,(a6)
00881AC8                            ; -----------
00881AC8                            ; Sprites
00881AC8                            ; -----------
00881AC8 2CBC 9401 9340              		move.l	#(($9400|(((($280)>>1)&$FF00)>>8))<<16)|($9300|((($280)>>1)&$FF)),(a6)
00881ACE 2CBC 9509 96F3              		move.l	#$9600+(((RAM_SprBuffer>>1)&$FF00)>>8)|(($9500+((RAM_SprBuffer>>1)&$FF))<<16),(a6)
00881AD4 3CBC 977F                  		move.w	#$9700+((((RAM_SprBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00881AD8 3CBC 7800                  		move.w	#$7800,(a6)
00881ADC 3F3C 0083                  		move.w	#$0003|$80,-(sp)
00881AE0 3C9F                       		move.w	(sp)+,(a6)
00881AE2                            ; -----------	
00881AE2                            ; Horizontal
00881AE2                            ; -----------
00881AE2 2CBC 9401 93E0              		move.l	#(($9400|(((((240*4))>>1)&$FF00)>>8))<<16)|($9300|((((240*4))>>1)&$FF)),(a6)
00881AE8 2CBC 9501 96F1              		move.l	#$9600+(((RAM_HorBuffer>>1)&$FF00)>>8)|(($9500+((RAM_HorBuffer>>1)&$FF))<<16),(a6)
00881AEE 3CBC 977F                  		move.w	#$9700+((((RAM_HorBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00881AF2 3CBC 7C00                  		move.w	#$7C00,(a6)
00881AF6 3F3C 0083                  		move.w	#$0003|$80,-(sp)
00881AFA 3C9F                       		move.w	(sp)+,(a6)
00881AFC                            	
00881AFC                            ; -----------
00881AFC                            ; Vertical
00881AFC                            ; -----------
00881AFC                            
00881AFC                            ; TODO checar bien esto
00881AFC                            
00881AFC 2CBC 9400 9328              		move.l	#(($9400|((((($50))>>1)&$FF00)>>8))<<16)|($9300|(((($50))>>1)&$FF)),(a6)
00881B02 2CBC 95E1 96F2              		move.l	#$9600+(((RAM_VerBuffer>>1)&$FF00)>>8)|(($9500+((RAM_VerBuffer>>1)&$FF))<<16),(a6)
00881B08 3CBC 977F                  		move.w	#$9700+((((RAM_VerBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00881B0C 3CBC 4000                  		move.w	#$4000,(a6)
00881B10 3F3C 0090                  		move.w	#$0010|$80,-(sp)
00881B14 3C9F                       		move.w	(sp)+,(a6)
00881B16                            
00881B16                            ; 		move.w	#0,($A11100).l
00881B16                            		
00881B16                            ; 		lea	(RAM_PalBuffer),a0
00881B16                            ;  		move.l	#$C0000000,($C00004).l
00881B16                            ;  		move.w	#$3F,d0
00881B16                            ; @PalBuf:
00881B16                            ; 		move.w	(a0)+,($C00000).l
00881B16                            ;  		dbf	d0,@PalBuf
00881B16                            ; 
00881B16                            ; 		lea	(RAM_SprBuffer),a0
00881B16                            ; 		move.l	#$78000003,($C00004).l
00881B16                            ; 		move.w	#$9F,d0
00881B16                            ; @SprBuf:
00881B16                            ; 		move.l	(a0)+,($C00000).l
00881B16                            ; 		dbf	d0,@SprBuf
00881B16                            ; 		
00881B16                            ; 		lea	(RAM_VerBuffer),a0
00881B16                            ; 		move.l	#$40000010,($C00004).l
00881B16                            ; 		move.w	#$F,d0
00881B16                            ; @VerBuf:
00881B16                            ; 		move.l	(a0)+,($C00000).l
00881B16                            ; 		dbf	d0,@VerBuf
00881B16                            ; 
00881B16                            ; 		lea	(RAM_HorBuffer),a0
00881B16                            ; 		move.l	#$7C000003,($C00004).l
00881B16                            ; 		move.w	#224-1,d0
00881B16                            ; @HorBuf:
00881B16                            ; 		move.l	(a0)+,($C00000).l
00881B16                            ; 		dbf	d0,@HorBuf
00881B16                            
00881B16 4E75                       		rts
00881B18                            
00881B18                            ; -------------------------------------------------
00881B18                            
00881B18                            Hint_Default:
00881B18 4E75                       		rts
00881B18 4E75                       		rts
00881B1A                                            
00881B1A                            ; ====================================================================
00881B1A                            ; ---------------------------------------------
00881B1A                            ; Code | Modes
00881B1A                            ; ---------------------------------------------
00881B1A                            
00881B1A                            ; 		include	"engine/modes/level/code.asm"
00881B1A                            		include	"engine/modes/title/code.asm"
00881B1A                            ; =================================================================
00881B1A                            ; Title
00881B1A                            ; =================================================================
00881B1A                            
00881B1A                            ; =================================================================
00881B1A                            ; ------------------------------------------------
00881B1A                            ; Includes
00881B1A                            ; ------------------------------------------------
00881B1A                            
00881B1A                            ; =================================================================
00881B1A                            ; ------------------------------------------------
00881B1A                            ; Variables
00881B1A                            ; ------------------------------------------------
00881B1A                            
00881B1A                            ; =================================================================
00881B1A                            ; ------------------------------------------------
00881B1A                            ; RAM (for RAM_ModeBuffer)
00881B1A                            ; ------------------------------------------------
00881B1A                            
00881B1A                            		rsreset
00881B1A =00000000                  TanValue	rs.w	1
00881B1A =00000002                  SpeedVal	rs.w	1
00881B1A =00000004                  StrchVal	rs.w	1
00881B1A =00000006                  WaveVal		rs.w	1
00881B1A =00000008                  Timer1		rs.w	1
00881B1A =0000000A                  TmpVal_Rot	rs.w	1
00881B1A =0000000C                  TmpVal_Zoom	rs.w	1
00881B1A =0000000E                  PickSong	rs.w	1
00881B1A =00000010                  PickLevel	rs.w	1
00881B1A =00000012                  StrchVer	rs.w	1
00881B1A =00000014                  WavePitch	rs.w	1
00881B1A                            
00881B1A =00000016                  StampX		rs.w	1
00881B1A =00000018                  StampY		rs.w	1
00881B1A =0000001A                  StampXD		rs.w	1
00881B1A =0000001C                  StampYD		rs.w	1
00881B1A =0000001E                  ModelZ		rs.w	1
00881B1A                            
00881B1A                            ; =================================================================
00881B1A                            ; ------------------------------------------------
00881B1A                            ; Init
00881B1A                            ; ------------------------------------------------
00881B1A                            
00881B1A                            mode_Title:
00881B1A 6100 F7CC                  		bsr	Mode_FadeOut
00881B1E                            
00881B1E 46FC 2700                  		move.w	#$2700,sr
00881B22                            		
00881B22                            ; -----------------------------------
00881B22                            ; Cleanup
00881B22                            ; -----------------------------------
00881B22                            
00881B22 6100 F028                  		bsr	Vdp_ClearPlanes
00881B26 6100 F752                  		bsr	Mode_Cleanup
00881B2A                            		
00881B2A 23FC 0088 1A9C FFFF D882   		move.l	#VInt_Default,(RAM_VIntAddr)
00881B34 23FC 0088 1B18 FFFF D888   		move.l	#Hint_Default,(RAM_HIntAddr)
00881B3E 41F9 FFFF E912             		lea	(RAM_VdpRegs),a0
00881B44 117C 0000 000A                 		move.b	#0,vdpReg_HVal(a0)
00881B4A 117C 0081 000C             		move.b	#vdp_H40,vdpReg_HMode(a0)
00881B50 117C 0001 0010             		move.b	#1,vdpReg_PlnSize(a0)
00881B56 117C 0003 000B             		move.b	#3,vdpReg_Scroll(a0)
00881B5C 4228 0012                  		clr.b	vdpReg_WindowY(a0)
00881B60                            ; 		if SEGACD=0
00881B60                            ; 		if MARS=0
00881B60                            ;        		bset	#bit_vdpHint,(a0)
00881B60                            ; 		endif
00881B60                            ; 		endif
00881B60 6100 F256                   		bsr	Vdp_Update
00881B64                            
00881B64                            ; -----------------------------------
00881B64                            ; MD ONLY: show sample picture
00881B64                            ; -----------------------------------
00881B64                            
00881B64 41F9 0000 0000              		lea	(Map_Title),a0
00881B6A 7001                        		moveq	#1,d0
00881B6C 223C 0000 0000              		move.l	#($0000<<16)|$0000,d1
00881B72 243C 0027 001B               		move.l	#((((320)/8)-1)<<16)|(((224)/8)-1),d2
00881B78 363C 0001                   		move.w	#1,d3
00881B7C 6100 F196                   		bsr	VDP_LoadMaps
00881B80 41F9 0000 0000             		lea	(Art_Title),a0
00881B86 303C 0001                  		move.w	#1,d0
00881B8A 3218                       		move.w	(a0)+,d1
00881B8C 6100 F046                  		bsr	VDP_SendData_L
00881B90 43F9 FFFF E102               		lea	(RAM_PalFadeBuff),a1
00881B96 41F9 0000 0000             		lea	(Pal_Title),a0
00881B9C 303C 000F                    		move.w	#$F,d0
00881BA0 6100 F77A                    		bsr	LoadData_Word
00881BA4                            
00881BA4                            ; -----------------------------------
00881BA4                            ; Init features	
00881BA4                            ; -----------------------------------
00881BA4                              		
00881BA4 41F9 0000 0000               		lea	(Art_TempFont),a0
00881BAA 303C 0580                     		move.w	#$580,d0
00881BAE 323C 0000                     		move.w	#((Art_TempFont_End-Art_TempFont)/4)-1,d1
00881BB2 6100 F020                     		bsr	VDP_SendData_L
00881BB6                               		
00881BB6 43F9 FFFF 6880             		lea	(RAM_ModeBuffer),a1
00881BBC 337C 0003 0002             		move.w	#3,SpeedVal(a1)
00881BC2 337C 0004 0004             		move.w	#4,StrchVal(a1)
00881BC8 337C 0006 0006             		move.w	#6,WaveVal(a1)
00881BCE 4269 0010                  		clr.w	PickLevel(a1)
00881BD2                            		
00881BD2 33FC 00EE FFFF E146         		move.w	#$0EE,(RAM_PalFadeBuff+$44)
00881BDA 33FC 0E00 FFFF E166         		move.w	#$E00,(RAM_PalFadeBuff+$64)
00881BE2                            ; 		bsr	ScrewBG
00881BE2                            		
00881BE2 203C 0000 0000             		move.l	#TestSong_4,d0
00881BE8 323C 0001                  		move.w	#2-1,d1
00881BEC 6100 0000                  		bsr	SMEG_LoadSong
00881BF0                            		
00881BF0 6100 0000                   		bsr	LevelNames
00881BF4                             		
00881BF4                            ; -----------------------------------
00881BF4                            
00881BF4 33FC FF00 FFFF 6892        		move.w	#$FF00,(RAM_ModeBuffer+StrchVer)
00881BFC 4239 FFFF 688E                		clr.b	(RAM_ModeBuffer+PickSong)
00881C02 46FC 2000                  		move.w	#$2000,sr
00881C06 6100 F6B4                   		bsr	Mode_FadeIn
00881C0A                            		
00881C0A                            ; =================================================================
00881C0A                            ; ------------------------------------------------
00881C0A                            ; Loop
00881C0A                            ; ------------------------------------------------
00881C0A                            
00881C0A                            Title_Loop:
00881C0A 6100 F1CE                  		bsr	VSync
00881C0E                            ; 		bsr	ScrewBG
00881C0E                            		
00881C0E 43F9 FFFF 6880             		lea	(RAM_ModeBuffer),a1
00881C14                            		
00881C14                            ; ------------------------------------------
00881C14                            ; MD Controls
00881C14                            ; ------------------------------------------
00881C14                            
00881C14                            ; 		else
00881C14                            		
00881C14                            ;    		btst	#bitJoyDown,(RAM_Joypads+OnPress)
00881C14                            ;    		beq.s	@dontscrl_down2
00881C14                            ; 		cmp.w	#$3C-12,WavePitch(a1)
00881C14                            ; 		beq.s	@dontscrl_up2
00881C14                            ; 		sub.w 	#1,WavePitch(a1)
00881C14                            ; 		move.w	WavePitch(a1),d0
00881C14                            ; 		bsr	Z80_SetSmplNote
00881C14                            ;  		bsr	LevelNames
00881C14                            ; @dontscrl_down2:
00881C14                            ; 		btst	#bitJoyUp,(RAM_Joypads+OnPress)
00881C14                            ; 		beq.s	@dontscrl_up2
00881C14                            ; 		cmp.w	#$3C+10,WavePitch(a1)
00881C14                            ; 		beq.s	@dontscrl_up2
00881C14                            ; 		add.w 	#1,WavePitch(a1)
00881C14                            ; 		move.w	WavePitch(a1),d0
00881C14                            ; 		bsr	Z80_SetSmplNote
00881C14 6100 0000                    		bsr	LevelNames
00881C18                            ; @dontscrl_up2:
00881C18                            
00881C18 0839 0004 FFFF D897        		btst	#bitJoyB,(RAM_Joypads+OnPress)
00881C20 6700                       		beq.s	@NotVdpHor
00881C22 0879 0000 FFFF E91E        		bchg	#0,(RAM_VdpRegs+vdpReg_HMode)
00881C2A 0879 0007 FFFF E91E        		bchg	#7,(RAM_VdpRegs+vdpReg_HMode)
00881C32 6100 F184                  		bsr	Vdp_Update
00881C36                            @NotVdpHor:
00881C36                            
00881C36                            ;  		moveq	#0,d0
00881C36                            ;  		move.l	#($0000<<16)|$0000,d1
00881C36                            ;   		move.l	#$560+"0",d2
00881C36                            ;  		move.w	StrchVer(a1),d3
00881C36                            ;  		bsr	Vdp_ShowVal_W
00881C36                            		
00881C36                            ; ------------------------------------------
00881C36                            
00881C36                            ; 		endif
00881C36                            		
00881C36                            ; 		btst	#bitJoyStart,(RAM_Joypads+OnPress)
00881C36                            ; 		beq.s	@NotStart
00881C36                            ; 		
00881C36                            ; ; 		if MARS=0
00881C36                            ; ; 		if SegaCD=0
00881C36                            ; ; 		jmp	MD_AddrError
00881C36                            ; ; 		endif
00881C36                            ; ; 		endif
00881C36                            ; 		
00881C36                            ; 		bra	Title_LoadLevel
00881C36                            ; @NotStart:
00881C36 6000 FFD2                  		bra	Title_Loop
00881C3A                                            
00881C3A                            ; =================================================================
00881C3A                            ; ------------------------------------------------
00881C3A                            ; Hblank
00881C3A                            ; ------------------------------------------------
00881C3A                            	
00881C3A                            HInt_Title:
00881C3A 48E7 C000                  		movem.l	d0-d1,-(sp)
00881C3E                            		
00881C3E 23FC 4000 0010 00C0 0004   		move.l	#$40000010,($C00004).l
00881C48 33FC 0000 00C0 0000        		move.w	#0,($C00000).l
00881C50 2039 FFFF E5C2             		move.l	(RAM_VerBuffer),d0
00881C56 4840                       		swap	d0
00881C58 4880                       		ext.w	d0
00881C5A 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
00881C60 E249                          		lsr.w	#1,d1
00881C62 9041                        		sub.w	d1,d0
00881C64 33C0 00C0 0000             		move.w	d0,($C00000).l
00881C6A                            		
00881C6A 7200                        		moveq	#0,d1
00881C6C 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
00881C72 E189                         		lsl.l	#8,d1
00881C74 D3B9 FFFF E5C2              		add.l	d1,(RAM_VerBuffer)
00881C7A                            		
00881C7A 4CDF 0003                  		movem.l	(sp)+,d0-d1
00881C7E                            @holdon:
00881C7E 4E75                       		rts
00881C80                            		
00881C80                            ; =================================================================
00881C80                            ; ------------------------------------------------
00881C80                            ; VBlank
00881C80                            ; ------------------------------------------------
00881C80                            
00881C80                            Vint_Title:
00881C80 23FC 4000 0010 00C0 0004   		move.l	#$40000010,($C00004).l
00881C8A 23FC 0000 0000 00C0 0000   		move.l	#0,($C00000).l
00881C94 2039 FFFF E5C2             		move.l	(RAM_VerBuffer),d0
00881C9A 4840                       		swap	d0
00881C9C 4880                       		ext.w	d0
00881C9E 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
00881CA4 E249                          		lsr.w	#1,d1
00881CA6 9041                        		sub.w	d1,d0
00881CA8 33C0 00C0 0000             		move.w	d0,($C00000).l
00881CAE 42B9 FFFF E5C2             		clr.l	(RAM_VerBuffer)
00881CB4                            
00881CB4 6100 0000                  		bsr	SMEG_Upd
00881CB8 6100 F194                  		bsr	PalFade
00881CBC 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
00881CC4                            @WaitZ80:
00881CC4 0839 0000 00A1 1100        		btst	#0,($A11100).l
00881CCC 66F6                       		bne.s	@WaitZ80
00881CCE 6100 F9B8                  		bsr	Pads_Read
00881CD2 6100 FC6C                   		bsr	DMA_Read
00881CD6 33FC 0000 00A1 1100         		move.w	#0,($A11100).l
00881CDE                            
00881CDE 6000 FDC8                   		bra	Dma_Visual
00881CE2 4E75                       		rts
00881CE4                            		
00881CE4                            ; =================================================================
00881CE4                            ; ------------------------------------------------
00881CE4                            ; Subs
00881CE4                            ; ------------------------------------------------
00881CE4                            
00881CE4                            ; ---------------------------
00881CE4                            ; Screw the bg
00881CE4                            ; ---------------------------
00881CE4                            
00881CE4                            ScrewBG:
00881CE4 7000                       		moveq	#0,d0
00881CE6 3029 0000                  		move.w	TanValue(a1),d0
00881CEA 6100 F65A                  		bsr	CalcSine
00881CEE 3229 0006                  		move.w	WaveVal(a1),d1
00881CF2 E260                         		asr.w	d1,d0
00881CF4                             		
00881CF4 41F9 FFFF E202             		lea	(RAM_HorBuffer),a0
00881CFA 3C3C 00DF                  		move.w	#(224)-1,d6
00881CFE                            		
00881CFE 3629 0000                  		move.w	TanValue(a1),d3
00881D02 3803                       		move.w	d3,d4
00881D04 0644 0080                  		add.w	#$80,d4
00881D08 7A00                       		moveq	#0,d5
00881D0A                            		
00881D0A                            @next_line:
00881D0A                            ; 		move.w	d0,d2
00881D0A                            ; 		
00881D0A                            ; 		move.w	d5,(a0)
00881D0A                            ; 		move.w	d4,d0
00881D0A                            ; 		bsr	CalcSine
00881D0A                            ; 		move.w	d0,d5
00881D0A                            ;  		asr.w	#5,d5
00881D0A                            ;  		
00881D0A                            ;  		move.w	d2,d0
00881D0A                             		
00881D0A 3140 0002                  		move.w	d0,2(a0)
00881D0E 3003                       		move.w	d3,d0
00881D10 6100 F634                  		bsr	CalcSine
00881D14 3229 0006                  		move.w	WaveVal(a1),d1
00881D18 E260                        		asr.w	d1,d0
00881D1A                            
00881D1A D669 0004                  		add.w	StrchVal(a1),d3
00881D1E 0644 0001                  		add.w	#1,d4
00881D22                            		
00881D22 D0FC 0004                  		adda	#4,a0
00881D26 51CE FFE2                  		dbf	d6,@next_line
00881D2A                            		
00881D2A 3029 0002                  		move.w	SpeedVal(a1),d0
00881D2E D169 0000                  		add.w	d0,TanValue(a1)
00881D32                            		
00881D32                            ; 		lea	(RAM_VerBuffer),a0
00881D32                            ; 		moveq	#0,d1
00881D32                            ; 		move.w	Timer1(a1),d1
00881D32                            ; ; 		swap	d1
00881D32                            ; 		clr.l	(a0)+
00881D32                            ; 		move.w	d1,d0
00881D32                            ; 		lsr.w	#2,d0
00881D32                            ; 		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+		
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		
00881D32                            ; 		move.w	d1,d0
00881D32                            ; 		lsr.w	#3,d0	
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		
00881D32                            ; 		move.w	d1,d0
00881D32                            ; 		lsr.w	#2,d0	
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		
00881D32                            ; 		move.w	d1,d0
00881D32                            ; 		lsr.w	#4,d0	
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  	
00881D32                            ; 		move.w	d1,d0
00881D32                            ; 		lsr.w	#3,d0	
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  	
00881D32                            ; 		move.w	d1,d0
00881D32                            ; 		lsr.w	#2,d0	
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                            ;  		move.l	d0,(a0)+
00881D32                             		
00881D32 0669 0001 0008             		add.w	#1,Timer1(a1)
00881D38 4E75                       		rts
00881D3A                            
00881D3A                            ; ---------------------------
00881D3A                            ; Show the level names
00881D3A                            ; ---------------------------
00881D3A                            
00881D3A                            LevelNames:
00881D3A 49F9 0000 0000             		lea	(RAM_SMEG_Chnls_BGM),a4
00881D40 383C C112                  		move.w	#$C000+($80*2)+($02*9),d4
00881D44 7605                        		moveq	#6-1,d3
00881D46 6100 0000                  		bsr	@channels
00881D4A                            
00881D4A 383C C612                  		move.w	#$C000+($80*12)+($02*9),d4
00881D4E 7603                        		moveq	#4-1,d3
00881D50 6100 0000                  		bsr	@channels
00881D54                            
00881D54 383C CA92                  		move.w	#$C000+($80*21)+($02*9),d4
00881D58 7603                        		moveq	#4-1,d3
00881D5A 6100 0000                  		bsr	@channels
00881D5E 383C CAAE                  		move.w	#$C000+($80*21)+($02*23),d4
00881D62 7603                        		moveq	#4-1,d3
00881D64 6100 0000                  		bsr	@channels
00881D68                            		
00881D68 4E75                       		rts
00881D6A                            		
00881D6A                            @channels:
00881D6A                            
00881D6A                            @next_y:
00881D6A 3004                       		move.w	d4,d0
00881D6C 6100 EE7E                  		bsr	VDP_VramToCmd
00881D70 23C0 00C0 0004             		move.l	d0,($C00004).l
00881D76 45FA 0000                  		lea	LevelNamesAsc(pc),a2
00881D7A                            		
00881D7A 7A00                       		moveq	#0,d5
00881D7C 1A2C 0000                    		move.b	chn_note(a4),d5
00881D80 4A05                         		tst.b	d5
00881D82 6B00                         		bmi.s	@next_x
00881D84 0245 007F                    		and.w	#$7F,d5
00881D88 E54D                         		lsl.w	#2,d5
00881D8A 45FA 0000                  		lea	LevelNamesAsc+4(pc),a2
00881D8E D4C5                          		adda	d5,a2
00881D90                            @next_x:
00881D90 303C 4000                   		move.w	#$4000,d0
00881D94 0C2C 0000 0000              		cmp.b	#FM_6,chn_id(a4)
00881D9A 6700                        		beq.s	@same
00881D9C 0C2C 0000 0000              		cmp.b	#NOISE,chn_id(a4)
00881DA2 6700                        		beq.s	@same
00881DA4 303C 6000                   		move.w	#$6000,d0
00881DA8                            @same:
00881DA8 7400                       		moveq	#0,d2
00881DAA 141A                       		move.b	(a2)+,d2
00881DAC 6700                       		beq.s	@jump
00881DAE 0642 0560                  		add.w	#$560,d2
00881DB2 D440                       		add.w	d0,d2
00881DB4 33C2 00C0 0000             		move.w	d2,($C00000).l
00881DBA 60D4                       		bra.s	@next_x
00881DBC                            @jump:
00881DBC 142C 0000                  		move.b	Chn_Inst(a4),d2
00881DC0 6100 0000                  		bsr	@MiniVal
00881DC4 142C 0000                  		move.b	Chn_Vol(a4),d2
00881DC8 6100 0000                  		bsr	@MiniVal
00881DCC 142C 0000                  		move.b	Chn_Panning(a4),d2
00881DD0 6100 0000                  		bsr	@MiniVal		
00881DD4                            		
00881DD4 0645 0001                  		add.w	#1,d5
00881DD8 0644 0080                  		add.w	#($80*1),d4
00881DDC D8FC 0000                  		adda	#sizeof_chn,a4
00881DE0 51CB FF88                   		dbf	d3,@next_y
00881DE4 4E75                       		rts
00881DE6                            
00881DE6                            @MiniVal:
00881DE6 0242 00FF                  		and.w	#$FF,d2
00881DEA 33FC 0000 00C0 0000        		move.w	#0,($C00000).l
00881DF2 3202                       		move.w	d2,d1
00881DF4 E849                       		lsr.w	#4,d1
00881DF6 0241 000F                  		and.w	#$F,d1
00881DFA 0C41 000A                  		cmp.w	#$A,d1
00881DFE 6D00                       		blt.s	@lowAl
00881E00 0641 0007                  		add.w	#7,d1
00881E04                            @lowAl:
00881E04 0641 0590                  		add.w	#$560+"0",d1
00881E08 D240                       		add.w	d0,d1
00881E0A 33C1 00C0 0000             		move.w	d1,($C00000).l
00881E10                            
00881E10 3202                       		move.w	d2,d1
00881E12 0241 000F                  		and.w	#$F,d1
00881E16 0C41 000A                  		cmp.w	#$A,d1
00881E1A 6D00                       		blt.s	@lowAr
00881E1C 0641 0007                  		add.w	#7,d1
00881E20                            @lowAr:
00881E20 0641 0590                  		add.w	#$560+"0",d1
00881E24 D240                       		add.w	d0,d1
00881E26 33C1 00C0 0000             		move.w	d1,($C00000).l
00881E2C 4E75                       		rts
00881E2E                            		
00881E2E                            ; ---------------------------
00881E2E                            ; Load level
00881E2E                            ; ---------------------------
00881E2E                            
00881E2E                            Title_LoadLevel:
00881E2E 33E9 0010 FFFF 6800        		move.w	PickLevel(a1),(RAM_SharedBuffer)
00881E36                            		
00881E36 6100 EADA                  		bsr	Mars_Wait_Master
00881E3A 33FC 0000 00A1 5124              		move.w	#0,(marsreg+comm4)
00881E42 7010                          		moveq	#$10,d0
00881E44 6100 EABC                    		bsr	Mars_Task_Master
00881E48 6100 EAC8                    		bsr	Mars_Wait_Master
00881E4C                            		
00881E4C 6100 F49A                  		bsr	Mode_FadeOut
00881E50 13FC 0001 FFFF D891         		move.b	#1,(RAM_GameMode)
00881E58 4E75                       		rts
00881E5A                            	
00881E5A                            ; ---------------------------
00881E5A                            ; SEGA CD: transfer stamp
00881E5A                            ; data
00881E5A                            ; ---------------------------
00881E5A                            
00881E5A                            ShowStamps:
00881E5A 4E75                       		rts
00881E5C                            	
00881E5C                            ; -------------------
00881E5C                            
00881E5C                            Stamps_AutoMap:
00881E5C 741F                       		moveq	#$1F,d2
00881E5E                            @NextLine:
00881E5E 2800                       		move.l	d0,d4
00881E60 3A01                       		move.w	d1,d5
00881E62 363C 001B                  		move.w	#((256*224)>>$B)-1,d3
00881E66                            @Next:
00881E66 23C4 00C0 0004             		move.l	d4,($C00004).l
00881E6C 33C5 00C0 0000             		move.w	d5,($C00000).l
00881E72 0684 0080 0000             		add.l	#$800000,d4
00881E78 0645 0001                  		add.w	#$0001,d5
00881E7C 51CB FFE8                  		dbf	d3,@Next
00881E80                            		
00881E80 0641 001C                  		add.w	#((256*224)>>$B),d1
00881E84 0680 0002 0000             		add.l	#$20000,d0
00881E8A 51CA FFD2                  		dbf	d2,@NextLine
00881E8E 4E75                       		rts
00881E90                            		
00881E90                            ; ------------------------------------------------
00881E90                            ; Render MARS Stuff
00881E90                            ; ------------------------------------------------
00881E90                            
00881E90                            MARS_ModelRender:
00881E90                            
00881E90                            ; -----------------------------------
00881E90                            
00881E90                            		
00881E90 6100 EA8A                   		bsr	Mars_Wait_Master_Flag
00881E94 6600                        		bne.s	Mars_RenderReturn
00881E96                             		
00881E96                            MARS_ModelInit:
00881E96 33FC 0000 00A1 5124          		move.w	#0,(marsreg+comm4)
00881E9E 33E9 001A 00A1 5126          		move.w	StampXD(a1),(marsreg+comm6)
00881EA6 33E9 001C 00A1 5128          		move.w	StampYD(a1),(marsreg+comm8)
00881EAE 33FC 0000 00A1 512A          		move.w	#0,(marsreg+comm10)
00881EB6 7023                         		moveq	#$23,d0
00881EB8 6100 EA48                    		bsr	Mars_Task_Master
00881EBC 6100 EA54                    		bsr	Mars_Wait_Master
00881EC0                             		
00881EC0 33FC 0000 00A1 5124              		move.w	#0,(marsreg+comm4)
00881EC8 33E9 0016 00A1 5126              		move.w	StampX(a1),(marsreg+comm6)		;d1	X
00881ED0 33E9 0018 00A1 5128              		move.w	StampY(a1),(marsreg+comm8)		;	Y
00881ED8 33E9 001E 00A1 512A                	move.w	ModelZ(a1),(marsreg+comm10) 		;d0	Z
00881EE0 7022                             		moveq	#$22,d0
00881EE2 6100 EA1E                        		bsr	Mars_Task_Master
00881EE6 6100 EA2A                        		bsr	Mars_Wait_Master			
00881EEA                             		
00881EEA                            Mars_RenderReturn:
00881EEA                            
00881EEA                            ; -----------------------------------
00881EEA                                  		
00881EEA 4E75                       		rts
00881EEC                            		
00881EEC                            ; =================================================================
00881EEC                            ; ------------------------------------------------
00881EEC                            ; Data
00881EEC                            ; ------------------------------------------------
00881EEC                            		
00881EEC                            LevelNamesAsc:
00881EEC 3D3D 3D00                  		dc.b "===",0
00881EF0                            		
00881EF0 3D3D 3D00                  		dc.b "===",0
00881EF4 4323 3000                  		dc.b "C#0",0
00881EF8 442D 3000                  		dc.b "D-0",0
00881EFC 4423 3000                  		dc.b "D#0",0
00881F00 452D 3000                  		dc.b "E-0",0
00881F04 462D 3000                  		dc.b "F-0",0
00881F08 4623 3000                  		dc.b "F#0",0
00881F0C 472D 3000                  		dc.b "G-0",0
00881F10 4723 3000                  		dc.b "G#0",0
00881F14 412D 3000                  		dc.b "A-0",0
00881F18 4123 3000                  		dc.b "A#0",0		
00881F1C 422D 3000                  		dc.b "B-0",0
00881F20                            		
00881F20 432D 3100                  		dc.b "C-1",0
00881F24 4323 3100                  		dc.b "C#1",0
00881F28 442D 3100                  		dc.b "D-1",0
00881F2C 4423 3100                  		dc.b "D#1",0
00881F30 452D 3100                  		dc.b "E-1",0
00881F34 462D 3100                  		dc.b "F-1",0
00881F38 4623 3100                  		dc.b "F#1",0
00881F3C 472D 3100                  		dc.b "G-1",0
00881F40 4723 3100                  		dc.b "G#1",0
00881F44 412D 3100                  		dc.b "A-1",0
00881F48 4123 3100                  		dc.b "A#1",0		
00881F4C 422D 3100                  		dc.b "B-1",0
00881F50                            		
00881F50 432D 3200                  		dc.b "C-2",0
00881F54 4323 3200                  		dc.b "C#2",0
00881F58 442D 3200                  		dc.b "D-2",0
00881F5C 4423 3200                  		dc.b "D#2",0
00881F60 452D 3200                  		dc.b "E-2",0
00881F64 462D 3200                  		dc.b "F-2",0
00881F68 4623 3200                  		dc.b "F#2",0
00881F6C 472D 3200                  		dc.b "G-2",0
00881F70 4723 3200                  		dc.b "G#2",0
00881F74 412D 3200                  		dc.b "A-2",0
00881F78 4123 3200                  		dc.b "A#2",0		
00881F7C 422D 3200                  		dc.b "B-2",0
00881F80                            		
00881F80 432D 3300                  		dc.b "C-3",0
00881F84 4323 3300                  		dc.b "C#3",0
00881F88 442D 3300                  		dc.b "D-3",0
00881F8C 4423 3300                  		dc.b "D#3",0
00881F90 452D 3300                  		dc.b "E-3",0
00881F94 462D 3300                  		dc.b "F-3",0
00881F98 4623 3300                  		dc.b "F#3",0
00881F9C 472D 3300                  		dc.b "G-3",0
00881FA0 4723 3300                  		dc.b "G#3",0
00881FA4 412D 3300                  		dc.b "A-3",0
00881FA8 4123 3300                  		dc.b "A#3",0		
00881FAC 422D 3300                  		dc.b "B-3",0
00881FB0                            		
00881FB0 432D 3400                  		dc.b "C-4",0
00881FB4 4323 3400                  		dc.b "C#4",0
00881FB8 442D 3400                  		dc.b "D-4",0
00881FBC 4423 3400                  		dc.b "D#4",0
00881FC0 452D 3400                  		dc.b "E-4",0
00881FC4 462D 3400                  		dc.b "F-4",0
00881FC8 4623 3400                  		dc.b "F#4",0
00881FCC 472D 3400                  		dc.b "G-4",0
00881FD0 4723 3400                  		dc.b "G#4",0
00881FD4 412D 3400                  		dc.b "A-4",0
00881FD8 4123 3400                  		dc.b "A#4",0		
00881FDC 422D 3400                  		dc.b "B-4",0
00881FE0                            		
00881FE0 432D 3500                  		dc.b "C-5",0
00881FE4 4323 3500                  		dc.b "C#5",0
00881FE8 442D 3500                  		dc.b "D-5",0
00881FEC 4423 3500                  		dc.b "D#5",0
00881FF0 452D 3500                  		dc.b "E-5",0
00881FF4 462D 3500                  		dc.b "F-5",0
00881FF8 4623 3500                  		dc.b "F#5",0
00881FFC 472D 3500                  		dc.b "G-5",0
00882000 4723 3500                  		dc.b "G#5",0
00882004 412D 3500                  		dc.b "A-5",0
00882008 4123 3500                  		dc.b "A#5",0		
0088200C 422D 3500                  		dc.b "B-5",0
00882010                            
00882010 432D 3600                  		dc.b "C-6",0
00882014 4323 3600                  		dc.b "C#6",0
00882018 442D 3600                  		dc.b "D-6",0
0088201C 4423 3600                  		dc.b "D#6",0
00882020 452D 3600                  		dc.b "E-6",0
00882024 462D 3600                  		dc.b "F-6",0
00882028 4623 3600                  		dc.b "F#6",0
0088202C 472D 3600                  		dc.b "G-6",0
00882030 4723 3600                  		dc.b "G#6",0
00882034 412D 3600                  		dc.b "A-6",0
00882038 4123 3600                  		dc.b "A#6",0		
0088203C 422D 3600                  		dc.b "B-6",0
00882040                            
00882040 432D 3700                  		dc.b "C-7",0
00882044 4323 3700                  		dc.b "C#7",0
00882048 442D 3700                  		dc.b "D-7",0
0088204C 4423 3700                  		dc.b "D#7",0
00882050 452D 3700                  		dc.b "E-7",0
00882054 462D 3700                  		dc.b "F-7",0
00882058 4623 3700                  		dc.b "F#7",0
0088205C 472D 3700                  		dc.b "G-7",0
00882060 4723 3700                  		dc.b "G#7",0
00882064 412D 3700                  		dc.b "A-7",0
00882068 4123 3700                  		dc.b "A#7",0		
0088206C 422D 3700                  		dc.b "B-7",0
00882070                            
00882070 432D 3800                  		dc.b "C-8",0
00882074 4323 3800                  		dc.b "C#8",0
00882078 442D 3800                  		dc.b "D-8",0
0088207C 4423 3800                  		dc.b "D#8",0
00882080 452D 3800                  		dc.b "E-8",0
00882084 462D 3800                  		dc.b "F-8",0
00882088 4623 3800                  		dc.b "F#8",0
0088208C 472D 3800                  		dc.b "G-8",0
00882090 4723 3800                  		dc.b "G#8",0
00882094 412D 3800                  		dc.b "A-8",0
00882098 4123 3800                  		dc.b "A#8",0		
0088209C 422D 3800                  		dc.b "B-8",0
008820A0                            		
008820A0                            		even
008820A0                            		
008820A0                            		
008820A0                            		
008820A0                            ; ---------------------------------------------
008820A0                            ; Code | Sound
008820A0                            ; ---------------------------------------------
008820A0                            
008820A0                            		include	"engine/sound/code.asm"
008820A0                            ; ================================================================
008820A0                            ; SMEG
008820A0                            ; Sound and Music Engine for Genesis (also SegaCD* and 32X**)
008820A0                            ;
008820A0                            ; (C)2013-2016 GF64
008820A0                            ; 
008820A0                            ; Reads patterns from a ImpulseTracker file (.it)
008820A0                            ;
008820A0                            ; Ticks:
008820A0                            ; 150 - NTSC
008820A0                            ; 120 - PAL
008820A0                            ;
008820A0                            ; uses assembler settings:
008820A0                            ; SegaCD     - for building to SegaCD (All the driver must be aligned
008820A0                            ;              to WordRAM or PRG-RAM)
008820A0                            ; MARS       - for building to 32x (CODE and
008820A0                            ;              DATA(Music/Sfx/Voices/Z80 samples) must be aligned to
008820A0                            ;              the 32x standards, uses bank 0 only,
008820A0                            ;              PWM Samples can be anywhere in ROM)
008820A0                            ; SMEG_Z80   - Use Z80, set to 0 while running from PRGRAM
008820A0                            ;                 
008820A0                            ; Limtations:
008820A0                            ; (Driver) - Effects: only volume and panning (Xxx) works
008820A0                            ; 
008820A0                            ; (SegaCD) - You cant use Z80 samples if your program is running
008820A0                            ;            on PRG-RAM (Z80 cant access RAM), if your program is
008820A0                            ;            running on WORD-RAM, set the permission to
008820A0                            ;            MainCPU (2M Mode) (not recommended)
008820A0                            ;            
008820A0                            ; * requires respective SubCPU code
008820A0                            ; ** requires respective SH2 code
008820A0                            ; ================================================================
008820A0                            
008820A0                            			rsreset
008820A0 =00000000                  DrvStatus		rs.b 1		;Byte
008820A0 =00000001                  DrvSettings		rs.b 1		;Byte
008820A0 =00000002                  PatternEnd		rs.b 1		;Byte
008820A0 =00000003                  PatternLoop		rs.b 1		;Byte
008820A0 =00000004                  AddrBackup		rs.l 1		;Long
008820A0 =00000008                  SongRequest		rs.l 1 		;Long
008820A0 =0000000C                  SongStart		rs.l 1		;Long
008820A0 =00000010                  SongRead		rs.l 1		;Long
008820A0 =00000014                  SongVoices		rs.l 1		;Long
008820A0 =00000018                  SongSampl		rs.l 1		;Long
008820A0 =0000001C                  SongPcmSamp		rs.l 1		;Long
008820A0 =00000020                  TicksRequest		rs.w 1		;Word
008820A0 =00000022                  TicksRead		rs.w 1		;Word
008820A0 =00000024                  TicksSet		rs.w 1		;Word
008820A0 =00000026                  TempoRead 		rs.w 1		;Word
008820A0 =00000028                  PattSize		rs.w 1		;Word
008820A0 =0000002A                  PattRead		rs.w 1		;Word
008820A0 =0000002C                  CdOnlyFlags		rs.w 1		;Word
008820A0 =0000002E                  CurrPattern		rs.b 1		;Byte
008820A0 =0000002F                  PcmChnOnOff		rs.b 1		;Byte
008820A0 =00000030                  PsgLast			rs.b 1		;Byte
008820A0 =00000031                  DrvSettingsBGM		rs.b 1		;Byte
008820A0 =00000032                  LastPattChn		rs.b 1		;Byte
008820A0 =00000033                  Psg_Vibrato		rs.b 1		;Byte
008820A0 =00000034                  Psg_AutoVol		rs.b 1		;Byte
008820A0 =00000036                  sizeof_SndBuff		rs.l 0
008820A0                            
008820A0                            ; --------------------------------------------
008820A0                            ; Channel settings
008820A0                            ; --------------------------------------------
008820A0                            
008820A0                            			rsreset
008820A0 =00000000                  Chn_Freq		rs.w 1		;Word
008820A0 =00000002                  Chn_Effect		rs.w 1		;Word
008820A0 =00000004                  Chn_Portam		rs.w 1		;Word
008820A0 =00000006                  Chn_Type		rs.b 1		;Byte
008820A0 =00000007                  Chn_ID			rs.b 1		;Byte
008820A0 =00000008                  Chn_Inst		rs.b 1		;Byte
008820A0 =00000009                  Chn_Vol			rs.b 1		;Byte
008820A0 =0000000A                  Chn_DefVol		rs.b 1		;Byte
008820A0 =0000000B                  Chn_Note		rs.b 1		;Byte
008820A0 =0000000C                  Chn_Panning		rs.b 1		;Byte
008820A0 =0000000D                  Chn_FM_Key		rs.b 1		;Byte
008820A0 =0000000E                  Chn_PCM_Pitch		rs.b 1		;Byte
008820A0 =0000000F                  Chn_PSG_Vibrato		rs.b 1		;Byte
008820A0 =00000010                  sizeof_Chn		rs.l 0
008820A0                             
008820A0                            ; --------------------------------------------
008820A0                            ; Bits
008820A0                            ; --------------------------------------------
008820A0                            
008820A0 =00000000                  bitPriority		equ	0
008820A0 =00000001                  bitSfxOn		equ	1
008820A0 =00000002                  bitDisabled		equ	2
008820A0                            
008820A0                            ;Status
008820A0 =00000000                  bitDacOn		equ	0
008820A0 =00000001                  bitDacNote		equ	1
008820A0 =00000002                  bitTone3		equ	2
008820A0 =00000003                  bitSpecial3		equ	3
008820A0                            
008820A0                            ; --------------------------------------------
008820A0                            ; Channel IDs
008820A0                            ; --------------------------------------------
008820A0                            
008820A0 =00000000                  FM_1			equ	$00
008820A0 =00000001                  FM_2			equ	$01
008820A0 =00000002                  FM_3			equ	$02
008820A0 =00000004                  FM_4			equ	$04
008820A0 =00000005                  FM_5			equ	$05
008820A0 =00000006                  FM_6			equ	$06
008820A0 =00000080                  PSG_1			equ	$80
008820A0 =000000A0                  PSG_2			equ	$A0
008820A0 =000000C0                  PSG_3			equ	$C0
008820A0 =000000E0                  NOISE			equ	$E0
008820A0 =00000010                  PCM_1			equ	$10
008820A0 =00000011                  PCM_2			equ	$11
008820A0 =00000012                  PCM_3			equ	$12
008820A0 =00000013                  PCM_4			equ	$13
008820A0 =00000014                  PCM_5			equ	$14
008820A0 =00000015                  PCM_6			equ	$15
008820A0 =00000016                  PCM_7			equ	$16
008820A0 =00000017                  PCM_8			equ	$17
008820A0 =00000012                  MaxChannels		equ	18
008820A0                            
008820A0                            ; --------------------------------------------
008820A0                            ; .IT request ($80+) format
008820A0                            ; --------------------------------------------
008820A0                            
008820A0 =00000000                  bitNote			equ	0
008820A0 =00000001                  bitInst			equ	1
008820A0 =00000002                  bitVolume		equ	2
008820A0 =00000003                  bitEffect		equ	3
008820A0 =00000004                  bitSameNote		equ	4
008820A0 =00000005                  bitSameInst		equ	5
008820A0 =00000006                  bitSameVol		equ	6
008820A0 =00000007                  bitSameEffect		equ	7
008820A0                            
008820A0                            ; --------------------------------------------
008820A0                            ; RAM
008820A0                            ; 
008820A0                            ; MAX: $400
008820A0                            ; --------------------------------------------
008820A0                            
008820A0                            			rsset RAM_SndDriver
008820A0 =FFFFD8E2                  RAM_SMEG_Buffer		rs.b sizeof_SndBuff
008820A0 =FFFFD918                  RAM_SMEG_SfxBuff	rs.b sizeof_SndBuff
008820A0 =FFFFD94E                  RAM_SMEG_PrioList	rs.b MaxChannels
008820A0 =FFFFD960                  RAM_SMEG_Chnls_BGM	rs.b $10*MaxChannels
008820A0 =FFFFDA80                  RAM_SMEG_Chnls_SFX	rs.b $10*MaxChannels
008820A0                            			
008820A0 =FFFFDBA0                  sizeof_SMEG		rs.l 0
008820A0                            ;     			inform 0,"SMEG Used: %h",sizeof_SMEG-RAM_SndDriver
008820A0                            			
008820A0                            ; ================================================================
008820A0                            ; -------------------------------------------
008820A0                            ; Macros
008820A0                            ; -------------------------------------------
008820A0                            
008820A0                            Z80_OFF		macro
008820A0                            		move.w	#$100,($A11100).l
008820A0                            @WaitZ80\@:
008820A0                            		btst	#0,($A11100).l
008820A0                            		bne.s	@WaitZ80\@
008820A0                            		endm
008820A0                            
008820A0                            ; -----------------------------------------
008820A0                            
008820A0                            Z80_ON		macro
008820A0                            		move.b	#$2A,($A04000).l
008820A0                            		move.w	#0,($A11100).l
008820A0                            		endm
008820A0                            
008820A0                            ; -----------------------------------------
008820A0                            
008820A0                            PCM_Entry	macro	cd_side,mars_side,loop,pitch
008820A0                            		
008820A0                            cdsize_size	= strlen(\cd_side)
008820A0                            
008820A0                            		if SegaCD
008820A0                            		  if cdsize_size>$C
008820A0                            		    inform 2,"(SMEG) CD FILENAME TOO LONG"
008820A0                            		  elseif cdsize_size=$C
008820A0                            		    dc.b \cd_side
008820A0                            		  elseif cdsize_size<$C
008820A0                            		    dc.b \cd_side
008820A0                            		    rept $C-cdsize_size
008820A0                            		      dc.b 0
008820A0                            		    endr
008820A0                            		  elseif cdsize_size<=0
008820A0                            		    inform 2,"(SMEG) YOU FORGOT THE CD FILENAME"
008820A0                            		  endif
008820A0                            		  
008820A0                            		elseif MARS
008820A0                            		  dc.l mars_side
008820A0                            		endif
008820A0                            		
008820A0                            		dc.w loop
008820A0                            		dc.w pitch
008820A0                            		endm
008820A0                            
008820A0                            ; 		inform 0,"%h",RAM_SMEG_PcmList
008820A0                            
008820A0                            ; ================================================================
008820A0                            ; -------------------------------------------
008820A0                            ; External Calls
008820A0                            ; -------------------------------------------
008820A0                            
008820A0                            ;SegaPCM
008820A0 =00000020                  CdTask_LoadPcm		equ	$20
008820A0 =00000021                  CdTask_SetAddr		equ	$21
008820A0 =00000022                  CdTask_SetFreq		equ	$22
008820A0 =00000023                  CdTask_SetPan		equ	$23
008820A0 =00000024                  CdTask_SetEnv		equ	$24
008820A0 =00000025                  CdTask_SetOnOff		equ	$25
008820A0 =00000026                  CdTask_ClearAllPcm	equ	$26
008820A0                            
008820A0                            ;MARS
008820A0 =00000001                  marscall_Play		equ	1
008820A0 =00000002                  marscall_Stop		equ	2
008820A0 =00000003                  marscall_SetSmpl	equ	3
008820A0 =00000004                  marscall_SetVol		equ	4
008820A0 =00000005                  marscall_SetEntry	equ	5
008820A0                            	
008820A0                            ; ================================================================
008820A0                            ; -------------------------------------------
008820A0                            ; Init
008820A0                            ; -------------------------------------------
008820A0                            
008820A0                            SMEG_Init:
008820A0 41F9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a0
008820A6 303C 02FF                  		move.w	#$2FF,d0
008820AA                            @ClrAll:
008820AA 4298                       		clr.l	(a0)+
008820AC 51C8 FFFC                  		dbf	d0,@ClrAll
008820B0                            
008820B0                            ; -------------------------------------------
008820B0                            ; Z80
008820B0                            ; -------------------------------------------
008820B0                            
008820B0                            SMEG_Z80_Init:
008820B0 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
008820B8 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
008820C0                            @WaitZ80:
008820C0 0839 0000 00A1 1100        		btst	#0,($A11100).l
008820C8 66F6                       		bne.s	@WaitZ80
008820CA                            
008820CA 41F9 00A0 0000             		lea	($A00000).l,a0
008820D0 303C 1FFF                  		move.w	#$1FFF,d0
008820D4                            @cleanup:
008820D4 4218                       		clr.b	(a0)+
008820D6 51C8 FFFC                  		dbf	d0,@cleanup
008820DA                            		
008820DA 41FA 0000                  		lea	Z80_Driver(pc),a0
008820DE 43F9 00A0 0000             		lea	($A00000).l,a1
008820E4 323C 0000                  		move.w	#Z80_DriverEnd-Z80_Driver,d1
008820E8                            @ToZ80:
008820E8 12D8                       		move.b	(a0)+,(a1)+
008820EA 51C9 FFFC                  		dbf	d1,@ToZ80
008820EE                            
008820EE                            ; -----------------------------------
008820EE                            
008820EE 33FC 0000 00A1 1200        		move.w	#0,($A11200).l
008820F6 4E71                       		nop
008820F8 4E71                       		nop
008820FA 4E71                       		nop
008820FC 4E71                       		nop
008820FE 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
00882106 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
0088210E                            ; 		rts
0088210E                            		
0088210E                            ; -------------------------------------------
0088210E                            ; Stop ALL Sound
0088210E                            ; -------------------------------------------
0088210E                            
0088210E                            SMEG_StopSnd:
0088210E 103C 002B                  		move.b	#$2B,d0
00882112 123C 0000                  		move.b	#$00,d1
00882116 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882128 13FC 0000 00A0 01ED        		move.b	#0,($A001E0+$D)
00882130 6100 0000                  		bsr	FM_RegWrite_1
00882134 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882144                            		
00882144 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
0088214A 08D6 0002                  		bset	#bitDisabled,(a6)
0088214E                            	
0088214E 6100 0000                  		bsr	SMEG_FM_Reset
00882152 6100 0000                   		bsr	SMEG_PSG_Reset
00882156 6000 0000                  		bra	SMEG_PCM_Reset
0088215A                            		
0088215A                            ; -------------------------------------------
0088215A                            ; Play Song
0088215A                            ; -------------------------------------------
0088215A                            
0088215A                            SMEG_PlaySong:
0088215A 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
00882160 0896 0002                  		bclr	#bitDisabled,(a6)
00882164 4E75                       		rts
00882166                            		
00882166                            ; -------------------------------------------
00882166                            ; Load SFX
00882166                            ;
00882166                            ; d0 - StartOfSong
00882166                            ; d1 - Ticks
00882166                            ; -------------------------------------------
00882166                            
00882166                            SMEG_LoadSfx:
00882166 23C0 FFFF D920             		move.l	d0,(RAM_SMEG_SfxBuff+SongRequest)
0088216C 33C1 FFFF D938             		move.w	d1,(RAM_SMEG_SfxBuff+TicksRequest)
00882172 4E75                       		rts
00882174                            
00882174                            ; -------------------------------------------
00882174                            ; Load Song
00882174                            ;
00882174                            ; d0 - StartOfSong
00882174                            ; d1 - Ticks
00882174                            ; -------------------------------------------
00882174                            
00882174                            SMEG_LoadSong:
00882174 23C0 FFFF D8EA             		move.l	d0,(RAM_SMEG_Buffer+SongRequest)
0088217A 33C1 FFFF D902             		move.w	d1,(RAM_SMEG_Buffer+TicksRequest)
00882180 4E75                       		rts
00882182                            		
00882182                            ; ================================================================
00882182                            ; -------------------------------------------
00882182                            ; Run
00882182                            ; -------------------------------------------
00882182                            
00882182                            SMEG_Upd:
00882182 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
00882188 6100 0000                  		bsr	@RequestSong
0088218C 08D6 0000                  		bset	#bitPriority,(a6)
00882190 6100 0000                                  bsr	@ReadRow
00882194                                            
00882194 4DF9 FFFF D918              		lea	(RAM_SMEG_SfxBuff),a6
0088219A 6100 0000                   		bsr	@RequestSfx
0088219E 0816 0001                                  btst	#bitSfxOn,(a6)				;Want to play SFX?
008821A2 6700                                       beq.s	@Wait
008821A4 0896 0000                  		bclr	#bitPriority,(a6)
008821A8 6100 0000                  		bsr	@ReadRow
008821AC                            @Wait:
008821AC 4E75                       		rts
008821AE                            
008821AE                            ; -------------------------------------------
008821AE                            ; Request song
008821AE                            ; -------------------------------------------
008821AE                            	
008821AE                            @RequestSong:
008821AE 4AAE 0008                  		tst.l	SongRequest(a6)
008821B2 6700                       		beq.s	@Same
008821B4 08D6 0002                  		bset	#bitDisabled,(a6)
008821B8 6100 FF54                   		bsr	SMEG_StopSnd			;d0-d1 are gone
008821BC 4AAE 0008                   		tst.l	SongRequest(a6)
008821C0 6B00                        		bmi.s	@Same
008821C2                             		
008821C2 422E 002E                  		clr.b	CurrPattern(a6)
008821C6 422E 0002                  		clr.b	PatternEnd(a6)
008821CA 426E 0028                  		clr.w	PattSize(a6)
008821CE 426E 002A                  		clr.w	PattRead(a6)
008821D2 4BF9 FFFF D960             		lea	(RAM_SMEG_Chnls_BGM),a5
008821D8 422E 002F                  		clr.b	PcmChnOnOff(a6)
008821DC 422E 0000                                  clr.b	DrvStatus(a6)
008821E0 6100 0000                  		bsr	SMEG_Load_SetChnls
008821E4 6100 0000                  		bsr	SMEG_Load_FixBgm
008821E8 6100 0000                   		bsr	SMEG_Load_SetExtChnls
008821EC 0896 0002                  		bclr	#bitDisabled,(a6)
008821F0                            
008821F0 426E 0020                  		clr.w	TicksRequest(a6)
008821F4 42AE 0008                  		clr.l	SongRequest(a6)
008821F8                            @Same:
008821F8 4E75                       		rts
008821FA                            		
008821FA                            ; -------------------------------------------
008821FA                            ; Request sfx
008821FA                            ; -------------------------------------------
008821FA                            
008821FA                            @RequestSfx:
008821FA 4AAE 0008                  		tst.l	SongRequest(a6)
008821FE 67F8                       		beq.s	@Same
00882200 6BF6                       		bmi.s	@Same
00882202                            		
00882202 08D6 0002                  		bset	#bitDisabled,(a6)
00882206 422E 002E                  		clr.b	CurrPattern(a6)
0088220A 422E 0002                  		clr.b	PatternEnd(a6)
0088220E 426E 0028                  		clr.w	PattSize(a6)
00882212 426E 002A                  		clr.w	PattRead(a6)
00882216                            		
00882216 422E 002F                  		clr.b	PcmChnOnOff(a6)
0088221A 422E 0000                                  clr.b	DrvStatus(a6)
0088221E 08D6 0001                                  bset	#bitSfxOn,(a6)
00882222 4BF9 FFFF DA80             		lea	(RAM_SMEG_Chnls_SFX),a5
00882228 6100 0000                  		bsr	SMEG_Load_SetChnls
0088222C 0896 0002                  		bclr	#bitDisabled,(a6)
00882230                            		
00882230 426E 0020                  		clr.w	TicksRequest(a6)
00882234 42AE 0008                  		clr.l	SongRequest(a6)
00882238 4E75                       		rts
0088223A                            		
0088223A                            ; -------------------------------------------
0088223A                            ; Read row
0088223A                            ; -------------------------------------------
0088223A                            
0088223A                            @ReadRow:
0088223A 0816 0002                  		btst	#bitDisabled,(a6)
0088223E 6600 FF6C                  		bne	@Wait
00882242                            
00882242 046E 0001 0022             		sub.w	#1,TicksRead(a6)
00882248 6A00 FF62                  		bpl	@Wait
0088224C 3D6E 0024 0022              		move.w	TicksSet(a6),TicksRead(a6)
00882252                            
00882252                            @NewRow:
00882252 286E 0010                                  movea.l	SongRead(a6),a4
00882256                            
00882256                            ; --------------------------------
00882256                            ; New pattern
00882256                            ; --------------------------------
00882256                            
00882256                            @Next:
00882256 7A00                       		moveq	#0,d5
00882258 7C00                       		moveq	#0,d6
0088225A 3C2E 0028                   		move.w	PattSize(a6),d6
0088225E 0446 0001                    		sub.w	#1,d6
00882262 3A2E 002A                    		move.w	PattRead(a6),d5
00882266 BC85                        		cmp.l	d5,d6
00882268 6400                        		bcc.s	@NoNextRow
0088226A                             		
0088226A 426E 002A                  		clr.w	PattRead(a6)
0088226E 7A00                       		moveq	#0,d5
00882270 7C00                       		moveq	#0,d6
00882272 1C2E 0002                  		move.b	PatternEnd(a6),d6
00882276 1A2E 002E                  		move.b	CurrPattern(a6),d5
0088227A BC45                       		cmp.w	d5,d6
0088227C 6E00                       		bgt.s	@NotEnd
0088227E                            		
0088227E 286E 000C                  		movea.l	SongStart(a6),a4
00882282 1D5C 0029                  		move.b	(a4)+,PattSize+1(a6)
00882286 1D5C 0028                   		move.b	(a4)+,PattSize(a6)
0088228A D8FC 0006                   		adda	#6,a4
0088228E 2D4C 0010                  		move.l	a4,SongRead(a6)
00882292 1D6E 0003 002E             		move.b	PatternLoop(a6),CurrPattern(a6)
00882298 426E 0022                  		clr.w	TicksRead(a6)
0088229C 4E75                       		rts
0088229E                            
0088229E                            ; --------------------------------
0088229E                            
0088229E                            @NotEnd:
0088229E 062E 0001 002E             		add.b	#1,CurrPattern(a6)
008822A4 7000                       		moveq	#0,d0
008822A6 102E 002E                  		move.b	CurrPattern(a6),d0
008822AA B02E 0003                  		cmp.b	PatternLoop(a6),d0
008822AE 6600                       		bne.s	@DontSaveLoop
008822B0 2D4C 000C                  		move.l	a4,SongStart(a6)
008822B4                            @DontSaveLoop:
008822B4 7200                       		moveq	#0,d1
008822B6 121C                       		move.b	(a4)+,d1
008822B8 141C                       		move.b	(a4)+,d2
008822BA E14A                       		lsl.w	#8,d2
008822BC 8242                       		or	d2,d1
008822BE 3D41 0028                  		move.w	d1,PattSize(a6)
008822C2 D8FC 0006                  		adda	#6,a4
008822C6                            		
008822C6                            ; --------------------------------
008822C6                            ; Current pattern
008822C6                            ; --------------------------------
008822C6                            
008822C6                            @NoNextRow:
008822C6 7C00                       		moveq	#0,d6
008822C8 7000                       		moveq	#0,d0
008822CA 101C                       		move.b	(a4)+,d0
008822CC                            
008822CC 4A40                       		tst.w	d0
008822CE 6600                       		bne.s	@ValidNote
008822D0                            
008822D0 066E 0001 002A             		add.w	#1,PattRead(a6)
008822D6 2D4C 0010                  		move.l	a4,SongRead(a6)
008822DA 4E75                       		rts
008822DC                            
008822DC                            @ValidNote:
008822DC 4A00                       		tst.b	d0
008822DE 6A00                       		bpl.s	@Not80
008822E0 066E 0001 002A             		add.w	#1,PattRead(a6)
008822E6 0880 0007                  		bclr	#7,d0
008822EA 1C1C                       		move.b	(a4)+,d6
008822EC                            @Not80:
008822EC 066E 0001 002A             		add.w	#1,PattRead(a6)
008822F2 0440 0001                  		sub.w	#1,d0
008822F6 1D40 0032                  		move.b	d0,LastPattChn(a6)
008822FA                            
008822FA 4BF9 FFFF D960             		lea 	(RAM_SMEG_Chnls_BGM),a5
00882300 0816 0000                  		btst 	#bitPriority,(a6)
00882304 6600                       		bne.s	@MusicPrio
00882306 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
0088230C 4BF9 FFFF DA80             		lea 	(RAM_SMEG_Chnls_SFX),a5
00882312 08F3 0000 0000              		bset	#0,(a3,d0.w)
00882318                            @MusicPrio:
00882318 C0FC 0010                  		mulu.w	#sizeof_Chn,d0
0088231C DAC0                       		adda	d0,a5
0088231E                            		
0088231E 4A46                       		tst.w	d6
00882320 6700                       		beq.s	@NotRest
00882322 422D 0006                  		clr.b	Chn_Type(a5)
00882326 1B46 0006                  		move.b	d6,Chn_Type(a5)
0088232A                            
0088232A                            @NotRest:
0088232A                            
0088232A                            ; -------------
0088232A                            ; Note
0088232A                            ; -------------
0088232A                            
0088232A 082D 0004 0006             		btst	#bitSameNote,Chn_Type(a5)
00882330 6600                       		bne.s	@PlayOnly
00882332 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
00882338 6700                       		beq.s	@NoNote
0088233A                            
0088233A 1B5C 000B                                  move.b	(a4)+,Chn_Note(a5)
0088233E 066E 0001 002A             		add.w	#1,PattRead(a6)
00882344                            
00882344                            @PlayOnly:
00882344 6100 0000                  		bsr	SMEG_ChannelRest
00882348                            @NoNote:
00882348                            
00882348                            ; -------------
00882348                            ; Instrument
00882348                            ; -------------
00882348                            
00882348 082D 0005 0006              		btst	#bitSameInst,Chn_Type(a5)
0088234E 6600                       		bne.s	@SameInst
00882350 082D 0001 0006             		btst	#bitInst,Chn_Type(a5)
00882356 6700                       		beq.s	@NoInst
00882358                            
00882358 1B5C 0008                  		move.b	(a4)+,Chn_Inst(a5)
0088235C 066E 0001 002A             		add.w	#1,PattRead(a6)
00882362                            
00882362                            @SameInst:
00882362 6100 0000                  		bsr	SMEG_SetVoice
00882366                            @NoInst:
00882366                            
00882366                            ; -------------
00882366                            ; Volume
00882366                            ; -------------
00882366                            
00882366 082D 0006 0006              		btst	#bitSameVol,Chn_Type(a5)
0088236C 6600                        		bne.s	@SameVol
0088236E 082D 0002 0006             		btst	#bitVolume,Chn_Type(a5)
00882374 6700                       		beq.s	@NoVolume
00882376                            
00882376 426D 0004                  		clr.w	Chn_Portam(a5)
0088237A 426D 0002                  		clr.w	Chn_Effect(a5)
0088237E 7000                                       moveq	#0,d0
00882380 101C                       		move.b	(a4)+,d0
00882382 066E 0001 002A             		add.w	#1,PattRead(a6)
00882388 0440 0040                  		sub.w	#64,d0
0088238C 4440                       		neg.w	d0
0088238E 1B40 0009                                  move.b	d0,Chn_Vol(a5)
00882392                            
00882392                            @SameVol:
00882392 6100 0000                  		bsr	@ChnVolume
00882396                            @NoVolume:
00882396                            
00882396                            ; -------------
00882396                            ; Effect
00882396                            ; -------------
00882396                            
00882396 082D 0007 0006              		btst	#bitSameEffect,Chn_Type(a5)
0088239C 6600                        		bne.s	@SameEffect
0088239E 082D 0003 0006             		btst	#bitEffect,Chn_Type(a5)
008823A4 6700                       		beq.s	@NoEffect
008823A6                            
008823A6 1B5C 0002                  		move.b	(a4)+,Chn_Effect(a5)
008823AA 066E 0001 002A             		add.w	#1,PattRead(a6)
008823B0 1B5C 0003                  		move.b	(a4)+,Chn_Effect+1(a5)
008823B4 066E 0001 002A             		add.w	#1,PattRead(a6)
008823BA                            @SameEffect:
008823BA 6100 0000                  		bsr	@ChannelEffects
008823BE                            @NoEffect:
008823BE                            
008823BE                            ; --------------
008823BE                            ; Play the note
008823BE                            ; --------------
008823BE                            
008823BE 082D 0004 0006              		btst	#bitSameNote,Chn_Type(a5)
008823C4 6600                        		bne.s	@SameNote
008823C6 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
008823CC 6700 FE88                  		beq	@Next
008823D0                            @SameNote:
008823D0 6100 0000                  		bsr	@ChannelPlay
008823D4 6000 FE80                  		bra	@Next
008823D8                            
008823D8                            ; ================================================================
008823D8                            ; -------------------------------
008823D8                            ; Set Freq
008823D8                            ; -------------------------------
008823D8                            
008823D8                            @NoteFreq:
008823D8 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
008823DE 6700 0000                  		beq	@ResetFreq
008823E2                            		
008823E2 0C40 00FF                  		cmp.w	#$FF,d0
008823E6 6700                       		beq.s	@ResetFreq
008823E8 0C40 00FE                  		cmp.w	#$FE,d0
008823EC 6700                       		beq.s	@ResetFreq
008823EE                            		
008823EE 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
008823F4 6C00 0000                  		bge	@PCM_Freq
008823F8                            		
008823F8 4A2D 0007                  		tst.b	Chn_ID(a5)
008823FC 6B00 0000                  		bmi	@PSG_Freq
00882400 0C2D 0006 0007                             cmp.b	#FM_6,Chn_ID(a5)
00882406 6600                                       bne.s	@NoChk6
00882408 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
0088240E 6600 0000                  		bne	@DAC_Set
00882412                            
00882412                            @NoChk6:
00882412 7200                                       moveq	#0,d1
00882414 1200                                       move.b	d0,d1
00882416 7400                                       moveq	#0,d2
00882418 E349                       		lsl.w	#1,d1
0088241A 3B7B 1000 0000             		move.w	@Freq_FM(pc,d1.w),Chn_Freq(a5)
00882420 4E75                       		rts
00882422                            
00882422                            @ResetFreq:
00882422 0816 0000                    		btst	#bitPriority,(a6)
00882426 6700                         		beq.s	@SfxMode
00882428 7200                        		moveq	#0,d1
0088242A 122E 0032                   		move.b	LastPattChn(a6),d1
0088242E 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00882434 08B3 0000 1000              		bclr	#0,(a3,d1.w)
0088243A                            @SfxMode:
0088243A 426D 0000                  		clr.w	Chn_Freq(a5)
0088243E 4E75                       		rts
00882440                            		
00882440                            ; -------------------------------
00882440                            ; FM Frequencies
00882440                            ; -------------------------------
00882440                            
00882440                            @Freq_FM:
00882440                            ; 		dc.w $269	;NULL
00882440 028D                       		dc.w $28d	;C-0 $00
00882442 02B4                       		dc.w $2b4
00882444 02DD                       		dc.w $2dd
00882446 0309                       		dc.w $309
00882448 0337                       		dc.w $337
0088244A 0368                       		dc.w $368
0088244C 039C                       		dc.w $39c
0088244E 03D3                       		dc.w $3d3
00882450 040D                       		dc.w $40d
00882452 044B                       		dc.w $44b
00882454 048C                       		dc.w $48c
00882456 0269                       		dc.w $269
00882458 028D                       		dc.w $28d	;C-1 $0C
0088245A 02B4                       		dc.w $2b4
0088245C 02DD                       		dc.w $2dd
0088245E 0309                       		dc.w $309
00882460 0337                       		dc.w $337
00882462 0368                       		dc.w $368
00882464 039C                       		dc.w $39c
00882466 03D3                       		dc.w $3d3
00882468 040D                       		dc.w $40d
0088246A 044B                       		dc.w $44b
0088246C 048C                       		dc.w $48c
0088246E 0A69                       		dc.w $a69
00882470 0A8D                       		dc.w $a8d	;C-2 $18
00882472 0AB4                       		dc.w $ab4
00882474 0ADD                       		dc.w $add
00882476 0B09                       		dc.w $b09
00882478 0B37                       		dc.w $b37
0088247A 0B68                       		dc.w $b68
0088247C 0B9C                       		dc.w $b9c
0088247E 0BD3                       		dc.w $bd3
00882480 0C0D                       		dc.w $c0d
00882482 0C4B                       		dc.w $c4b
00882484 0C8C                       		dc.w $c8c
00882486 1269                       		dc.w $1269
00882488 128D                       		dc.w $128d	;C-3 $24
0088248A 12B4                       		dc.w $12b4
0088248C 12DD                       		dc.w $12dd
0088248E 1309                       		dc.w $1309
00882490 1337                       		dc.w $1337
00882492 1368                       		dc.w $1368
00882494 139C                       		dc.w $139c
00882496 13D3                       		dc.w $13d3
00882498 140D                       		dc.w $140d
0088249A 144B                       		dc.w $144b
0088249C 148C                       		dc.w $148c
0088249E 1A69                       		dc.w $1a69
008824A0 1A8D                       		dc.w $1a8d	;C-4 $30
008824A2 1AB4                       		dc.w $1ab4
008824A4 1ADD                       		dc.w $1add
008824A6 1B09                       		dc.w $1b09
008824A8 1B37                       		dc.w $1b37
008824AA 1B68                       		dc.w $1b68
008824AC 1B9C                       		dc.w $1b9c
008824AE 1BD3                       		dc.w $1bd3
008824B0 1C0D                       		dc.w $1c0d
008824B2 1C4B                       		dc.w $1c4b
008824B4 1C8C                       		dc.w $1c8c
008824B6 2269                       		dc.w $2269
008824B8 228D                       		dc.w $228d	;C-5 $3C
008824BA 22B4                       		dc.w $22b4
008824BC 22DD                       		dc.w $22dd
008824BE 2309                       		dc.w $2309
008824C0 2337                       		dc.w $2337
008824C2 2368                       		dc.w $2368
008824C4 239C                       		dc.w $239c
008824C6 23D3                       		dc.w $23d3
008824C8 240D                       		dc.w $240d
008824CA 244B                       		dc.w $244b
008824CC 248C                       		dc.w $248c
008824CE 2A69                       		dc.w $2a69
008824D0 2A8D                       		dc.w $2a8d	;C-6 $48
008824D2 2AB4                       		dc.w $2ab4
008824D4 2ADD                       		dc.w $2add
008824D6 2B09                       		dc.w $2b09
008824D8 2B37                       		dc.w $2b37
008824DA 2B68                       		dc.w $2b68
008824DC 2B9C                       		dc.w $2b9c
008824DE 2BD3                       		dc.w $2bd3
008824E0 2C0D                       		dc.w $2c0d
008824E2 2C4B                       		dc.w $2c4b
008824E4 2C8C                       		dc.w $2c8c
008824E6 3269                       		dc.w $3269	;C-7 $54
008824E8 328D                       		dc.w $328d
008824EA 32B4                       		dc.w $32b4
008824EC 32DD                       		dc.w $32dd
008824EE 3309                       		dc.w $3309
008824F0 3337                       		dc.w $3337
008824F2 3368                       		dc.w $3368
008824F4 339C                       		dc.w $339c
008824F6 33D3                       		dc.w $33d3
008824F8 340D                       		dc.w $340d
008824FA 344B                       		dc.w $344b
008824FC 348C                       		dc.w $348c
008824FE                            		even
008824FE                            		
008824FE                            ; -------------------------------
008824FE                            ; PSG Freq
008824FE                            ; -------------------------------
008824FE                            
008824FE                            @PSG_Freq:
008824FE 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
00882504 6600                       		bne.s	@NormalPSG
00882506 3B7C 0001 0000             		move.w	#1,Chn_Freq(a5)
0088250C 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
00882512 6700 0000                  		beq	@Disabled
00882516                            @NormalPSG:
00882516 7200                                       moveq	#0,d1
00882518 1200                                       move.b	d0,d1
0088251A E349                       		lsl.w	#1,d1
0088251C 343B 1000                  		move.w	@Notes_PSG(pc,d1.w),d2
00882520 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
00882526 6600                       		bne.s	@NotNoiseFix
00882528 343B 1000                  		move.w	(@Notes_PSG+(12*2))(pc,d1.w),d2		
0088252C                            @NotNoiseFix:
0088252C 3B42 0000                   		move.w	d2,Chn_Freq(a5)
00882530 046D 0001 0000             		sub.w	#1,Chn_Freq(a5)
00882536 4E75                       		rts
00882538                            
00882538                            ; -------------------------------
00882538                            ; PSG Frequencies
00882538                            ; -------------------------------
00882538                            
00882538                            @Notes_PSG:
00882538 0000                       		dc.w 0		;C-0 $0
0088253A 0000                       		dc.w 0
0088253C 0000                       		dc.w 0
0088253E 0000                       		dc.w 0
00882540 0000                       		dc.w 0
00882542 0000                       		dc.w 0
00882544 0000                       		dc.w 0
00882546 0000                       		dc.w 0
00882548 0000                       		dc.w 0
0088254A 0000                       		dc.w 0
0088254C 0000                       		dc.w 0
0088254E 0000                       		dc.w 0
00882550                            		
00882550 0000                       		dc.w 0		;C-1 $C
00882552 0000                       		dc.w 0
00882554 0000                       		dc.w 0
00882556 0000                       		dc.w 0
00882558 0000                       		dc.w 0
0088255A 0000                       		dc.w 0
0088255C 0000                       		dc.w 0
0088255E 0000                       		dc.w 0
00882560 0000                       		dc.w 0
00882562 0000                       		dc.w 0
00882564 0000                       		dc.w 0
00882566 0000                       		dc.w 0
00882568                            		
00882568 0000                       		dc.w 0		;C-2 $18
0088256A 0000                       		dc.w 0
0088256C 0000                       		dc.w 0
0088256E 0000                       		dc.w 0
00882570 0000                       		dc.w 0
00882572 0000                       		dc.w 0
00882574 0000                       		dc.w 0
00882576 0000                       		dc.w 0
00882578 0000                       		dc.w 0
0088257A 0000                       		dc.w 0
0088257C 0000                       		dc.w 0
0088257E 0000                       		dc.w 0
00882580                            
00882580 0000                       		dc.w 0		;C-3 $24
00882582 0000                       		dc.w 0
00882584 0000                       		dc.w 0
00882586 0000                       		dc.w 0
00882588 0000                       		dc.w 0
0088258A 0000                       		dc.w 0
0088258C 0000                       		dc.w 0
0088258E 0000                       		dc.w 0
00882590 0000                       		dc.w 0
00882592 03F8                       		dc.w $3F8
00882594 03BF                                       dc.w $3BF
00882596 0389                                       dc.w $389
00882598                                            
00882598 0356                       		dc.w $356	;C-4 $30
0088259A 0326                                       dc.w $326
0088259C 02F9                                       dc.w $2F9
0088259E 02CE                                       dc.w $2CE
008825A0 02A5                                       dc.w $2A5
008825A2 0280                                       dc.w $280
008825A4 025C                                       dc.w $25C
008825A6 023A                                       dc.w $23A
008825A8 021A                                       dc.w $21A
008825AA 01FB                       		dc.w $1FB
008825AC 01DF                                       dc.w $1DF
008825AE 01C4                                       dc.w $1C4
008825B0                                            
008825B0 01AB                                       dc.w $1AB	;C-5 $3C
008825B2 0193                                       dc.w $193
008825B4 017D                                       dc.w $17D
008825B6 0167                                       dc.w $167
008825B8 0153                                       dc.w $153
008825BA 0140                                       dc.w $140
008825BC 012E                       		dc.w $12E
008825BE 011D                                       dc.w $11D
008825C0 010D                                       dc.w $10D
008825C2 00FE                                       dc.w $FE
008825C4 00EF                                       dc.w $EF
008825C6 00E2                                       dc.w $E2
008825C8                                            
008825C8 00D6                                       dc.w $D6	;C-6 $48
008825CA 00C9                                       dc.w $C9
008825CC 00BE                                       dc.w $BE
008825CE 00B4                                       dc.w $B4
008825D0 00A9                       		dc.w $A9
008825D2 00A0                                       dc.w $A0
008825D4 0097                                       dc.w $97
008825D6 008F                                       dc.w $8F
008825D8 0087                                       dc.w $87
008825DA 007F                                       dc.w $7F
008825DC 0078                                       dc.w $78
008825DE 0071                                       dc.w $71
008825E0                                            
008825E0 006B                                       dc.w $6B	;C-7 $54
008825E2 0065                                       dc.w $65
008825E4 005F                       		dc.w $5F
008825E6 005A                                       dc.w $5A
008825E8 0055                                       dc.w $55
008825EA 0050                                       dc.w $50
008825EC 004B                                       dc.w $4B
008825EE 0047                                       dc.w $47
008825F0 0043                                       dc.w $43
008825F2 0040                                       dc.w $40
008825F4 003C                                       dc.w $3C
008825F6 0039                                       dc.w $39
008825F8                                            
008825F8 0036                       		dc.w $36	;C-8 $60
008825FA 0033                                       dc.w $33
008825FC 0030                                       dc.w $30
008825FE 002D                                       dc.w $2D
00882600 002B                                       dc.w $2B
00882602 0028                                       dc.w $28
00882604 0026                                       dc.w $26
00882606 0024                                       dc.w $24
00882608 0022                                       dc.w $22
0088260A 0020                                       dc.w $20
0088260C 001F                       		dc.w $1F
0088260E 001D                                       dc.w $1D
00882610                                            
00882610 001B                                       dc.w $1B	;C-9 $6C
00882612 001A                                       dc.w $1A
00882614 0018                                       dc.w $18
00882616 0017                                       dc.w $17
00882618 0016                                       dc.w $16
0088261A 0015                                       dc.w $15
0088261C 0013                                       dc.w $13
0088261E 0012                                       dc.w $12
00882620 0011                       		dc.w $11
00882622 0010                        		dc.w $10 ;Custom...
00882624 0009                        		dc.w $9
00882626 0008                        		dc.w $8
00882628                            
00882628                            		even
00882628                            		
00882628                            ; -------------------------------
00882628                            ; Set DAC
00882628                            ; -------------------------------
00882628                            
00882628                            @DAC_Set:
00882628 426D 0000                  		clr.w	Chn_Freq(a5)
0088262C 1B40 0000                                  move.b	d0,Chn_Freq(a5)
00882630 4E75                                       rts
00882632                            
00882632                            ; -------------------------------
00882632                            ; Set PCM/PWM
00882632                            ; -------------------------------
00882632                            
00882632                            @PCM_Freq:
00882632                            		
00882632 3B7C 0001 0000             		move.w	#1,Chn_Freq(a5)
00882638                            		
00882638 4E75                       		rts
0088263A                            
0088263A                            ; -------------------------------
0088263A                            ; PCM Frequencies
0088263A                            ; -------------------------------
0088263A                            
0088263A                            		
0088263A                            ; ================================================================
0088263A                            ; -------------------------------
0088263A                            ; Set Volume
0088263A                            ; -------------------------------
0088263A                            
0088263A                            @ChnVolume:
0088263A 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00882640 6700 0000                  		beq	@Return
00882644                            
00882644 0816 0000                  		btst	#bitPriority,(a6)
00882648 6700                       		beq.s	@SFX_Mode
0088264A 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00882652 6700                       		beq.s	@SFX_Mode
00882654 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
0088265A 7200                        		moveq	#0,d1
0088265C 122E 0032                   		move.b	LastPattChn(a6),d1
00882660 0833 0000 1000             		btst	#0,(a3,d1.w)
00882666 6600 0000                  		bne	@Return
0088266A                            @SFX_Mode:
0088266A                            
0088266A 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00882670 6C00 0000                  		bge	@ChnVol_PCM
00882674 4A2D 0007                  		tst.b	Chn_ID(a5)
00882678 6B00 0000                  		bmi	@ChnVol_PSG
0088267C                            
0088267C 266E 0014                  		movea.l	SongVoices(a6),a3
00882680 7000                       		moveq	#0,d0
00882682 102D 0008                  		move.b	Chn_Inst(a5),d0
00882686                            @FindNext:
00882686 4A53                       		tst.w	(a3)
00882688 6B00 0000                  		bmi	@Return
0088268C 7200                       		moveq	#0,d1
0088268E 322B 0002                  		move.w	2(a3),d1
00882692 B053                       		cmp.w	(a3),d0
00882694 6700                       		beq.s	@Found
00882696 D6FC 0008                   		adda.w	#8,a3
0088269A 60EA                       		bra.s	@FindNext
0088269C                            
0088269C                            @Found:
0088269C D6FC 0004                  		adda.w	#4,a3
008826A0 2653                       		movea.l	(a3),a3
008826A2 4A41                       		tst.w	d1
008826A4 6700                       		beq.s	@Nothing
008826A6                            @FindNext2:
008826A6 D6FC 0019                  		adda	#$19,a3
008826AA 51C9 FFFA                  		dbf	d1,@FindNext2
008826AE                            @Nothing:
008826AE D6FC 0018                  		adda	#$18,a3
008826B2                            
008826B2 103C 0028                  		move.b	#$28,d0
008826B6 7200                       		moveq	#0,d1
008826B8 D22D 0007                  		add.b	Chn_ID(a5),d1
008826BC 33FC 0100 00A1 1100 0839+  		Z80_OFF
008826CE 6100 0000                  		bsr	FM_RegWrite_1
008826D2                            
008826D2 2D4C 0004                  		move.l	a4,AddrBackup(a6)
008826D6 49FA 0000                  		lea	SMEG_RegSetVol-1(pc),a4
008826DA 7C01                       		moveq	#1,d6
008826DC                            @TryNext:
008826DC 7200                       		moveq	#0,d1
008826DE 1213                       		move.b	(a3),d1
008826E0 D22D 000A                  		add.b	Chn_DefVol(a5),d1
008826E4 D22D 0009                  		add.b	Chn_Vol(a5),d1
008826E8                            
008826E8 7600                                       moveq	#0,d3
008826EA 162D 0007                                  move.b	Chn_ID(a5),d3
008826EE 7000                                       moveq	#0,d0
008826F0 1014                                       move.b	(a4),d0
008826F2 0C00 004C                                  cmp.b	#$4C,d0
008826F6 6700                       		beq.s	@Is4C
008826F8 4A13                       		tst.b	(a3)
008826FA 6600                       		bne.s	@FM_Return
008826FC                            
008826FC                            @Is4C:
008826FC 98FC 0002                                  suba	#2,a4
00882700 96FC 0002                                  suba	#2,a3
00882704                            
00882704 0C2D 0004 0007                             cmp.b	#FM_4,Chn_ID(a5)
0088270A 6C00                                       bge.s	@FM456
0088270C D003                       		add.b	d3,d0
0088270E                            
0088270E 6100 0000                  		bsr	FM_RegWrite_1
00882712 51CE FFC8                  		dbf	d6,@TryNext
00882716 6000                       		bra.s	@FM_Return
00882718                            
00882718                            @FM456:
00882718 0443 0004                  		sub.w	#4,d3
0088271C D003                       		add.b	d3,d0
0088271E 6100 0000                  		bsr	FM_RegWrite_2
00882722 51CE FFB8                  		dbf	d6,@TryNext
00882726                            
00882726                            @FM_Return:
00882726 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882736 286E 0004                  		move.l	AddrBackup(a6),a4
0088273A                            @Return:
0088273A 4E75                       		rts
0088273C                            
0088273C                            ; -------------------------------
0088273C                            
0088273C                            @ChnVol_PSG:
0088273C 7200                       		moveq	#0,d1
0088273E 122D 0009                  		move.b	Chn_Vol(a5),d1
00882742 303C 000F                  		move.w	#$F,d0
00882746 4A41                       		tst.w	d1
00882748 6700                       		beq.s	@DontFix
0088274A                            
0088274A 0441 0040                  		sub.w	#64,d1
0088274E 4441                       		neg.w	d1
00882750 E449                       		lsr.w	#2,d1
00882752 3001                       		move.w	d1,d0
00882754                            
00882754                            	;	move.b	Chn_DefVol(a5),d3
00882754                            	;	lsr.w	#2,d3
00882754                            	;	add.w	d3,d0
00882754                            	;	moveq	#$F,d0
00882754                            	;	sub.w	d2,d0
00882754                            	;	cmp.w	#$F,d0
00882754                            	;	beq.s	@DontFix
00882754                            	;	sub.w	#1,d0
00882754                            	
00882754                            @DontFix:
00882754 7200                       		moveq	#0,d1
00882756 122D 0007                  		move.b	Chn_ID(a5),d1
0088275A 0881 0007                  		bclr	#7,d1
0088275E EA49                       		lsr.w	#5,d1
00882760                            		
00882760 0200 000F                  		and.b	#$F,d0
00882764 0201 0003                  		and.b	#$3,d1
00882768 7400                       		moveq	#0,d2
0088276A 143C 000F                  		move.b	#$F,d2
0088276E 9400                       		sub.b	d0,d2
00882770 0002 0090                  		or.b	#%10010000,d2
00882774 EB09                       		lsl.b	#5,d1
00882776 8401                       		or.b	d1,d2
00882778 13C2 00C0 0011             		move.b	d2,($C00011).l	;$90+channel<<5+($f-vol)
0088277E 4E75                       		rts
00882780                            
00882780                            ; -------------------------------
00882780                            
00882780                            @ChnVol_PCM:
00882780                               		
00882780 142D 0009                   		move.b	Chn_Vol(a5),d2
00882784 E64A                         		lsr.w	#3,d2
00882786                            ;  		and.w	#%11111110,d2
00882786                            ;  		moveq	#0,d1
00882786                            ;     		move.b	Chn_DefVol(a5),d1
00882786                            ;       	lsr.w	#4,d1
00882786                            ;      		lsl.w	#4,d1
00882786                            ;    		sub.b	d1,d2
00882786                            ;     		move.b	Chn_Vol(a5),d1
00882786                            ;       		lsr.w	#4,d1
00882786                            ;     		sub.b	d1,d2
00882786                                		
00882786 7200                           		moveq	#0,d1
00882788 122D 0007                      		move.b	Chn_ID(a5),d1
0088278C 0241 000F                      		and.w	#$F,d1
00882790 13C1 00A1 5122                 		move.b	d1,(marsreg+comm2)
00882796 13C2 00A1 5123                		move.b	d2,(marsreg+comm2+1)
0088279C 7004                         		moveq 	#marscall_SetVol,d0
0088279E 6100 0000                    		bsr	SMEG_MARS_Call
008827A2                             		
008827A2 4E75                       		rts
008827A4                            		
008827A4                            ; ================================================================
008827A4                            ; -------------------------------
008827A4                            ; Channel effect
008827A4                            ; -------------------------------
008827A4                            
008827A4                            @ChannelEffects:
008827A4 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
008827AA 6700 0000                  		beq	@Null
008827AE                            		
008827AE 0816 0000                  		btst	#bitPriority,(a6)
008827B2 6700                       		beq.s	@SFX_ModeEff
008827B4 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
008827BC 6700                       		beq.s	@SFX_ModeEff
008827BE 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
008827C4 7200                        		moveq	#0,d1
008827C6 122E 0032                   		move.b	LastPattChn(a6),d1
008827CA 0833 0000 1000             		btst	#0,(a3,d1.w)
008827D0 6600 FF68                  		bne	@Return
008827D4                            @SFX_ModeEff:
008827D4                            
008827D4 7000                       		moveq	#0,d0
008827D6 102D 0002                  		move.b	Chn_Effect(a5),d0
008827DA D040                       		add.w	d0,d0
008827DC 323B 0000                  		move.w	@EffectList(pc,d0.w),d1
008827E0 4EFB 1000                  		jmp	@EffectList(pc,d1.w)
008827E4                            		
008827E4                            ; -------------------------------
008827E4                            
008827E4 0000                       @EffectList:	dc.w	@Null-@EffectList
008827E6 0000                       		dc.w	@Flag_A-@EffectList
008827E8 0000                       		dc.w	@Null-@EffectList
008827EA 0000                       		dc.w	@Null-@EffectList
008827EC 0000                       		dc.w	@Flag_D-@EffectList
008827EE 0000                       		dc.w	@Flag_E-@EffectList
008827F0 0000                       		dc.w	@Flag_F-@EffectList
008827F2 0000                       		dc.w	@Null-@EffectList
008827F4 0000                       		dc.w	@Null-@EffectList
008827F6 0000                       		dc.w	@Null-@EffectList
008827F8 0000                       		dc.w	@Null-@EffectList
008827FA 0000                       		dc.w	@Null-@EffectList
008827FC 0000                       		dc.w	@Null-@EffectList
008827FE 0000                       		dc.w	@Flag_M-@EffectList
00882800 0000                       		dc.w	@Null-@EffectList
00882802 0000                       		dc.w	@Null-@EffectList
00882804 0000                       		dc.w	@Null-@EffectList
00882806 0000                       		dc.w	@Null-@EffectList
00882808 0000                       		dc.w	@Null-@EffectList
0088280A 0000                       		dc.w	@Null-@EffectList
0088280C 0000                       		dc.w	@Null-@EffectList
0088280E 0000                       		dc.w	@Null-@EffectList
00882810 0000                       		dc.w	@Null-@EffectList
00882812 0000                       		dc.w	@Null-@EffectList
00882814 0000                       		dc.w	@Flag_X-@EffectList
00882816 0000                       		dc.w	@Null-@EffectList
00882818 0000                       		dc.w	@Flag_Z-@EffectList
0088281A                            		even
0088281A                            
0088281A                            ; -------------------------------
0088281A                            ; Null effect
0088281A                            ; -------------------------------
0088281A                            
0088281A                            @Null:
0088281A 4E75                       		rts
0088281C                            
0088281C                            ; -------------------------------
0088281C                            ; Flag A - Set Tick rate
0088281C                            ; -------------------------------
0088281C                            
0088281C                            @Flag_A:
0088281C 7000                       		moveq	#0,d0
0088281E 426E 0024                  		clr.w	TicksSet(a6)
00882822 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00882826 0440 0001                  		sub.w	#1,d0
0088282A 1D40 0025                  		move.b	d0,TicksSet+1(a6)
0088282E 4E75                       		rts
00882830                            
00882830                            ; -------------------------------
00882830                            ; Flag D - Volume slide
00882830                            ; -------------------------------
00882830                            
00882830                            @Flag_D:
00882830 7000                       		moveq	#0,d0
00882832 7200                       		moveq	#0,d1
00882834 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00882838 4A2D 0007                  		tst.b	Chn_ID(a5)
0088283C 6A00 0000                  		bpl	@NotPSG
00882840 E948                       		lsl.w	#4,d0
00882842                            @NotPSG:
00882842 122D 0009                  		move.b	Chn_Vol(a5),d1
00882846 D200                       		add.b	d0,d1
00882848 1B41 0009                  		move.b	d1,Chn_Vol(a5)
0088284C 6000 FDEC                  		bra	@ChnVolume
00882850                            
00882850                            ; -------------------------------
00882850                            ; Flag E - Portametro down
00882850                            ; -------------------------------
00882850                            
00882850                            @Flag_E:
00882850 7000                       		moveq	#0,d0
00882852 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00882856 422D 0004                  		clr.b	Chn_Portam(a5)
0088285A D12D 0005                  		add.b	d0,Chn_Portam+1(a5)
0088285E 4E75                       		rts
00882860                            
00882860                            ; -------------------------------
00882860                            ; Flag F - Portametro up
00882860                            ; -------------------------------
00882860                            
00882860                            @Flag_F:
00882860 7000                       		moveq	#0,d0
00882862 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00882866 422D 0005                  		clr.b	Chn_Portam+1(a5)
0088286A D12D 0004                  		add.b	d0,Chn_Portam(a5)
0088286E 4E75                       		rts
00882870                            
00882870                            ; -------------------------------
00882870                            ; Flag M - Set Channel Volume
00882870                            ; -------------------------------
00882870                            
00882870                            @Flag_M:
00882870 7000                       		moveq	#0,d0
00882872 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00882876                            	;	tst.b	Chn_ID(a5)
00882876                            	;	bpl	@NotPSG_H
00882876                            
00882876 4440                       		neg.w	d0
00882878 0440 00D0                  		sub.w	#$D0,d0
0088287C                            ;@NotPSG_H:
0088287C 1B40 000A                  		move.b	d0,Chn_DefVol(a5)
00882880 6000 FDB8                  		bra	@ChnVolume
00882884                            
00882884                            ; -------------------------------
00882884                            ; Flag X - Stereo
00882884                            ; -------------------------------
00882884                            
00882884                            @Flag_X:
00882884 4A2D 0007                  		tst.b	Chn_ID(a5)
00882888 6B90                       		bmi.s	@Null
0088288A 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00882890 6C00 0000                  		bge	@PCM_Pan
00882894                            		
00882894 7000                       		moveq	#0,d0
00882896 303C 00C0                  		move.w	#$C0,d0
0088289A 0C2D 0080 0003                             cmp.b	#$80,Chn_Effect+1(a5)
008828A0 6700                                       beq.s	@SetPan
008828A2 4A2D 0003                  		tst.b	Chn_Effect+1(a5)
008828A6 6B00                       		bmi.s	@Right
008828A8 6A00                       		bpl.s	@Left
008828AA                            @SetPan:
008828AA 1B40 000C                  		move.b	d0,Chn_Panning(a5)
008828AE 4E75                       		rts
008828B0                            @Left:
008828B0 303C 0080                  		move.w	#$80,d0
008828B4 60F4                       		bra.s	@SetPan
008828B6                            @Right:
008828B6 303C 0040                  		move.w	#$40,d0
008828BA 60EE                       		bra.s	@SetPan
008828BC                            
008828BC                            ; -------------------------------
008828BC                            ; PCM Panning
008828BC                            ; -------------------------------
008828BC                            
008828BC                            @PCM_Pan:
008828BC                             
008828BC 303C 00C0                  		move.w	#%11000000,d0
008828C0 0C2D 0080 0003             		cmp.b	#$80,Chn_Effect+1(a5)
008828C6 6700 0000                  		beq	@Cont
008828CA 4A2D 0003                   		tst.b	Chn_Effect+1(a5)
008828CE 6B00                        		bmi.s	@pwmRight
008828D0 6A00                       		bpl.s	@pwmLeft
008828D2 6000 0000                  		bra	@Cont
008828D6                             		
008828D6                            @pwmRight:
008828D6 303C 0040                   		move.w	#%01000000,d0
008828DA 6000                        		bra.s	@Cont
008828DC                            @pwmLeft:
008828DC 303C 0080                  		move.w	#%10000000,d0
008828E0                            
008828E0                            @Cont:
008828E0 1B40 000C                  		move.b	d0,Chn_Panning(a5)   		
008828E4 4E75                       		rts
008828E6                            
008828E6                            ; ======================================================
008828E6                            ; -------------------------------
008828E6                            ; Flag Z
008828E6                            ; -------------------------------
008828E6                            
008828E6                            @Flag_Z:
008828E6 7000                       		moveq	#0,d0
008828E8 102D 0003                  		move.b	Chn_Effect+1(a5),d0
008828EC E848                       		lsr.w	#4,d0
008828EE D040                       		add.w	d0,d0
008828F0 323B 0000                  		move.w	@HashList(pc,d0.w),d1
008828F4 102D 0003                  		move.b	Chn_Effect+1(a5),d0		;d0 - $0-$F argument
008828F8 0200 000F                  		and.b	#$F,d0
008828FC 4EFB 1000                  		jmp	@HashList(pc,d1.w)
00882900                            
00882900 0000                       @HashList:	dc.w	@DacStatus-@HashList		;$00 - Status
00882902 0000                       		dc.w	@FM_Key-@HashList		;$10 - FM Keys ON/OFF
00882904 FF1A                       		dc.w	@Null-@HashList			;$20
00882906 FF1A                       		dc.w	@Null-@HashList			;$30
00882908 0000                       		dc.w	@PSG-@HashList			;$40 - PSG Settings
0088290A FF1A                       		dc.w	@Null-@HashList			;$50
0088290C FF1A                       		dc.w	@Null-@HashList			;$60
0088290E FF1A                       		dc.w	@Null-@HashList			;$70
00882910 FF1A                       		dc.w	@Null-@HashList			;$80
00882912 FF1A                       		dc.w	@Null-@HashList			;$90
00882914 FF1A                       		dc.w	@Null-@HashList			;$A0
00882916 FF1A                       		dc.w	@Null-@HashList			;$B0
00882918 FF1A                       		dc.w	@Null-@HashList			;$C0
0088291A FF1A                       		dc.w	@Null-@HashList			;$D0
0088291C FF1A                       		dc.w	@Null-@HashList			;$E0
0088291E 0000                       		dc.w	@FixSfx-@HashList		;$F0 - Finish SFX flag (SFX only)
00882920                            		even
00882920                            
00882920                            ; -------------------------------
00882920                            
00882920                            @DacStatus:
00882920 0240 0003                  		and.w	#3,d0
00882924 1D40 0001                  		move.b	d0,DrvSettings(a6)
00882928                            		
00882928 1200                       		move.b	d0,d1
0088292A 0241 0001                  		and.w	#1,d1
0088292E EF49                       		lsl.w	#7,d1
00882930 702B                       		moveq	#$2B,d0
00882932 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882944 6100 0000                  		bsr	FM_RegWrite_1
00882948 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882958                            		
00882958 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
0088295E 6700 FDDA                  		beq	@Return
00882962 6000 0000                  		bra	SMEG_SetVoice_DAC
00882966                            
00882966                            ; -------------------------------
00882966                            
00882966                            @FM_Key:
00882966 0240 000F                  		and.w	#$F,d0
0088296A 1B40 000D                  		move.b	d0,Chn_FM_Key(a5)
0088296E 4E75                       		rts
00882970                            
00882970                            ; -------------------------------
00882970                            
00882970                            @PSG:
00882970 08EE 0002 0001             		bset	#bitTone3,DrvSettings(a6)
00882976 0C00 0003                  		cmp.b	#3,d0
0088297A 6700                       		beq.s	@Tone3
0088297C 0C00 0007                  		cmp.b	#7,d0
00882980 6700                       		beq.s	@Tone3
00882982 08AE 0002 0001             		bclr	#bitTone3,DrvSettings(a6)
00882988                            @Tone3:
00882988 0816 0000                    		btst	#bitPriority,(a6)
0088298C 6700                         		beq.s	@IsPsg
0088298E 47F9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a3
00882994 176B 0001 0031             		move.b	DrvSettings(a3),DrvSettingsBGM(a3)
0088299A 1740 0030                  		move.b	d0,PsgLast(a3)
0088299E                            @IsPsg:
0088299E 0640 00E0                  		add.w	#$E0,d0
008829A2 6000 0000                  		bra	@PutPSG
008829A6                            
008829A6                            ; -------------------------------
008829A6                            
008829A6                            @FixSfx:
008829A6 0816 0000                     		btst	#bitPriority,(a6)
008829AA 6600 FD8E                    		bne	@Return
008829AE                            		
008829AE 47F9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a3
008829B4 176B 0031 0001              		move.b	DrvSettingsBGM(a3),DrvSettings(a3)
008829BA 7000                       		moveq 	#0,d0
008829BC 102B 0030                   		move.b	PsgLast(a3),d0
008829C0 0640 00E0                  		add.w	#$E0,d0
008829C4 6100 0000                  		bsr	@PutPSG
008829C8                            
008829C8 7000                        		moveq	#0,d0
008829CA 102E 0032                   		move.b	LastPattChn(a6),d0
008829CE 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
008829D4 08B3 0000 0000              		bclr	#0,(a3,d0.w)
008829DA                             		
008829DA 0896 0001                    		bclr	#bitSfxOn,(a6)				;SFX finished playing
008829DE 4E75                       		rts
008829E0                            		
008829E0                            ; -------------------------------
008829E0                            
008829E0                            @PutPSG:
008829E0 13C0 00C0 0011             		move.b	d0,($C00011)
008829E6 4E75                       		rts
008829E8                            		
008829E8                            ; ================================================================
008829E8                            ; -------------------------------
008829E8                            ; Channel play
008829E8                            ; -------------------------------
008829E8                            
008829E8                            @ChannelPlay:	
008829E8 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
008829EE 6700 0000                  		beq	@Disabled
008829F2                            		
008829F2 0816 0000                  		btst	#bitPriority,(a6)
008829F6 6700                       		beq.s	@SFX_ModePlay
008829F8 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00882A00 6700                       		beq.s	@SFX_ModePlay
00882A02 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00882A08 7200                        		moveq	#0,d1
00882A0A 122E 0032                   		move.b	LastPattChn(a6),d1
00882A0E 0833 0000 1000             		btst	#0,(a3,d1.w)
00882A14 6600 FD24                  		bne	@Return
00882A18                            @SFX_ModePlay:
00882A18                            
00882A18 7000                                       moveq	#0,d0
00882A1A 102D 000B                  		move.b	Chn_Note(a5),d0
00882A1E 4A2D 0004                  		tst.b	Chn_Portam(a5)
00882A22 6700                       		beq.s	@NoUp
00882A24 D02D 0004                  		add.b	Chn_Portam(a5),d0
00882A28 6000                       		bra.s	@NoDown
00882A2A                            @NoUp:
00882A2A 4A2D 0005                  		tst.b	Chn_Portam+1(a5)
00882A2E 6700                       		beq.s	@NoDown
00882A30 902D 0005                  		sub.b	Chn_Portam+1(a5),d0
00882A34                            @NoDown:
00882A34 6100 F9A2                  		bsr	@NoteFreq
00882A38                            
00882A38                            @Continue:
00882A38 382D 0000                  		move.w	Chn_Freq(a5),d4
00882A3C 6700 0000                  		beq	SMEG_ChannelRest
00882A40 4A44                       		tst.w	d4
00882A42 6B00 0000                  		bmi	SMEG_ChannelRest
00882A46                            
00882A46 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00882A4C 6C00 0000                  		bge	@ChannelPlay_PCM
00882A50 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
00882A56 6600 0000                                  bne	@NoChk6_play
00882A5A 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00882A60 6600 0000                  		bne	@ChannelPlay_DAC
00882A64                            
00882A64                            @NoChk6_play:
00882A64 4A2D 0007                  		tst.b	Chn_ID(a5)
00882A68 6B00 0000                  		bmi	@ChannelPlay_PSG
00882A6C                            		
00882A6C 6100 0000                  		bsr	SMEG_FM_SetPan
00882A70                            
00882A70 7028                       		moveq	#$28,d0
00882A72 7200                       		moveq	#0,d1
00882A74 D22D 0007                  		add.b	Chn_ID(a5),d1
00882A78 33FC 0100 00A1 1100 0839+   		Z80_OFF
00882A8A 6100 0000                  		bsr	FM_RegWrite_1
00882A8E                            
00882A8E 7A00                       		moveq	#0,d5
00882A90 1A2D 0007                  		move.b	Chn_ID(a5),d5
00882A94 0C05 0004                  		cmp.b	#4,d5
00882A98 6D00                       		blt.s	@FirstFM
00882A9A 0405 0004                  		sub.b	#4,d5
00882A9E                            @FirstFM:
00882A9E 303C 00A4                  		move.w	#$A4,d0
00882AA2 D005                       		add.b	d5,d0
00882AA4 7200                       		moveq	#0,d1
00882AA6 E15C                       		rol.w	#8,d4
00882AA8 1204                       		move.b	d4,d1
00882AAA 6100 0000                  		bsr	SMEG_FM_FindWrite
00882AAE 303C 00A0                  		move.w	#$A0,d0
00882AB2 D005                       		add.b	d5,d0
00882AB4 7200                       		moveq	#0,d1
00882AB6 E15C                       		rol.w	#8,d4
00882AB8 1204                       		move.b	d4,d1
00882ABA 6100 0000                  		bsr	SMEG_FM_FindWrite
00882ABE                            
00882ABE 7028                       		moveq	#$28,d0
00882AC0 7200                       		moveq	#0,d1
00882AC2 122D 000D                  		move.b	Chn_FM_Key(a5),d1
00882AC6 E949                       		lsl.w	#4,d1
00882AC8 D22D 0007                  		add.b	Chn_ID(a5),d1
00882ACC 6100 0000                  		bsr	FM_RegWrite_1
00882AD0                            		
00882AD0 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882AE0                            @Disabled:
00882AE0 4E75                       		rts
00882AE2                            
00882AE2                            ; -------------------------------
00882AE2                            ; Play PSG
00882AE2                            ; -------------------------------
00882AE2                            
00882AE2                            @ChannelPlay_PSG:
00882AE2 0C2D 00E0 0007             		cmp.b	#$E0,Chn_ID(a5)
00882AE8 6700                       		beq.s	@PlayNoise
00882AEA                            
00882AEA 0C2D 00C0 0007                             cmp.b	#$C0,Chn_ID(a5)
00882AF0 6600                                       bne.s	@NotPsg3
00882AF2 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
00882AF8 6700                       		beq.s	@NotPsg3
00882AFA 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
00882B02 4E75                                       rts
00882B04                            
00882B04                            @NotPsg3:
00882B04 7200                       		moveq	#0,d1
00882B06 302D 0000                  		move.w	Chn_Freq(a5),d0
00882B0A 122D 0007                  		move.b	Chn_ID(a5),d1
00882B0E 0881 0007                  		bclr	#7,d1
00882B12 EA49                       		lsr.w	#5,d1
00882B14 6000 0000                  		bra	@SetFreq
00882B18                            
00882B18                            @PlayNoise:
00882B18 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
00882B1E 67C0                       		beq.s	@Disabled
00882B20                            
00882B20 302D 0000                  		move.w	Chn_Freq(a5),d0
00882B24 7202                       		moveq	#2,d1
00882B26                            
00882B26                            ;---------------------
00882B26                            ; Set frequency
00882B26                            ;
00882B26                            ; d0 - frequency (0-$3ff)
00882B26                            ; d1 - channel (0, 1, 2)
00882B26                            ;---------------------
00882B26                            
00882B26                            @SetFreq:
00882B26 1400                       		move.b	d0,d2
00882B28 0202 000F                  		and.b	#$F,d2
00882B2C 0602 0080                  		add.b	#$80,d2
00882B30 0201 0003                  		and.b	#$3,d1
00882B34 EB09                       		lsl.b	#$5,d1
00882B36 8401                       		or.b	d1,d2
00882B38 13C2 00C0 0011             		move.b	d2,($C00011).l	;$80+channel<<5+(freq&$f)
00882B3E E848                       		lsr.w	#$4,d0
00882B40 13C0 00C0 0011             		move.b	d0,($C00011).l	;freq>>4
00882B46 4E75                       		rts
00882B48                            		
00882B48                            ; -------------------------------
00882B48                            ; Play DAC
00882B48                            ; -------------------------------
00882B48                            
00882B48                            @ChannelPlay_DAC:
00882B48                            ; 		if SMEG_Z80
00882B48                            ;  		btst	#bitDacNote,DrvSettings(a6)
00882B48                            ;  		bne	@FoundIt
00882B48                            
00882B48 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882B5A 7000                       		moveq	#0,d0			; TODO: Loop flag
00882B5C E308                       		lsl.b	#1,d0
00882B5E 08C0 0000                  		bset	#0,d0
00882B62 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
00882B68 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882B78                            @FoundIt:
00882B78                            ; 		endif
00882B78 4E75                       		rts
00882B7A                            
00882B7A                            ; -------------------------------
00882B7A                            ; Play PCM
00882B7A                            ; -------------------------------
00882B7A                            
00882B7A                            @ChannelPlay_PCM:	
00882B7A                            
00882B7A 4AAE 001C                  		tst.l	SongPcmSamp(a6)
00882B7E 6700                       		beq.s	@ReturnPCM
00882B80 6B00                       		bmi.s	@ReturnPCM
00882B82                            		
00882B82 7200                         		moveq	#0,d1
00882B84 7400                         		moveq	#0,d2
00882B86 122D 0007                         		move.b	Chn_ID(a5),d1
00882B8A 0241 000F                       		and.w	#$F,d1
00882B8E 822D 000C                        		or.b	Chn_Panning(a5),d1
00882B92 142D 000B                        		move.b	Chn_Note(a5),d2
00882B96 13C1 00A1 5122               		move.b	d1,(marsreg+comm2)			; Pan+Channel set
00882B9C 13C2 00A1 5123               		move.b	d2,(marsreg+comm2+1)			; Note
00882BA2 7001                         		moveq 	#marscall_Play,d0
00882BA4 6100 0000                    		bsr	SMEG_MARS_Call
00882BA8                            @ReturnPCM:
00882BA8                             		
00882BA8 4E75                       		rts
00882BAA                            
00882BAA                            ; -------------------------------
00882BAA                            ; Mute/Rest channel
00882BAA                            ; -------------------------------
00882BAA                            
00882BAA                            SMEG_ChannelRest:
00882BAA 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00882BB0 6700                       		beq.s	@Return
00882BB2                            		
00882BB2 0816 0000                  		btst	#bitPriority,(a6)
00882BB6 6700                       		beq.s	@SFX_Mode
00882BB8 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00882BC0 6700                       		beq.s	@SFX_Mode
00882BC2 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00882BC8 7200                        		moveq	#0,d1
00882BCA 122E 0032                   		move.b	LastPattChn(a6),d1
00882BCE 0833 0000 1000             		btst	#0,(a3,d1.w)
00882BD4 6600 0000                  		bne	@Return
00882BD8                            @SFX_Mode:
00882BD8 4A2D 0007                  		tst.b	Chn_ID(a5)
00882BDC 6B00                       		bmi.s	@PSG_Rest
00882BDE                            
00882BDE 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
00882BE4 6600                                       bne.s	@NoChk6
00882BE6 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00882BEC 6600                       		bne.s	@DAC_Rest
00882BEE                            
00882BEE                            @NoChk6:
00882BEE 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00882BF4 6C00 0000                  		bge	@PCM_Rest
00882BF8                            		
00882BF8 7028                       		moveq	#$28,d0
00882BFA 7200                                       moveq	#0,d1
00882BFC 122D 0007                  		move.b	Chn_ID(a5),d1
00882C00 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882C12 6100 0000                  		bsr	FM_RegWrite_1
00882C16 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882C26                            
00882C26                            @Return:
00882C26 4E75                       		rts
00882C28                            
00882C28                            ; -------------------------------
00882C28                            ; PSG Rest
00882C28                            ; -------------------------------
00882C28                            
00882C28                            @PSG_Rest:
00882C28 7000                       		moveq	#0,d0
00882C2A 102D 0007                  		move.b	Chn_ID(a5),d0
00882C2E 0600 001F                  		add.b	#$1F,d0
00882C32 13C0 00C0 0011             		move.b	d0,($C00011)
00882C38                            
00882C38                            @Disabled:
00882C38 4E75                       		rts
00882C3A                            
00882C3A                            ; -------------------------------
00882C3A                            ; DAC Rest
00882C3A                            ; -------------------------------
00882C3A                            
00882C3A                            @DAC_Rest:
00882C3A 33FC 0100 00A1 1100 0839+    		Z80_OFF
00882C4C 702B                       		moveq	#$2B,d0
00882C4E 7200                                       moveq	#0,d1
00882C50 6100 0000                    		bsr	FM_RegWrite_1
00882C54                            
00882C54 7000                       		moveq	#0,d0
00882C56 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
00882C5C 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882C6C 4E75                       		rts
00882C6E                            
00882C6E                            ; -------------------------------
00882C6E                            ; PCM Rest
00882C6E                            ; -------------------------------
00882C6E                            
00882C6E                            @PCM_Rest:
00882C6E                             		
00882C6E 4AAE 001C                  		tst.l	SongPcmSamp(a6)
00882C72 6700                       		beq.s	@ReturnPCM
00882C74 6B00                       		bmi.s	@ReturnPCM
00882C76                            		
00882C76 7000                         		moveq	#0,d0
00882C78 102D 0007                    		move.b	Chn_ID(a5),d0
00882C7C 0240 000F                    		and.w	#$F,d0
00882C80 13C0 00A1 5122               		move.b	d0,(marsreg+comm2)
00882C86 7002                         		moveq	#marscall_Stop,d0
00882C88 6100 0000                    		bsr	SMEG_MARS_Call
00882C8C                                		
00882C8C                            @ReturnPCM:
00882C8C 4E75                       		rts
00882C8E                            		
00882C8E                            ; ================================================================
00882C8E                            ; Subs
00882C8E                            ; ================================================================
00882C8E                            
00882C8E                            ; -------------------------------------------
00882C8E                            ; Extra channels communication
00882C8E                            ; -------------------------------------------
00882C8E                            
00882C8E                            SMEG_CD_Call:
00882C8E 4E75                       		rts
00882C90                            
00882C90                            SMEG_MARS_Call:
00882C90 6100 DC9A                   		bsr	Mars_Task_Slave
00882C94 6000 DCAA                   		bra	Mars_Wait_Slave
00882C98 4E75                        		rts
00882C9A                             		
00882C9A                            ; -------------------------------------------
00882C9A                            ; Set instrument
00882C9A                            ; -------------------------------------------
00882C9A                            
00882C9A                            SMEG_SetVoice:
00882C9A 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00882CA0 6700 0000                  		beq	@Return
00882CA4                            		
00882CA4 0816 0000                  		btst	#bitPriority,(a6)
00882CA8 6700                       		beq.s	@SFX_Mode
00882CAA 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00882CB2 6700                       		beq.s	@SFX_Mode
00882CB4 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00882CBA 7200                        		moveq	#0,d1
00882CBC 122E 0032                   		move.b	LastPattChn(a6),d1
00882CC0 0833 0000 1000             		btst	#0,(a3,d1.w)
00882CC6 6600 0000                  		bne	@Return
00882CCA                            @SFX_Mode:
00882CCA                            
00882CCA 4AAE 0014                  		tst.l	SongVoices(a6)
00882CCE 6700 0000                  		beq	@Return
00882CD2 4A2D 0007                  		tst.b	Chn_ID(a5)
00882CD6 6B00 0000                  		bmi	@Return
00882CDA                            
00882CDA 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
00882CE0 6600                                       bne.s	@NoChk6_Voice
00882CE2 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00882CE8 6600 0000                  		bne	SMEG_SetVoice_DAC
00882CEC                            @NoChk6_Voice:
00882CEC 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00882CF2 6C00 0000                  		bge	SMEG_SetVoice_PCM
00882CF6                            		
00882CF6 7000                       		moveq	#0,d0
00882CF8 102D 0007                  		move.b	Chn_ID(a5),d0
00882CFC 0C00 0004                  		cmp.b	#4,d0
00882D00 6D00                       		blt.s	@Low3
00882D02 0400 0004                  		sub.b	#4,d0
00882D06                            @Low3:
00882D06 266E 0014                  		movea.l	SongVoices(a6),a3
00882D0A 7C00                       		moveq	#0,d6
00882D0C 1C2D 0008                  		move.b	Chn_Inst(a5),d6
00882D10                            @FindNext:
00882D10 4A53                       		tst.w	(a3)
00882D12 6B00 0000                  		bmi	@Return
00882D16 7200                       		moveq	#0,d1
00882D18 322B 0002                  		move.w	2(a3),d1
00882D1C BC53                       		cmp.w	(a3),d6
00882D1E 6700                       		beq.s	@Found
00882D20 D6FC 0008                   		adda.w	#8,a3
00882D24 60EA                       		bra.s	@FindNext
00882D26                            
00882D26                            @Found:
00882D26 D6FC 0004                  		adda.w	#4,a3
00882D2A                            
00882D2A 2653                       		movea.l	(a3),a3
00882D2C C2FC 0019                  		mulu.w	#$19,d1
00882D30 D6C1                       		adda	d1,a3
00882D32                            ; 		tst.w	d1
00882D32                            ; 		beq.s	@Nothing
00882D32                            ; 		sub.w	#1,d1
00882D32                            ; @NextFM:
00882D32                            ; 		adda	#$19,a3
00882D32                            ; 		dbf	d1,@NextFM
00882D32                            
00882D32                            @Nothing:
00882D32 4840                       		swap	d0
00882D34 303C 0028                  		move.w	#$28,d0
00882D38 7200                       		moveq	#0,d1
00882D3A 122D 0007                  		move.b	Chn_ID(a5),d1
00882D3E 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882D50 6100 0000                  		bsr	FM_RegWrite_1
00882D54 4840                       		swap	d0
00882D56                            
00882D56 2D4C 0004                  		move.l	a4,AddrBackup(a6)
00882D5A 49FA 0000                  		lea	SMEG_FM_RegList(pc),a4
00882D5E 3C00                       		move.w	d0,d6
00882D60 7818                       		moveq	#$18,d4
00882D62                            @Next:
00882D62 3A06                       		move.w	d6,d5
00882D64 101C                       		move.b	(a4)+,d0
00882D66 3600                       		move.w	d0,d3
00882D68 D045                       		add.w	d5,d0
00882D6A 121B                       		move.b	(a3)+,d1
00882D6C                            
00882D6C 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
00882D72 6C00                       		bge.s	@Chn456
00882D74 6100 0000                  		bsr	FM_RegWrite_1
00882D78 51CC FFE8                  		dbf	d4,@Next
00882D7C 6000                       		bra.s	@BackZ80
00882D7E                            
00882D7E                            @Chn456:
00882D7E 6100 0000                  		bsr	FM_RegWrite_2
00882D82 51CC FFDE                  		dbf	d4,@Next
00882D86                            @BackZ80:
00882D86 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882D96 286E 0004                  		movea.l	AddrBackup(a6),a4
00882D9A                            @Return:
00882D9A 4E75                       		rts
00882D9C                            
00882D9C                            ; -------------------------------------------
00882D9C                            ; Set FM panning
00882D9C                            ; -------------------------------------------
00882D9C                            
00882D9C                            SMEG_FM_SetPan:
00882D9C 4A2D 0007                  		tst.b	Chn_ID(a5)
00882DA0 6B00                       		bmi.s	@Return
00882DA2                            		
00882DA2 303C 00B4                  		move.w	#$B4,d0
00882DA6 7400                       		moveq	#0,d2
00882DA8 142D 0007                  		move.b	Chn_ID(a5),d2
00882DAC 7200                       		moveq	#0,d1
00882DAE 122D 000C                  		move.b	Chn_Panning(a5),d1
00882DB2                            
00882DB2 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882DC4 0C02 0003                  		cmp.b	#3,d2
00882DC8 6E00                       		bgt.s	@SecondFM
00882DCA D042                       		add.w	d2,d0
00882DCC 6100 0000                  		bsr	FM_RegWrite_1
00882DD0 6000                       		bra.s	@BackZ80
00882DD2                            @SecondFM:
00882DD2 0442 0004                  		sub.w	#4,d2
00882DD6 D042                       		add.w	d2,d0
00882DD8 6100 0000                  		bsr	FM_RegWrite_2
00882DDC                            @BackZ80:
00882DDC 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882DEC                            @Return:
00882DEC 4E75                       		rts
00882DEE                            		
00882DEE                            ; -------------------------------------------
00882DEE                            ; Send DAC
00882DEE                            ; -------------------------------------------
00882DEE                            
00882DEE                            SMEG_SetVoice_DAC:
00882DEE 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00882DF4 6700 0000                  		beq	@Return
00882DF8                            		
00882DF8                            ; 		if SMEG_Z80
00882DF8 266E 0018                  		movea.l	SongSampl(a6),a3
00882DFC 7200                       		moveq	#0,d1
00882DFE 122D 0008                  		move.b	Chn_Inst(a5),d1
00882E02                            
00882E02                            @FindSample:
00882E02 4A53                       		tst.w	(a3)
00882E04 6B00                       		bmi.s	@Return
00882E06 B253                       		cmp.w	(a3),d1
00882E08 6700                       		beq.s	@Found
00882E0A D6FC 0010                   		adda	#$10,a3
00882E0E 60F2                       		bra.s	@FindSample
00882E10                            
00882E10                            @Found:
00882E10 D6FC 0002                  		adda.w	#2,a3
00882E14 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882E26 361B                        		move.w	(a3)+,d3
00882E28 201B                        		move.l	(a3)+,d0
00882E2A 221B                        		move.l	(a3)+,d1
00882E2C 241B                        		move.l	(a3)+,d2
00882E2E 6100                       		bsr.s	SMEG_Z80_LoadWav
00882E30 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882E40 1B44 000E                    		move.b 	d4,Chn_PCM_Pitch(a5)
00882E44                              		
00882E44 7200                       		moveq	#0,d1
00882E46 7400                       		moveq 	#0,d2
00882E48 122D 000B                  		move.b	Chn_Note(a5),d1
00882E4C 142D 000E                    		move.b 	Chn_PCM_Pitch(a5),d2
00882E50 D242                         		add.w	d2,d1
00882E52                                  		
00882E52 ED49                       		lsl.w	#6,d1
00882E54 0641 0200                  		add.w	#$200,d1
00882E58 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882E6A 13C1 00A0 00F6             		move.b	d1,($A000F6)		; ld bc,(NEW ADDRESS)
00882E70 E049                       		lsr.w	#8,d1			;
00882E72 13C1 00A0 00F7             		move.b	d1,($A000F7)		;
00882E78                            
00882E78                            @Return:
00882E78 4E75                       		rts
00882E7A                            
00882E7A                            ; ---------------------------------
00882E7A                            
00882E7A                            SMEG_Z80_LoadWav:
00882E7A 47F9 00A0 01E0             		lea	($A001E0),a3
00882E80 7600                       		moveq	#0,d3
00882E82 7800                       		moveq	#0,d4
00882E84                              		
00882E84                            		;Start
00882E84 4A40                       		tst.w	d0
00882E86 6A00                       		bpl.s	@plus_s
00882E88 383C 0081                  		move.w	#$81,d4
00882E8C                            @plus_s:
00882E8C 4840                       		swap	d0
00882E8E 4844                       		swap	d4
00882E90 1800                       		move.b	d0,d4
00882E92 4844                       		swap	d4
00882E94 4840                       		swap	d0
00882E96 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
00882E98 4844                       		swap	d4
00882E9A 16C4                       		move.b	d4,(a3)+		;		$xx0000
00882E9C 4844                       		swap	d4
00882E9E 16C0                       		move.b	d0,(a3)+		;start Addr	$00xx
00882EA0 E048                       		lsr.w	#8,d0
00882EA2 16C0                       		move.b	d0,(a3)+		;		$xx00
00882EA4                            		
00882EA4                            		;Loop
00882EA4 7800                       		moveq	#0,d4
00882EA6 4A41                       		tst.w	d1
00882EA8 6A00                       		bpl.s	@plus_e
00882EAA 383C 0081                  		move.w	#$81,d4
00882EAE                            @plus_e:
00882EAE 4841                       		swap	d1
00882EB0 4844                       		swap	d4
00882EB2 1801                       		move.b	d1,d4
00882EB4 4844                       		swap	d4
00882EB6 4841                       		swap	d1
00882EB8 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
00882EBA 4844                       		swap	d4
00882EBC 16C4                       		move.b	d4,(a3)+		;		$xx0000
00882EBE 4844                       		swap	d4
00882EC0 16C1                       		move.b	d1,(a3)+		;start Addr	$00xx
00882EC2 E049                       		lsr.w	#8,d1
00882EC4 16C1                       		move.b	d1,(a3)+		;		$xx00
00882EC6                            		
00882EC6                            		;End
00882EC6 7800                       		moveq	#0,d4
00882EC8 4A42                       		tst.w	d2
00882ECA 6A00                       		bpl.s	@plus_l
00882ECC 383C 0081                  		move.w	#$81,d4
00882ED0                            @plus_l:
00882ED0 4842                       		swap	d2
00882ED2 4844                       		swap	d4
00882ED4 1802                       		move.b	d2,d4
00882ED6 4844                       		swap	d4
00882ED8 4842                       		swap	d2
00882EDA 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
00882EDC 4844                       		swap	d4
00882EDE 16C4                       		move.b	d4,(a3)+		;		$xx0000
00882EE0 4844                       		swap	d4
00882EE2 16C2                       		move.b	d2,(a3)+		;start Addr	$00xx
00882EE4 E04A                       		lsr.w	#8,d2
00882EE6 16C2                       		move.b	d2,(a3)+		;		$xx00
00882EE8                            		
00882EE8                            ; 		endif
00882EE8 4E75                       		rts
00882EEA                            
00882EEA                            ; -------------------------------------------
00882EEA                            ; Send PCM/PWM
00882EEA                            ; -------------------------------------------
00882EEA                            
00882EEA                            SMEG_SetVoice_PCM:
00882EEA                               		
00882EEA 4AAE 001C                  		tst.l	SongPcmSamp(a6)
00882EEE 6700                       		beq.s	@FinishList
00882EF0 6B00                       		bmi.s	@FinishList
00882EF2                            		
00882EF2 7200                           		moveq	#0,d1
00882EF4 7400                          		moveq	#0,d2
00882EF6 266E 001C                       		movea.l	SongPcmSamp(a6),a3
00882EFA 122D 0008                      		move.b	Chn_Inst(a5),d1
00882EFE                            @NextPcm:
00882EFE 4A53                            		tst.w	(a3)
00882F00 6B00                            		bmi.s	@GiveUp
00882F02 1413                            		move.b	(a3),d2
00882F04 B401                            		cmp.b	d1,d2
00882F06 6700                            		beq.s	@FoundPcm
00882F08 D6FC 0002                       		adda	#2,a3
00882F0C 60F0                            		bra.s	@NextPcm
00882F0E                            @FoundPcm:
00882F0E 122B 0001                    		move.b	1(a3),d1
00882F12                            @GiveUp:
00882F12 0441 0001                     		sub.w	#1,d1
00882F16 7400                          		moveq	#0,d2
00882F18 142D 0007                     		move.b	Chn_ID(a5),d2
00882F1C 0242 000F                     		and.w	#$F,d2
00882F20 13C2 00A1 5122                		move.b	d2,(marsreg+comm2)
00882F26 13C1 00A1 5123               		move.b	d1,(marsreg+comm2+1)
00882F2C 7003                        		moveq 	#marscall_SetSmpl,d0
00882F2E 6100 FD60                   		bsr	SMEG_MARS_Call
00882F32                              		
00882F32                            @FinishList:
00882F32 4E75                       		rts
00882F34                            		
00882F34                            ; -------------------------------------------
00882F34                            ; Reset FM
00882F34                            ; -------------------------------------------
00882F34                            
00882F34                            SMEG_FM_Reset:
00882F34 33FC 0100 00A1 1100 0839+  		Z80_OFF
00882F46                            
00882F46 7028                       		moveq	#$28,d0
00882F48 7200                       		moveq	#0,d1
00882F4A 6100 0000                  		bsr	FM_RegWrite_1
00882F4E 7028                       		moveq	#$28,d0
00882F50 7201                       		moveq	#1,d1
00882F52 6100 0000                  		bsr	FM_RegWrite_1
00882F56 7028                       		moveq	#$28,d0
00882F58 7202                       		moveq	#2,d1
00882F5A 6100 0000                  		bsr	FM_RegWrite_1
00882F5E 7028                       		moveq	#$28,d0
00882F60 7204                       		moveq	#4,d1
00882F62 6100 0000                  		bsr	FM_RegWrite_1
00882F66 7028                       		moveq	#$28,d0
00882F68 7205                       		moveq	#5,d1
00882F6A 6100 0000                  		bsr	FM_RegWrite_1
00882F6E 7028                       		moveq	#$28,d0
00882F70 7206                       		moveq	#6,d1
00882F72 6100 0000                  		bsr	FM_RegWrite_1
00882F76                            
00882F76 13FC 002A 00A0 4000 33FC+  		Z80_ON
00882F86 4E75                       		rts
00882F88                            
00882F88                            ; -------------------------------------------
00882F88                            ; Find FM
00882F88                            ; -------------------------------------------
00882F88                            
00882F88                            SMEG_FM_FindWrite:
00882F88 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
00882F8E 6C00                       		bge.s	@Second
00882F90 6100 0000                  		bsr	FM_RegWrite_1
00882F94 4E75                       		rts
00882F96                            @Second:
00882F96 6100 0000                  		bsr	FM_RegWrite_2
00882F9A 4E75                       		rts
00882F9C                            
00882F9C                            ; -------------------------------------------
00882F9C                            ; Write to FM register
00882F9C                            ; -------------------------------------------
00882F9C                            
00882F9C                            FM_RegWrite_1:
00882F9C 1439 00A0 4000             		move.b	($A04000).l,d2
00882FA2 0802 0007                  		btst	#7,d2
00882FA6 66F4                       		bne.s	FM_RegWrite_1
00882FA8 13C0 00A0 4000             		move.b	d0,($A04000).l
00882FAE                            @Loop:
00882FAE 1439 00A0 4000             		move.b	($A04000).l,d2
00882FB4 0802 0007                  		btst	#7,d2
00882FB8 66F4                       		bne.s	@Loop
00882FBA 13C1 00A0 4001             		move.b	d1,($A04001).l
00882FC0 4E75                       		rts
00882FC2                            
00882FC2                            FM_RegWrite_2:
00882FC2 1439 00A0 4000             		move.b	($A04000).l,d2
00882FC8 0802 0007                  		btst	#7,d2
00882FCC 66CE                       		bne.s	FM_RegWrite_1
00882FCE 13C0 00A0 4002             		move.b	d0,($A04002).l
00882FD4                            @Loop:
00882FD4 1439 00A0 4000             		move.b	($A04000).l,d2
00882FDA 0802 0007                  		btst	#7,d2
00882FDE 66F4                       		bne.s	@Loop
00882FE0 13C1 00A0 4003             		move.b	d1,($A04003).l
00882FE6 4E75                       		rts
00882FE8                            		
00882FE8                            ; -----------------------
00882FE8                            ; Setup channels
00882FE8                            ; -----------------------
00882FE8                            
00882FE8                            SMEG_Load_SetChnls:
00882FE8 286E 0008                  		movea.l	SongRequest(a6),a4				;a4 - Music data
00882FEC 3D6E 0020 0024             		move.w	TicksRequest(a6),TicksSet(a6)
00882FF2                            
00882FF2                            ; -----------------------
00882FF2                            ; Get instruments
00882FF2                            ; -----------------------
00882FF2                            
00882FF2 2D5C 0014                  		move.l	(a4)+,SongVoices(a6)
00882FF6 2D5C 0018                  		move.l	(a4)+,SongSampl(a6)
00882FFA 2D5C 001C                  		move.l	(a4)+,SongPcmSamp(a6)
00882FFE                            	
00882FFE                            ; -----------------------
00882FFE                            ; Get the
00882FFE                            ; PatternEnd/PatternLoop
00882FFE                            ; numbers
00882FFE                            ; -----------------------
00882FFE                            
00882FFE 1D5C 0002                  		move.b	(a4)+,PatternEnd(a6)
00883002 1D5C 0003                  		move.b	(a4)+,PatternLoop(a6)
00883006                            
00883006                            ; -----------------------
00883006                            ; Setup the channel IDs
00883006                            ; -----------------------
00883006                            
00883006 7011                       		moveq	#(MaxChannels)-1,d0
00883008                            @SetId:
00883008 1B7C 0001 0006             		move.b	#1,Chn_Type(a5)
0088300E 1B5C 0007                  		move.b	(a4)+,Chn_ID(a5)
00883012 426D 0000                  		clr.w	Chn_Freq(a5)
00883016                            		
00883016 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
0088301C 6700                       		beq.s	@Disabled
0088301E 4A2D 0007                  		tst.b	Chn_ID(a5)
00883022 6A00                       		bpl.s	@NotPSG
00883024                            		
00883024 7200                         		moveq	#0,d1
00883026 122D 0007                    		move.b	Chn_ID(a5),d1
0088302A 0641 001F                    		add.w	#$1F,d1
0088302E 13C1 00C0 0011              		move.b	d1,($C00011).l
00883034                            @NotPSG:
00883034 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
0088303A 6C00                        		bge.s	@Disabled
0088303C                             		
0088303C 1B7C 000F 000D              		move.b	#%00001111,Chn_FM_Key(a5)
00883042 1B7C 00C0 000C              		move.b	#$C0,Chn_Panning(a5)
00883048                            
00883048                            @Disabled:
00883048 DAFC 0010                  		adda 	#sizeof_Chn,a5
0088304C 51C8 FFBA                  		dbf	d0,@SetId
00883050                             		
00883050                            ; -----------------------
00883050                            ; Master volumes
00883050                            ; -----------------------
00883050                            
00883050 7011                       		moveq	#(MaxChannels)-1,d0
00883052                            @SetVol:
00883052 1B5C 000A                  		move.b	(a4)+,Chn_DefVol(a5)
00883056 DAFC 0010                  		adda 	#sizeof_Chn,a5
0088305A 51C8 FFF6                  		dbf	d0,@SetVol
0088305E                            
0088305E                            ; -----------------------
0088305E                            ; last steps
0088305E                            ; -----------------------
0088305E                            
0088305E 2D4C 000C                  		move.l	a4,SongStart(a6)
00883062 1D5C 0029                  		move.b	(a4)+,PattSize+1(a6)
00883066 1D5C 0028                  		move.b	(a4)+,PattSize(a6)
0088306A 426E 002A                  		clr.w	PattRead(a6)
0088306E D8FC 0006                  		adda	#6,a4
00883072 2D4C 0010                  		move.l	a4,SongRead(a6)
00883076 4E75                       		rts
00883078                            		
00883078                            ; -----------------------
00883078                            ; Fix stuff to BGM
00883078                            ; -----------------------
00883078                            
00883078                            SMEG_Load_FixBgm:
00883078 4BF9 FFFF D960             		lea	(RAM_SMEG_Chnls_BGM),a5
0088307E 7811                       		moveq	#(MaxChannels)-1,d4
00883080                            @SetId:
00883080 1B7C 0080 000C             		move.b	#$80,Chn_Panning(a5)
00883086                            
00883086 4A2D 0007                  		tst.b	Chn_ID(a5)
0088308A 6B00                       		bmi.s	@NotFM
0088308C 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00883092 6C00                       		bge.s	@NotFM
00883094                            
00883094 422D 000D                  		clr.b	Chn_FM_Key(a5)
00883098 1B7C 000F 000D             		move.b	#%00001111,Chn_FM_Key(a5)
0088309E 1B7C 00C0 000C             		move.b	#$C0,Chn_Panning(a5)
008830A4 6100 FCF6                  		bsr	SMEG_FM_SetPan
008830A8                            @NotFM:
008830A8 DAFC 0010                  		adda 	#sizeof_Chn,a5
008830AC 51CC FFD2                  		dbf	d4,@SetId
008830B0                            		
008830B0 33FC 0100 00A1 1100 0839+  		Z80_OFF
008830C2 702B                       		moveq	#$2B,d0
008830C4 7200                                       moveq	#0,d1
008830C6 6100 FED4                    		bsr	FM_RegWrite_1
008830CA                              		
008830CA 7000                       		moveq	#0,d0
008830CC 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
008830D2 13FC 002A 00A0 4000 33FC+  		Z80_ON
008830E2                            		
008830E2 4E75                       		rts
008830E4                            		
008830E4                            ; -----------------------
008830E4                            ; Exclusive features
008830E4                            ;
008830E4                            ; TODO: creo que es
008830E4                            ; mala idea hacer esperar
008830E4                            ; al VBlank ya que moví
008830E4                            ; la rutina esta
008830E4                            ; -----------------------
008830E4                            
008830E4                            SMEG_Load_SetExtChnls:
008830E4                            		
008830E4 4DF9 FFFF D8E2               		lea	(RAM_SMEG_Buffer),a6
008830EA 4AAE 001C                    		tst.l	SongPcmSamp(a6)
008830EE 6700                          		beq.s	@Return
008830F0                              		
008830F0 2A6E 001C                     		movea.l	SongPcmSamp(a6),a5
008830F4 7200                          		moveq	#0,d1
008830F6                            @NextSamp:
008830F6 4A55                           		tst.w	(a5)
008830F8 6B00                           		bmi.s	@Finish
008830FA                            
008830FA 23DD 00A1 512C                 		move.l	(a5)+,(marsreg+comm12)		;Sample addr (start/end)
00883100 33DD 00A1 512A                 		move.w	(a5)+,(marsreg+comm10)		;Sample loop
00883106 301D                           		move.w	(a5)+,d0
00883108 13C0 00A1 5123                 		move.b	d0,(marsreg+comm2+1)		;Note transpose
0088310E 13C1 00A1 5122                 		move.b	d1,(marsreg+comm2)		;Sample slot
00883114 7005                          		moveq	#marscall_SetEntry,d0
00883116 6100 FB78                     		bsr	SMEG_MARS_Call
0088311A                                   		
0088311A 0641 0001                          	add.w	#1,d1
0088311E 60D6                        		bra.s	@NextSamp
00883120                            @Finish:
00883120 DAFC 0002                    		adda	#2,a5
00883124 2D4D 001C                    		move.l	a5,SongPcmSamp(a6)		;Second list		
00883128                            		
00883128                            @Return:
00883128 4E75                       		rts
0088312A                            		
0088312A                            ; -------------------------------------------
0088312A                            ; Reset PSG
0088312A                            ; -------------------------------------------
0088312A                            
0088312A                            SMEG_PSG_Reset:
0088312A 13FC 009F 00C0 0011        		move.b	#$9F,($C00011).l
00883132 13FC 00BF 00C0 0011        		move.b	#$BF,($C00011).l
0088313A 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
00883142 13FC 00FF 00C0 0011        		move.b	#$FF,($C00011).l
0088314A 4E75                       		rts
0088314C                            
0088314C                            ; -------------------------------------------
0088314C                            ; Reset PCM
0088314C                            ; -------------------------------------------
0088314C                            
0088314C                            SMEG_PCM_Reset:
0088314C 4AAE 001C                  		tst.l	SongPcmSamp(a6)
00883150 6700                       		beq.s	@NoResetPCM
00883152 6B00 0000                  		bmi	@NoResetPCM
00883156                            		
00883156                            		
00883156 13FC 0000 00A1 5122          		move.b	#0,(marsreg+comm2)
0088315E 7002                         		moveq	#marscall_Stop,d0
00883160 6100 FB2E                    		bsr	SMEG_MARS_Call
00883164 13FC 0001 00A1 5122          		move.b	#1,(marsreg+comm2)
0088316C 7002                         		moveq	#marscall_Stop,d0
0088316E 6100 FB20                    		bsr	SMEG_MARS_Call
00883172 13FC 0002 00A1 5122          		move.b	#2,(marsreg+comm2)
0088317A 7002                         		moveq	#marscall_Stop,d0
0088317C 6100 FB12                    		bsr	SMEG_MARS_Call
00883180 13FC 0003 00A1 5122           		move.b	#3,(marsreg+comm2)
00883188 7002                         		moveq	#marscall_Stop,d0
0088318A 6100 FB04                    		bsr	SMEG_MARS_Call
0088318E 13FC 0004 00A1 5122           		move.b	#4,(marsreg+comm2)
00883196 7002                         		moveq	#marscall_Stop,d0
00883198 6100 FAF6                    		bsr	SMEG_MARS_Call
0088319C 13FC 0005 00A1 5122          		move.b	#5,(marsreg+comm2)
008831A4 7002                         		moveq	#marscall_Stop,d0
008831A6 6100 FAE8                    		bsr	SMEG_MARS_Call
008831AA 13FC 0006 00A1 5122          		move.b	#6,(marsreg+comm2)
008831B2 7002                         		moveq	#marscall_Stop,d0
008831B4 6100 FADA                    		bsr	SMEG_MARS_Call
008831B8 13FC 0007 00A1 5122          		move.b	#7,(marsreg+comm2)
008831C0 7002                         		moveq	#marscall_Stop,d0
008831C2 6100 FACC                    		bsr	SMEG_MARS_Call
008831C6                              		
008831C6                            
008831C6                            @NoResetPCM:
008831C6 4E75                       		rts
008831C8                            
008831C8                            ; ================================================================
008831C8                            ; -------------------------------------------------
008831C8                            ; Data
008831C8                            ; -------------------------------------------------
008831C8                            
008831C8                            SMEG_FM_RegList:
008831C8 B0                         		dc.b $B0
008831C9 3038 343C                  		dc.b $30,$38,$34,$3C
008831CD 5058 545C                  		dc.b $50,$58,$54,$5C
008831D1 6068 646C                  		dc.b $60,$68,$64,$6C
008831D5 7078 747C                  		dc.b $70,$78,$74,$7C
008831D9 8088 848C                  		dc.b $80,$88,$84,$8C
008831DD 4048 444C                  		dc.b $40,$48,$44,$4C
008831E1                            SMEG_RegSetVol:
008831E2 00                         		even
008831E2                            	
008831E2                            ; ---------------------------------------------------
008831E2                            
008831E2                            Z80_Driver:	incbin	"engine/sound/data/z80/main.bin"
008845E2                            Z80_DriverEnd:
008845E2                            		even
008845E2                            		
008845E2                            		
008845E2                            	
008845E2                            ; ====================================================================
008845E2                            
008845E2                              		objend
000045E2                            		inform 0,"*** MARS 68k IPL SIZE:  %h of 7FFFF ***",*	;MAX: $7FFFF
000045E2                               		obj *+marsbank
009045E2                               		
009045E2                            ; ====================================================================
009045E2                            ; ---------------------------------------------
009045E2                            ; Data | Shared
009045E2                            ; ---------------------------------------------
009045E2                            
009045E2                            		include	"engine/shared/main.asm"
009045E2                            ; ====================================================================
009045E2                            ; Shared Data
009045E2                            ; ====================================================================
009045E2                            
009045E2                            Art_TempFont:	incbin	"engine/shared/data/art_dbgfont.bin",0,($20*96)
009051E2                            Art_TempFont_End:
009051E2                            		even
009051E2                            
009051E2                            ; 		if SegaCD
009051E2                            ; Pal_StampsTest:	incbin	"engine/misc/stamptest/pal.bin"
009051E2                            ; 		even
009051E2                            ; Map_StampsTest:	dc.w ((@End-Map_StampsTest)/2)-1
009051E2                            ; 		incbin	"engine/misc/stamptest/map.bin"
009051E2                            ; @End:
009051E2                            ; 		even
009051E2                            ; 		endif
009051E2                            ; 		endif
009051E2                            		
009051E2                            ; ---------------------------------------------
009051E2                            ; Data | Modes
009051E2                            ; ---------------------------------------------
009051E2                            
009051E2                            ; 		include	"engine/modes/level/data/main.asm"
009051E2                            		include	"engine/modes/title/data/main.asm"
009051E2                            ; =================================================================
009051E2                            ; ------------------------------------------------
009051E2                            ; Data
009051E2                            ; ------------------------------------------------
009051E2                            
009051E2 0000                       Art_Title_BG:	dc.w ((@End-Art_Title_BG)/4)-1
009051E4                            		incbin	"engine/modes/Title/data/bg_art.bin"
0090B544                            @End:
0090B544                            		even
0090B544 0000                       Art_Title:	dc.w ((@End-Art_Title)/4)-1
0090B546                            		incbin	"engine/modes/Title/data/art.bin"
0090D6E6                            @End:
0090D6E6                            		even
0090D6E6                            		
0090D6E6                            		
0090D6E6                            Pal_Title_BG:	incbin	"engine/modes/Title/data/bg_pal.bin"
0090D706                            @End:
0090D706                            		even
0090D706                            Map_Title_BG:	incbin	"engine/modes/Title/data/bg_map.bin"
0090DFC6                            		even
0090DFC6                            		
0090DFC6                            
0090DFC6                            
0090DFC6                            Pal_Title:	incbin	"engine/modes/Title/data/pal.bin"
0090DFE6                            @End:
0090DFE6                            		even
0090DFE6                            Map_Title:	incbin	"engine/modes/Title/data/map.bin"
0090E8A6                            		even
0090E8A6                            		even
0090E8A6                            		
0090E8A6                            ; ---------------------------------------------
0090E8A6                            ; Data | Sound
0090E8A6                            ; ---------------------------------------------
0090E8A6                            
0090E8A6                            		include	"engine/sound/data/main.asm"
0090E8A6                            ; ================================================================
0090E8A6                            ; User data
0090E8A6                            ; ================================================================
0090E8A6                             		
0090E8A6                            ; ================================================================	
0090E8A6                            ; ***************************************************
0090E8A6                            ; FM Voices
0090E8A6                            ; ***************************************************
0090E8A6                            
0090E8A6                            ; ins_piano_casino:
0090E8A6                            ;    		incbin	"engine/sound/data/instruments/old/piano/piano_real.bin"
0090E8A6                            ;    		even
0090E8A6                            
0090E8A6                            ; ins_piano_80s:
0090E8A6                            ;   		incbin	"engine/sound/data/instruments/old/piano/piano_80s.bin"
0090E8A6                            ;   		even
0090E8A6                            ins_piano_generic:
0090E8A6                               		incbin	"engine/sound/data/instruments/old/piano/piano_generic.bin"
0090E8C0 00                             		even
0090E8C0                            ins_piano_real:
0090E8C0                                		incbin	"engine/sound/data/instruments/old/piano/piano_real.bin"
0090E8DA 00                             		even
0090E8DA                            ins_piano_small:
0090E8DA                               		incbin	"engine/sound/data/instruments/old/piano/piano_small.bin"
0090E8F4 00                            		even
0090E8F4                            ins_piano_rave:
0090E8F4                              		incbin	"engine/sound/data/instruments/old/piano/piano_rave.bin"
0090E90E 00                             		even
0090E90E                            ; ; 
0090E90E                            ; ; ; ----------------------------------------
0090E90E                            ; ; 
0090E90E                            ins_bass_techno:
0090E90E                                		incbin	"engine/sound/data/instruments/old/bass/bass_techno.bin"
0090E928 00                             		even
0090E928                            ins_brass_funny:
0090E928                               		incbin	"engine/sound/data/instruments/old/brass/brass_funny.bin"
0090E942 00                            		even
0090E942                            ins_brass_2:
0090E942                               		incbin	"engine/sound/data/instruments/old/brass/brass_2.bin"
0090E95C 00                            		even
0090E95C                            ; ; ins_fmdrum_kick:
0090E95C                            ; ;  		incbin	"engine/sound/data/instruments/old/drums/fm_kick.bin"
0090E95C                            ; ;  		even
0090E95C                            ins_fmdrum_closedhat:
0090E95C                               		incbin	"engine/sound/data/instruments/old/drums/fm_openhat.bin"
0090E976 00                            		even
0090E976                            ; ;  		
0090E976                            
0090E976                            ; ; ; ----------------------------------------
0090E976                            ; ; 
0090E976                            ; ; ins_bell_test:
0090E976                            ; ;  		incbin	"engine/sound/data/instruments/old/bell/bell_xmas.bin"
0090E976                            ; ;  		even
0090E976                            ; ; 
0090E976                            ; ; ; ----------------------------------------
0090E976                            ; ; 
0090E976                            ins_fx_echo:
0090E976                              		incbin	"engine/sound/data/instruments/old/fx/ecco_thelagoon.bin"
0090E9F4 00                           		even
0090E9F4                            	
0090E9F4                            ins_kid_1:  	incbin	"engine/sound/data/instruments/old/old/kid/patch_01.smps"
0090EA0E 00                            		even
0090EA0E                            ins_kid_2:  	incbin	"engine/sound/data/instruments/old/old/kid/patch_02.smps"
0090EA28 00                            		even
0090EA28                              	
0090EA28                              	
0090EA28                            ins_trumpet:
0090EA28                            		incbin	"engine/sound/data/instruments/old/old/trumpet_generic.bin"
0090EA42 00                            		even
0090EA42                             
0090EA42                            ins_bass_heavy:
0090EA42                            		incbin	"engine/sound/data/instruments/old/bass/bass_heavy_1.bin"
0090EA5C 00                            		even
0090EA5C                               		
0090EA5C                            inspack_socket:
0090EA5C                            		incbin	"engine/sound/data/instruments/old/old/socket_voiceset.bin"
0090EE90 00                            		even
0090EE90                               		
0090EE90                            ; ================================================================	
0090EE90                            ; ***************************************************
0090EE90                            ; Music
0090EE90                            ; ***************************************************
0090EE90                             	
0090EE90                            ; MainTheme:
0090EE90                            ;   		dc.l @Voices,@Samples,0
0090EE90                            ;    		dc.b 33,6
0090EE90                            ;   		dc.b  FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
0090EE90                            ;   		dc.b PSG_1,PSG_2,PSG_3,NOISE
0090EE90                            ;   		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0090EE90                            ;   		dcb.b $12,$00
0090EE90                            ;    		incbin "engine/sound/data/music/song1.it",$50+$2E63
0090EE90                            ;    		even
0090EE90                            ; @Voices:
0090EE90                            ;   		dc.w 4,0
0090EE90                            ;     		dc.l ins_fmdrum_closedhat
0090EE90                            ;     		dc.w 6,0
0090EE90                            ;     		dc.l ins_bass_techno
0090EE90                            ;     		dc.w 7,0
0090EE90                            ;    		dc.l ins_brass_funny
0090EE90                            ;      		dc.w 9,0
0090EE90                            ;      		dc.l ins_fx_echo 
0090EE90                            ;   		dc.w $FFFF
0090EE90                            ;   		even
0090EE90                            ; @Samples:
0090EE90                            ;    		dc.w 1,0
0090EE90                            ;    		dc.l samp_Kick
0090EE90                            ;    		dc.l samp_Kick_end
0090EE90                            ;    		dc.l samp_Kick
0090EE90                            ;    		dc.w 2,0
0090EE90                            ;    		dc.l samp_Snare
0090EE90                            ;    		dc.l samp_Snare_end
0090EE90                            ;    		dc.l samp_Snare
0090EE90                            ;    		dc.w 3,0
0090EE90                            ;    		dc.l samp_Tom
0090EE90                            ;    		dc.l samp_Tom_end
0090EE90                            ;    		dc.l samp_Tom
0090EE90                            ;   		dc.w $FFFF
0090EE90                            ;   		even
0090EE90                            ;  
0090EE90                            ; @ExSampl:
0090EE90                            ;      		dc.w -1
0090EE90                            ;      		dc.w -1
0090EE90                            ;    		even
0090EE90                            
0090EE90                            ; -------------------------------------
0090EE90                            
0090EE90                            song_Lyle:
0090EE90 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,0
0090EE9C 1203                          		dc.b 18,3
0090EE9E 0001 0204 0506               		dc.b  FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
0090EEA4 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
0090EEA8 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0090EEB0 0000 0000 0000 0000 0000+    		dcb.b $12,$00
0090EEC2                               		incbin "engine/sound/data/music/something.it",$50+$1150+$10
0091428A                               		even
0091428A                            @Voices:
0091428A                            ;     		dc.w 8,0
0091428A                            ;      		dc.l ins_fmdrum_closedhat
0091428A 0001 0000                      		dc.w 1,0
0091428E 0090 EA42                       		dc.l ins_bass_heavy
00914292 0003 0000                        		dc.w 3,0
00914296 0090 EA28                       		dc.l ins_trumpet
0091429A                            ;      		dc.w 9,0
0091429A                            ;      		dc.l ins_fx_echo 
0091429A FFFF                         		dc.w $FFFF
0091429C                              		even
0091429C                            @Samples:
0091429C 0005 0000                     		dc.w 5,0
009142A0 0000 0000                      		dc.l samp_Kick
009142A4 0000 0000                      		dc.l samp_Kick_end
009142A8 0000 0000                      		dc.l samp_Kick
009142AC 0006 0000                      		dc.w 6,0
009142B0 0000 0000                      		dc.l samp_Snare
009142B4 0000 0000                      		dc.l samp_Snare_end
009142B8 0000 0000                      		dc.l samp_Snare
009142BC FFFF                         		dc.w $FFFF
009142BE                              		even
009142BE                             
009142BE                            @ExSampl:
009142CE FFFF                            		dc.w -1
009142D0 0C01                              		dc.b 12,1
009142D2 0202                              		dc.b 2,2	
009142D4 FFFF                            		dc.w -1
009142D6                               		even
009142D6                               		
009142D6                            ; ---------------------------------------------------
009142D6                             
009142D6                            ; Tempo: 7
009142D6                            
009142D6                            TestSong:
009142D6 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
009142E2 0A00                          		dc.b 10,0
009142E4 0001 0204 0506               		dc.b FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
009142EA 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
009142EE 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
009142F6 0000 0000 0000 0000 0000+    		dcb.b $12,$00
00914308                               		incbin "engine/sound/data/music/sound-beim-laden.it",$50+$2C28+$18
009171FA                               		even
009171FA                            @Voices:
009171FA 0002 0000                        		dc.w 2,0
009171FE 0090 EA42                       		dc.l ins_bass_heavy
00917202 0005 0000                        		dc.w 5,0
00917206 0090 E95C                      		dc.l ins_fmdrum_closedhat
0091720A 0006 0012                        		dc.w 6,$12
0091720E 0090 EA5C                       		dc.l inspack_socket
00917212 FFFF                         		dc.w $FFFF
00917214                              		even
00917214                            @Samples:
00917214 0001 0000                     		dc.w 1,0
00917218 0000 0000                      		dc.l samp_TechnoKick
0091721C 0000 0000                      		dc.l samp_TechnoKick_end
00917220 0000 0000                      		dc.l samp_TechnoKick
00917224 0007 0000                     		dc.w 7,0
00917228 0000 0000                      		dc.l samp_TechnoKick
0091722C 0000 0000                      		dc.l samp_TechnoKick_end
00917230 0000 0000                      		dc.l samp_TechnoKick
00917234 0003 0000                     		dc.w 3,0
00917238 0000 0000                      		dc.l samp_TechnoSnare
0091723C 0000 0000                      		dc.l samp_TechnoSnare_end
00917240 0000 0000                      		dc.l samp_TechnoSnare
00917244 FFFF                         		dc.w $FFFF
00917246                              		even
00917246                             
00917246                            @ExSampl:
00917256 FFFF                             		dc.w -1
00917258 0A02                             		dc.b 10,2
0091725A 0B01                              		dc.b 11,1
0091725C FFFF                             		dc.w -1
0091725E                                		even
0091725E                               	
0091725E                            ; ---------------------------------------------------
0091725E                            
0091725E                            ; Tempo: 12
0091725E                            
0091725E                            TestSong_2:
0091725E 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
0091726A 1500                          		dc.b 21,0
0091726C 0001 0204 0506               		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
00917272 80A0 C0FF                    		dc.b PSG_1,PSG_2,PSG_3,-1
00917276 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0091727E 0000 0000 0000 0000 0000+    		dcb.b $12,$00
00917290                               		incbin "engine/sound/data/music/klu_pian.it",$50+$383+8
00919178                               		even
00919178                            @Voices:
00919178 0001 0000                      		dc.w 1,0
0091917C 0090 E8C0                        		dc.l ins_piano_real
00919180 FFFF                         		dc.w -1
00919182                              		even
00919182                              		
00919182                            @Samples:
00919182 FFFF                         		dc.w -1
00919184                              		even
00919184                             
00919184                            @ExSampl:
0091918C FFFF                         		dc.w -1
0091918E FFFF                         		dc.w -1
00919190                              		even
00919190                              		
00919190                            ; ---------------------------------------------------
00919190                            
00919190                            ; Tempo: 12
00919190                            
00919190                            TestSong_3:
00919190 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
0091919C 0B00                          		dc.b 11,0
0091919E 0001 0204 0506               		dc.b FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
009191A4 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
009191A8 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
009191B0 0000 0000 0000 0000 0000+    		dcb.b $12,$00
009191C2                            ;    		incbin "engine/sound/data/music/doremifa.it",$184F+$50
009191C2                                		incbin "engine/sound/data/music/light.it",$1E71+$50+$10
0091BFFA 00                            		even
0091BFFA                            @Voices:
0091BFFA 0001 0000                        		dc.w 1,0
0091BFFE 0090 E8F4                       		dc.l ins_piano_rave
0091C002 0002 0000                        		dc.w 2,0
0091C006 0090 E90E                       		dc.l ins_bass_techno
0091C00A 000C 0000                        		dc.w 12,0
0091C00E 0090 E928                       		dc.l ins_brass_funny
0091C012 FFFF                         		dc.w $FFFF
0091C014                              		even
0091C014                            @Samples:
0091C014 0001 0000                     		dc.w 1,0
0091C018 0000 0000                      		dc.l samp_Snare
0091C01C 0000 0000                      		dc.l samp_Snare_end
0091C020 0000 0000                      		dc.l samp_Snare
0091C024 FFFF                         		dc.w $FFFF
0091C026                              		even
0091C026                             
0091C026                            @ExSampl:
0091C02E FFFF                            		dc.w -1
0091C030 0301                            		dc.b 3,1
0091C032 0401                            		dc.b 4,1
0091C034 0D01                            		dc.b 13,1
0091C036 FFFF                            		dc.w -1
0091C038                               		even
0091C038                            
0091C038                            
0091C038                            ; ---------------------------------------------------
0091C038                            
0091C038                            TestSong_4:
0091C038 0000 0000 0000 0000 0000+   		dc.l @Voices,@Samples,@ExSampl
0091C044 0D01                         		dc.b 13,1
0091C046 0001 0204 0506              		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
0091C04C 80A0 C0E0                   		dc.b PSG_1,PSG_2,PSG_3,NOISE
0091C050 1011 1213 1415 1617         		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0091C058 0000 0000 0000 0000 0000+   		dcb.b $12,$00
0091C06A                              		incbin "engine/sound/data/music/yuki.it",$50+$39E9+$18
0091F2F6                              		even
0091F2F6                            @Voices:
0091F2F6 0008 0000                     		dc.w 8,0
0091F2FA 0090 E95C                      		dc.l ins_fmdrum_closedhat
0091F2FE 0003 0000                     		dc.w 3,0
0091F302 0090 E90E                      		dc.l ins_bass_techno
0091F306 0006 0000                      		dc.w 6,0
0091F30A 0090 E8C0                     		dc.l ins_piano_real
0091F30E                            ;     		dc.w 9,0
0091F30E                            ;     		dc.l ins_fx_echo 
0091F30E FFFF                        		dc.w $FFFF
0091F310                             		even
0091F310                            @Samples:
0091F310 0004 0000                    		dc.w 4,0
0091F314 0000 0000                     		dc.l samp_Kick
0091F318 0000 0000                     		dc.l samp_Kick_end
0091F31C 0000 0000                     		dc.l samp_Kick
0091F320 0001 0000                     		dc.w 1,0
0091F324 0000 0000                     		dc.l samp_Snare
0091F328 0000 0000                     		dc.l samp_Snare_end
0091F32C 0000 0000                     		dc.l samp_Snare
0091F330 0010 0000                     		dc.w 16,0
0091F334 0000 0000                     		dc.l samp_Tom
0091F338 0000 0000                     		dc.l samp_Tom_end
0091F33C 0000 0000                     		dc.l samp_Tom
0091F340 0012 0000                     		dc.w 18,0
0091F344 0000 0000                     		dc.l samp_Tom
0091F348 0000 0000                     		dc.l samp_Tom_end
0091F34C 0000 0000                     		dc.l samp_Tom
0091F350 FFFF                        		dc.w $FFFF
0091F352                             		even
0091F352                            
0091F352                            @ExSampl:
0091F362 FFFF                         		dc.w -1
0091F364 0201                            		dc.b 2,1
0091F366 0C02                            		dc.b 12,2		
0091F368 FFFF                         		dc.w -1
0091F36A                              		even
0091F36A                            ;  		
0091F36A                            ; ---------------------------------------------------
0091F36A                            
0091F36A                            SmegSong_Title:
0091F36A 0000 0000 0000 0000 0000+    		dc.l @Voices,0,@ExSampl
0091F376 0101                           		dc.b 1,1
0091F378 0001 0204 0506                		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
0091F37E 80A0 C0E0                     		dc.b PSG_1,PSG_2,PSG_3,NOISE	
0091F382 1011 1213 1415 1617            		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0091F38A 0000 0000 0000 0000 0000+     		dcb.b $12,$00
0091F39C                                		incbin "engine/sound/data/music/title.it",$50+$1677+$10
0091F5AA 00                             		even
0091F5AA                            @Voices:
0091F5AA                            ; ;     		dc.w 8,0
0091F5AA                            ; ;      		dc.l ins_fmdrum_closedhat
0091F5AA                            ; ;     		dc.w 3,0
0091F5AA                            ; ;      		dc.l ins_bass_techno
0091F5AA                            ; ;      		dc.w 1,0
0091F5AA                            ; ;     		dc.l ins_piano_real
0091F5AA 0001 0000                        		dc.w 1,0
0091F5AE 0090 E976                         		dc.l ins_fx_echo 
0091F5B2 FFFF                          		dc.w $FFFF
0091F5B4                               		even
0091F5B4                            ; @Samples:
0091F5B4                            ;    		dc.w 4,0
0091F5B4                            ;     		dc.l samp_Kick
0091F5B4                            ;     		dc.l samp_Kick_end
0091F5B4                            ;     		dc.l samp_Kick
0091F5B4                            ;     		dc.w 1,0
0091F5B4                            ;     		dc.l samp_Snare
0091F5B4                            ;     		dc.l samp_Snare_end
0091F5B4                            ;     		dc.l samp_Snare
0091F5B4                            ;     		dc.w 16,0
0091F5B4                            ;     		dc.l samp_Tom
0091F5B4                            ;     		dc.l samp_Tom_end
0091F5B4                            ;     		dc.l samp_Tom
0091F5B4                            ;     		dc.w 18,0
0091F5B4                            ;     		dc.l samp_Tom
0091F5B4                            ;     		dc.l samp_Tom_end
0091F5B4                            ;     		dc.l samp_Tom
0091F5B4                            ;   		dc.w $FFFF
0091F5B4                            ;   		even
0091F5B4                            ;  
0091F5B4                            @ExSampl:
0091F5BC FFFF                            		dc.w -1
0091F5BE 0101                              		dc.b 1,1		
0091F5C0 FFFF                            		dc.w -1
0091F5C2                               		even
0091F5C2                             		
0091F5C2                            ; ================================================================
0091F5C2                            ; ***************************************************
0091F5C2                            ; SFX
0091F5C2                            ; ***************************************************
0091F5C2                            
0091F5C2                            sfx_CharJump:
0091F5C2 0000 0000 0000 0000 0000+  		dc.l 0,0,0
0091F5CE 0101                        		dc.b 1,1
0091F5D0 FFFF FFFF FFFF                		dc.b -1,-1,-1,-1,-1,-1
0091F5D6 FFFF FFE0                     		dc.b -1,-1,-1,NOISE	
0091F5DA FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
0091F5E2 0000 0000 0000 0000 0000+  		dcb.b $12,$00
0091F5F4                            
0091F5F4                            		incbin	"engine/sound/data/sfx/char_jump.it",0x34F+0x50+8
0091F74A                            		even
0091F74A                            		
0091F74A                            ; ---------------------------
0091F74A                            
0091F74A                            sfx_PrizeToing:
0091F74A 0000 0000 0000 0000 0000+  		dc.l 0,0,0
0091F756 0101                        		dc.b 1,1
0091F758 FFFF FFFF FFFF                		dc.b -1,-1,-1,-1,-1,-1
0091F75E FFA0 FFE0                     		dc.b -1,PSG_2,-1,NOISE	
0091F762 FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
0091F76A 0000 0000 0000 0000 0000+  		dcb.b $12,$00
0091F77C                            
0091F77C                            		incbin	"engine/sound/data/sfx/prize_blup.it",0x347+0x50
0091F8C0 00                         		even
0091F8C0                            
0091F8C0                            ; ---------------------------
0091F8C0                            
0091F8C0                            sfx_ArrowPlup:
0091F8C0 0000 0000 0000 0000 0000+  		dc.l 0,@Samples,0
0091F8CC 0101                        		dc.b 1,1
0091F8CE FFFF FFFF FF06                		dc.b -1,-1,-1,-1,-1,FM_6
0091F8D4 FFFF FFFF                     		dc.b -1,-1,-1,-1	
0091F8D8 FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
0091F8E0 0000 0000 0000 0000 0000+  		dcb.b $12,$00
0091F8F2                            
0091F8F2                            		incbin	"engine/sound/data/sfx/arrow_plup.it",0xE1+0x50
0091F992 00                         		even
0091F992                            @Samples:
0091F992 0001 0000                       		dc.w 1,0
0091F996 0000 0000                       		dc.l samp_Kick
0091F99A 0000 0000                       		dc.l samp_Kick_end
0091F99E 0000 0000                       		dc.l samp_Kick
0091F9A2 FFFF                          		dc.w -1
0091F9A4                               		even
0091F9A4                             		
0091F9A4                            ; ***************************************************
0091F9A4                            ; Z80 Samples
0091F9A4                            ; ***************************************************
0091F9A4                            
0091F9A4                            ;  		if MARS
0091F9A4                             		cnop 0,$10000
00920000                            ;   		endif
00920000                            		
00920000                            ; ----------------------------------------
00920000                            
00920000                            samp_Kick:	incbin	"engine/sound/data/samples/dac/sauron_kick.wav",$2C
00920F9A                            samp_Kick_end:
00920F9A                             		even
00920F9A                            samp_Snare:	incbin	"engine/sound/data/samples/dac/snare.wav",$2C
0092237A                            samp_Snare_end:
0092237A                             		even
0092237A                            samp_TechnoKick:
0092237A                            		incbin	"engine/sound/data/samples/dac/ST-72_techno-bassd3.wav",$2C
009229CD                            samp_TechnoKick_end:
009229CE 00                          		even
009229CE                            samp_TechnoSnare:
009229CE                            		incbin	"engine/sound/data/samples/dac/ST-79_whodini-snare.wav",$2C
00924952                            samp_TechnoSnare_end:
00924952                             		even
00924952                            
00924952                            samp_Tom:	incbin	"engine/sound/data/samples/dac/sauron_tom.wav",$2C
0092550C                            samp_Tom_end:
0092550C                             		even
0092550C                             		
0092550C                             		
0092550C                            
0092550C                            ; ====================================================================
0092550C                            
0092550C                              		objend					;End of marsbank
0002550C                            		inform 0,"*** MARS 68k DATA SIZE: %h of FFFFF ***",*
0002550C                            		cnop 0,$8000
00028000                            		
00028000                            ; ====================================================================
00028000                            ; ---------------------------------------------
00028000                            ; SH2
00028000                            ; ---------------------------------------------
00028000                            
00028000                            SH2_Start:
00028000                            		incbin	"mars/sh2/code.bin"
0003117C                            SH2_End:
0003117C                            		cnop 0,4
0003117C                            		
0003117C                            ; ====================================================================
0003117C                            ; ---------------------------------------------
0003117C                            ; ROM data aligned for SH2
0003117C                            ; ---------------------------------------------
0003117C                            
0003117C                            Mars_Bank_1:
0003117C                            		obj *+$02000000
0203117C                            		
0203117C                            ; ---------------------------------------------
0203117C                            ; MARS Shared data
0203117C                            ; ---------------------------------------------
0203117C                            
0203117C                            		include	"engine/shared/mars.asm"
0203117C                            ; ; ====================================================================
0203117C                            ; ; MARS Shared Data
0203117C                            ; ; ====================================================================
0203117C                            ; 
0203117C                            ; ; --------------------------------------------
0203117C                            ; ; 3D Models
0203117C                            ; ; --------------------------------------------
0203117C                            ; 
0203117C                            ; test_model:
0203117C                            ; 		dc.l @faces
0203117C                            ; 		dc.l @points
0203117C                            ; 		dc.l @material
0203117C                            ; 		dc.l -100
0203117C                            ; @faces:
0203117C                            ; 		incbin "engine/misc/3dtest/cube/face.bin"
0203117C                            ; 		cnop 0,4
0203117C                            ; @points:
0203117C                            ; 		incbin "engine/misc/3dtest/cube/vert.bin"
0203117C                            ; 		cnop 0,4
0203117C                            ; @material:
0203117C                            ; 		;tex_00
0203117C                            ;        		dc.l 0
0203117C                            ;   		dc.l tex_temporal+(64*64),64,1
0203117C                            ;   		dc.l 64,  0
0203117C                            ;   		dc.l  0,  0
0203117C                            ;   		dc.l  0,64-1
0203117C                            ;        		dc.l 64,64-1
0203117C                            ;        		
0203117C                            ;        		;tex_01
0203117C                            ;        		dc.l 1
0203117C                            ;   		dc.l tex_temporal,64,1
0203117C                            ;   		dc.l 64,  0
0203117C                            ;   		dc.l  0,  0
0203117C                            ;   		dc.l  0,64-1
0203117C                            ;        		dc.l 64,64-1
0203117C                            ;        		
0203117C                            ; 		dc.l -1
0203117C                            ; 		cnop 0,4
0203117C                            ; 		
0203117C                            ; ; --------------------------------------------
0203117C                            ; ; Models data
0203117C                            ; ; --------------------------------------------
0203117C                            ; 
0203117C                            ; tex_temporal:
0203117C                            ; 		incbin "engine/misc/3dtest/cube/photo.data"
0203117C                            ; 		cnop 0,4
0203117C                            ; mars_pal_title:
0203117C                            ;  		dc.b 0,0,0
0203117C                            ; 		incbin "engine/misc/3dtest/cube/photo.data.pal"
0203117C                            ; 		cnop 0,4
0203117C                            ; 		
0203117C                            ; ; ----------------------------------------------
0203117C                            ; ; ----------------------------------------------
0203117C                            
0203117C                            ; ---------------------------------------------
0203117C                            ; MARS Sound
0203117C                            ; ---------------------------------------------
0203117C                            
0203117C                             		include	"engine/sound/data/mars.asm"
0203117C                            ; ---------------------------------------------
0203117C                            ; PWM Samples for SMEG
0203117C                            ; 
0203117C                            ; MARS Samples MUST be here
0203117C                            ; ---------------------------------------------
0203117C                            
0203117C                            		cnop 0,$8000
02038000 0000 0000                  pcm_piano:	dc.l @End
02038004                              		incbin "engine/sound/data/samples/pcm/piano.wav",$2C
0203F0F7                            @End:
0203F0F7 00                          		cnop 0,4
0203F0F8                             		
0203F0F8                            		cnop 0,$8000
02040000 0204 23E6                  pcm_brass_1:	dc.l (pcm_brass_1+$23E6)
02040004                              		incbin "engine/sound/data/samples/pcm/chor.wav",$2C
020437D8                            @End:
020437D8                             		cnop 0,4
020437D8                             	
020437D8                            		cnop 0,$8000
02048000 0204 C9D8                  pcm_piano_rave:	dc.l (pcm_piano_rave+$49D8)
02048004                              		incbin "engine/sound/data/samples/pcm/pianorav.wav",$2C
0204C9DC                            @End:
0204C9DC                             		cnop 0,4
0204C9DC                             		
0204C9DC                            ; ---------------------------------------------
0204C9DC                            
0204C9DC 0000 0000                  pcm_sp_heavy1:	dc.l @End
0204C9E0                              		incbin "engine/sound/data/samples/pcm/SPHEAVY1.wav",$2C
0204D7B4                            @End:
0204D7B4                             		cnop 0,4
0204D7B4 0204 E55C                  pcm_mcl_string:	dc.l (pcm_mcl_string+$0DA8)
0204D7B8                              		incbin "engine/sound/data/samples/pcm/MCLSTRNG.WAV",$2C
0204E69C                            @End:
0204E69C                             		cnop 0,4
0204E69C                             		
0204E69C                            ; ---------------------------------------------
0204E69C                            		
0204E69C                            ; 		MARS_Sample  pcm_arena1_1, A1_1.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_2, A1_2.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_3, A1_3.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_4, A1_4.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_5, A1_5.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_6, A1_6.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_7, A1_7.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_8, A1_8.wav,-1
0204E69C                            ; 		MARS_Sample  pcm_arena1_9, A1_9.wav,-1
0204E69C                            ; 		MARS_Sample pcm_arena1_10,A1_10.wav,-1
0204E69C                            ; 		MARS_Sample pcm_arena1_11, A1_11.wav,-1
0204E69C                            ; 		MARS_Sample pcm_arena1_12, A1_12.wav,-1
0204E69C                            ; 		MARS_Sample pcm_arena1_13, A1_13.wav,-1
0204E69C                            ; 		MARS_Sample pcm_arena1_14, A1_14.wav,-1		
0204E69C                             		
0204E69C                             		
0204E69C                            
0204E69C                            ; ====================================================================
0204E69C                            
0204E69C                            		objend			
0004E69C                              		inform 0,"MARS SH2 DATA SIZE: %h",(*-Mars_Bank_1)
0004E69C                            
0004E69C                            ; ====================================================================
0004E69C                            
0004E69C                             		inform 0,"ROM SIZE: %h",*
0004E69C                            		cnop 0,$40000
00080000                            MD_RomEnd:
