00000000                            ; =====================================================================
00000000                            ; PRG-RAM Program
00000000                            ;
00000000                            ; Title
00000000                            ; ==========================================================
00000000                            
00000000                            ; ---------------------------------------------
00000000                            ; Variables
00000000                            ; ---------------------------------------------
00000000                            
00000000 =00A12000                  ThisCpu		equ $A12000
00000000 =00000000                  CD_PrgRamMode	= 0
00000000                            
00000000                            ; =====================================================================
00000000                            ; ---------------------------------------------
00000000                            ; Custom header
00000000                            ; ---------------------------------------------
00000000                            		
00000000 5241 4D20                  		dc.b "RAM "
00000004 0000 0000                  		dc.l 0
00000008 0000 0000 0000 0000        		dc.l PrgCode,PrgCode_End
00000010 0000 0000 0000 0000        		dc.l PrgData,PrgData_End
00000018                            		
00000018                            ; =====================================================================
00000018                            ; ---------------------------------------------
00000018                            ; Include
00000018                            ; ---------------------------------------------
00000018                            
00000018                            		include "engine/ram.asm"
00000018                            ; =====================================================
00000018                            ; RAM
00000018                            ; =====================================================
00000018                            
00000018                            ; ----------------
00000018                            ; Sega CD RAM
00000018                            ; ----------------
00000018                            
00000018                            		rsset $FFFF6800
00000018                             
00000018                            ; ----------------
00000018                            ; MD/MARS RAM
00000018                            ; ----------------
00000018                            
00000018                            		
00000018                            ; =====================================================
00000018                            ; ----------------------------------------
00000018                            ; Variables
00000018                            ; ----------------------------------------
00000018                            
00000018 =00000000                  bitFrameWait		equ	0
00000018 =00000001                  bitVBlankWait		equ	1
00000018 =00000002                  bitHBlankWait		equ	2
00000018 =00000003                  bitDontWaitHInt		equ	3
00000018 =00000004                  bitLockPads		equ	4
00000018 =00000005                  bitHotStart		equ	5
00000018 =00000006                  bitWaitHint		equ	6
00000018 =00000007                  bitHasTMSS		equ	7
00000018                            
00000018                            ; ----------------------------------------
00000018                            ; Game vars
00000018                            ; ----------------------------------------
00000018                            
00000018                            ; =====================================================
00000018                            ; ----------------------------------------
00000018                            ; Mode buffer
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFF6800                  RAM_SharedBuffer	rs.b	$80
00000018 =FFFF6880                  RAM_ModeBuffer		rs.b	$7000
00000018                            
00000018                            ; ----------------------------------------
00000018                            ; Work stuff
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFFD880                  RAM_VIntJumpTo		rs.w	1		;DONT SEPARATE
00000018 =FFFFD882                  RAM_VIntAddr		rs.l	1		;*
00000018 =FFFFD886                  RAM_HIntJumpTo		rs.w	1		;DONT SEPARATE
00000018 =FFFFD888                  RAM_HIntAddr		rs.l	1		;*
00000018                            
00000018 =FFFFD88C                  RAM_FrameCount		rs.l	1
00000018 =FFFFD890                  RAM_VIntWait		rs.b 	1
00000018 =FFFFD891                  RAM_GameMode		rs.b 	1
00000018 =FFFFD892                  RAM_Joypads		rs.b	$40
00000018 =FFFFD8D2                  RAM_SprControl		rs.b	$10
00000018                            
00000018                            ; ----------------------------------------
00000018                            ; Sound
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFFD8E2                  RAM_SndDriver		rs.b	$400
00000018                            
00000018                            ; ----------------------------------------
00000018                            ; DMA
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFFDCE2                  RAM_DMA_Buffer		rs.b	$400
00000018                            
00000018                            ; ----------------------------------------
00000018                            ; PalFade
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFFE0E2                  RAM_PalFadeControl	rs.b	$10
00000018                            			
00000018 =FFFFE0F2                  RAM_PalFadeBuff		rs.w	64
00000018 =FFFFE172                  RAM_PalFadeBuffHint	rs.w	64
00000018                            
00000018                            ; ----------------------------------------
00000018                            ; Visual stuff
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFFE1F2                  RAM_HorBuffer		rs.l	240;224
00000018 =FFFFE5B2                  RAM_VerBuffer		rs.l	(320/16)
00000018 =FFFFE602                  RAM_SprBuffer		rs.b	(8*80)
00000018 =FFFFE882                  RAM_PalBuffer		rs.w	64
00000018 =FFFFE902                  RAM_VdpRegs		rs.b	$18
00000018                            
00000018 =FFFFE91A                  RAM_VerBufferHint	rs.l	(320/16)
00000018 =FFFFE96A                  RAM_SprBufferHint	rs.l	(8*80)
00000018 =FFFFF36A                  RAM_PalBufferHint	rs.w	64
00000018                            
00000018                            ; =====================================================
00000018                            ; ----------------------------------------
00000018                            ; Last RAM
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFFF3EA                  RAM_End			rs.b	0
00000018                            ;                                 inform 0,"RAM ENDS AT: %h",RAM_End
00000018                            ;                         inform 0,"%h",RAM_FrameCount
00000018                            ;                         inform 0,"%h",RAM_FrameCount
00000018                            		include	"cd/incl/equs.asm"
00000018                            ; =================================================================
00000018                            ; ----------------------------------------
00000018                            ; Shared vars
00000018                            ; ----------------------------------------
00000018                            
00000018                            ; -------------
00000018                            ; bits
00000018                            ; -------------
00000018                            
00000018 =00000002                  bitWRamMode	equ	2		;2M | 1M
00000018                            
00000018                            ; -------------
00000018                            ; Registers
00000018                            ; -------------
00000018                            
00000018 =00000002                  MemoryMode	equ	$02		;WORD
00000018 =0000000E                  CommMain	equ	$0E		;BYTE
00000018 =0000000F                  CommSub		equ	$0F		;BYTE
00000018 =00000010                  CommDataM	equ	$10		;Array (size: $E)
00000018 =00000020                  CommDataS	equ	$20		;Array (size: $E)
00000018                            
00000018                            ; =================================================================
00000018                            ; ----------------------------------------
00000018                            ; MAIN CPU ONLY
00000018                            ; ----------------------------------------
00000018                            
00000018 =FFFF6600                  RAM_CdShared	equ	$FFFF6600
00000018                            
00000018                            		rsset   RAM_CdShared
00000018 =FFFF6600                  RAM_Wait_Buff	rs.b	$40
00000018 =FFFF6640                  RAM_Wait_Code	rs.b	$180
00000018 =FFFF67C0                  RAM_GoToHint	rs.w	3		; Sega CD HBlank jump ( jmp (thisaddr).l )
00000018                            
00000018 =00006600                  sizeof_prg	equ	$6600
00000018                            
00000018                            ; =================================================================
00000018                            ; ----------------------------------------
00000018                            ; SUB CPU ONLY
00000018                            ; ----------------------------------------
00000018                            
00000018                            ; -------------
00000018                            ; PCM
00000018                            ; -------------
00000018                            
00000018 =00FF0000                  PCM		equ	$FF0000
00000018 =00000001                  ENV		equ	$01		; Envelope
00000018 =00000003                  PAN		equ	$03		; Panning (%RRRRLLLL, and negative)
00000018 =00000005                  FDL		equ	$05		; Sample rate $00xx
00000018 =00000007                  FDH		equ	$07		; Sample rate $xx00
00000018 =00000009                  LSL		equ	$09		; Loop address $xx00
00000018 =0000000B                  LSH		equ	$0B		; Loop address $00xx
00000018 =0000000D                  ST		equ	$0D		; Start address (only $x0, $x000)
00000018 =0000000F                  Ctrl		equ	$0F		; Control register ($80 - Bank select, $C0 - Channel select)
00000018 =00000011                  OnOff		equ	$11		; Channel On/Off (BITS: 1 - off, 0 - on)
00000018                            
00000018                            ; =================================================================
00000018                            ; =================================================================
00000018                            
00000018                            ; =====================================================================
00000018                            ; ---------------------------------------------
00000018                            ; Init
00000018                            ; ---------------------------------------------
00000018                            
00000018                            PrgCode:
00000018                            		obj $FFFF0000
FFFF0000 23FC 0000 0000 FFFF 67C2   		move.l	#MD_Hint,(RAM_GoToHint+2)
FFFF000A 33FC 67C0 00A1 2006        		move.w	#((RAM_GoToHint)&$FFFF),($A12006).l
FFFF0012 23FC 0000 0000 FFFF FD08     		move.l	#MD_Vint,($FFFFFD08)
FFFF001C 23FC 0000 0000 FFFF FD0E    		move.l	#MD_Hint,($FFFFFD0E)
FFFF0026                             		
FFFF0026                            ; ====================================================================
FFFF0026                            ; -------------------------------------------------
FFFF0026                            ; Program data
FFFF0026                            ; -------------------------------------------------
FFFF0026                            		
FFFF0026 23FC 0000 0000 FFFF D882   		move.l	#VInt_Default,(RAM_VIntAddr)
FFFF0030 23FC 0000 0000 FFFF D888   		move.l	#Hint_Default,(RAM_HIntAddr)
FFFF003A 4239 FFFF D890             		clr.b	(RAM_VIntWait)
FFFF0040 42B9 FFFF DCE2             		clr.l	(RAM_DMA_Buffer)
FFFF0046                            		
FFFF0046 6100 0000                  		bsr	SMEG_Init
FFFF004A 46FC 2000                  		move.w	#$2000,sr
FFFF004E                            		
FFFF004E                            ; -------------------------------------------------
FFFF004E                            ; Modes
FFFF004E                            ; -------------------------------------------------
FFFF004E                            
FFFF004E                            @RunMode:
FFFF004E 7000                                       moveq	#0,d0
FFFF0050 1039 FFFF D891                             move.b	(RAM_GameMode),d0
FFFF0056 E948                                       lsl.w	#4,d0
FFFF0058 41FB 0000                                  lea	GameModes(pc,d0.w),a0
FFFF005C 4A50                                       tst.w	(a0)
FFFF005E 6600                                       bne.s	@FileName
FFFF0060 2068 0004                                  movea.l	4(a0),a0
FFFF0064 4E90                                       jsr	(a0)
FFFF0066 60E6                                       bra.s	@RunMode
FFFF0068                            @FileName:
FFFF0068 43F9 FFFF 6600             		lea 	(RAM_Wait_Buff),a1
FFFF006E D0FC 0004                  		adda	#4,a0
FFFF0072 22D8                        		move.l	(a0)+,(a1)+
FFFF0074 22D8                        		move.l	(a0)+,(a1)+
FFFF0076 22D8                        		move.l	(a0)+,(a1)+
FFFF0078                             		
FFFF0078 6100 0000                  		bsr	Mode_FadeOut
FFFF007C 6100 0000                   		bsr	SMEG_StopSnd
FFFF0080 4EF9 FFFF 6640             		jmp	(RAM_Wait_Code)
FFFF0086                            		
FFFF0086                            ; -------------------------------------------------
FFFF0086                            ; Mode list
FFFF0086                            ; -------------------------------------------------
FFFF0086                            
FFFF0086                            GameModes:
FFFF0086 0000 0000                  		dc.w 0,0
FFFF008A 0000 0000 0000 0000 0000+   		dc.l mode_Title,0,0
FFFF0096 0001 0000                   		dc.w 1,0
FFFF009A 5052 475F 4C45 564C 2E42+   		dc.b "PRG_LEVL.BIN"
FFFF00A6                             		even
FFFF00A6                            
FFFF00A6                            ; ---------------------------------------------
FFFF00A6                            ; Subs
FFFF00A6                            ; ---------------------------------------------
FFFF00A6                            
FFFF00A6                            		include	"engine/subs/vdp.asm"
FFFF00A6                            ; ====================================================================
FFFF00A6                            ; ---------------------------------------------
FFFF00A6                            ; VDP
FFFF00A6                            ; ---------------------------------------------
FFFF00A6                            
FFFF00A6 =00000004                  bit_vdpHint	equ	4
FFFF00A6                            
FFFF00A6 =00000081                  vdp_H40		equ	$81
FFFF00A6 =00000000                  vdp_H32		equ	$00
FFFF00A6 =00000006                  vdp_Double	equ	%00000110
FFFF00A6                            
FFFF00A6 =00000002                  vdpReg_PattFG	equ	2			;00???000 = ???00000 00000000
FFFF00A6 =00000003                  vdpReg_PattWD	equ	3			;
FFFF00A6 =00000004                  vdpReg_PattBG	equ	4			;00000??? = ???00000 00000000
FFFF00A6 =0000000A                  vdpReg_HVal	equ	$A
FFFF00A6 =0000000B                  vdpReg_Scroll	equ	$B
FFFF00A6 =0000000C                  vdpReg_HMode	equ	$C
FFFF00A6 =00000010                  vdpReg_PlnSize	equ	$10
FFFF00A6 =00000011                  vdpReg_WindowX	equ	$11
FFFF00A6 =00000012                  vdpReg_WindowY	equ	$12
FFFF00A6                            
FFFF00A6                            ; --------------------------------------------
FFFF00A6                            ; Clear planes
FFFF00A6                            ; --------------------------------------------
FFFF00A6                            
FFFF00A6                            VDP_ClearPlanes:
FFFF00A6 6100                       		bsr.s	VDP_ClrPlane_FG
FFFF00A8                            
FFFF00A8                            VDP_ClrPlane_BG:
FFFF00A8 7000                       		moveq	#0,d0
FFFF00AA 1039 FFFF E904             		move.b	(RAM_VdpRegs+vdpReg_PattFG),d0
FFFF00B0 E148                       		lsl.w	#8,d0
FFFF00B2 E548                       		lsl.w	#2,d0
FFFF00B4 6100 0000                  		bsr	VDP_VramToCmd
FFFF00B8 23C0 00C0 0004             		move.l	d0,($C00004).l
FFFF00BE 303C 07FF                  		move.w	#$7FF,d0
FFFF00C2                            @ClrBG:
FFFF00C2 42B9 00C0 0000             		clr.l	($C00000).l
FFFF00C8 51C8 FFF8                  		dbf	d0,@ClrBG
FFFF00CC 4E75                       		rts
FFFF00CE                            
FFFF00CE                            VDP_ClrPlane_FG:
FFFF00CE 7000                       		moveq	#0,d0
FFFF00D0 1039 FFFF E906             		move.b	(RAM_VdpRegs+vdpReg_PattBG),d0
FFFF00D6 E148                       		lsl.w	#8,d0
FFFF00D8 EB48                       		lsl.w	#5,d0
FFFF00DA 6100 0000                  		bsr	VDP_VramToCmd
FFFF00DE 23C0 00C0 0004             		move.l	d0,($C00004).l
FFFF00E4 303C 07FF                  		move.w	#$7FF,d0
FFFF00E8                            @ClrFG:
FFFF00E8 42B9 00C0 0000             		clr.l	($C00000).l
FFFF00EE 51C8 FFF8                  		dbf	d0,@ClrFG
FFFF00F2 4E75                       		rts
FFFF00F4                            
FFFF00F4                            ; --------------------------------------------
FFFF00F4                            ; VDP_ClearScroll
FFFF00F4                            ;
FFFF00F4                            ; Set both scrollings to $0000
FFFF00F4                            ; --------------------------------------------
FFFF00F4                            
FFFF00F4                            VDP_ClearScroll:
FFFF00F4 41F9 FFFF E1F2             		lea	(RAM_HorBuffer),a0
FFFF00FA 303C 00EF                  		move.w	#(240)-1,d0
FFFF00FE                            @ClrScrl:
FFFF00FE 4298                       		clr.l	(a0)+
FFFF0100 51C8 FFFC                  		dbf	d0,@ClrScrl
FFFF0104                            		
FFFF0104 41F9 FFFF E5B2             		lea	(RAM_VerBuffer),a0
FFFF010A 303C 0013                  		move.w	#(320/16)-1,d0
FFFF010E                            @ClrVScrl:
FFFF010E 4298                       		clr.l	(a0)+
FFFF0110 51C8 FFFC                  		dbf	d0,@ClrVScrl
FFFF0114 4E75                       		rts
FFFF0116                            
FFFF0116                            ; --------------------------------------------
FFFF0116                            ; VDP_SendData_W, VDP_SendData_L
FFFF0116                            ;
FFFF0116                            ; Input:
FFFF0116                            ; a0 - Data address
FFFF0116                            ;
FFFF0116                            ; d0 | VRAM Address
FFFF0116                            ; d1 | Data size
FFFF0116                            ; --------------------------------------------
FFFF0116                            
FFFF0116                            VDP_SendData_W:
FFFF0116 EB48                       		lsl.w	#5,d0
FFFF0118 6100 0000                  		bsr	VDP_VramToCmd
FFFF011C 23C0 00C0 0004             		move.l	d0,($C00004)
FFFF0122                            @Loop:
FFFF0122 33D8 00C0 0000             		move.w	(a0)+,($C00000).l
FFFF0128 51C9 FFF8                  		dbf	d1,@Loop
FFFF012C 4E75                       		rts
FFFF012E                            
FFFF012E                            VDP_SendData_L:
FFFF012E EB48                       		lsl.w	#5,d0
FFFF0130 6100 0000                  		bsr	VDP_VramToCmd
FFFF0134 23C0 00C0 0004             		move.l	d0,($C00004)
FFFF013A                            @Loop:
FFFF013A 23D8 00C0 0000             		move.l	(a0)+,($C00000).l
FFFF0140 51C9 FFF8                  		dbf	d1,@Loop
FFFF0144 4E75                       		rts
FFFF0146                            
FFFF0146                            ; --------------------------------------------
FFFF0146                            ; VDP_VramToCmd
FFFF0146                            ;
FFFF0146                            ; Input:
FFFF0146                            ; d0 | WORD - VRAM to convert
FFFF0146                            ;
FFFF0146                            ; Output:
FFFF0146                            ; d0 | LONG - VDP Command (Write mode)
FFFF0146                            ; --------------------------------------------
FFFF0146                            
FFFF0146                            VDP_VramToCmd:
FFFF0146 0C40 4000                  		cmp.w	#$4000,d0
FFFF014A 6500                       		bcs.s	@NoBank
FFFF014C 4840                       		swap	d0
FFFF014E 303C 0001                  		move.w	#1,d0
FFFF0152 4840                       		swap	d0
FFFF0154 0C40 8000                  		cmp.w	#$8000,d0
FFFF0158 6500                       		bcs.s	@NoBank	
FFFF015A 4840                       		swap	d0
FFFF015C 303C 0002                  		move.w	#2,d0
FFFF0160 4840                       		swap	d0
FFFF0162 0C40 C000                  		cmp.w	#$C000,d0
FFFF0166 6500                       		bcs.s	@NoBank	
FFFF0168 4840                       		swap	d0
FFFF016A 303C 0003                  		move.w	#3,d0
FFFF016E 4840                       		swap	d0
FFFF0170                            @NoBank:
FFFF0170 0240 3FFF                    		and.w	#$3FFF,d0
FFFF0174 0040 4000                    		or.w	#$4000,d0
FFFF0178 4840                          		swap	d0
FFFF017A 4E75                       		rts
FFFF017C                            		
FFFF017C                            ; --------------------------------------------
FFFF017C                            ; VDP_ShowVal (variants)
FFFF017C                            ; 
FFFF017C                            ; Input:
FFFF017C                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
FFFF017C                            ; d1 | LONG - XPos (WORD) | YPos (WORD)
FFFF017C                            ; d2 | WORD - VRAM
FFFF017C                            ; d3 | LONG - Value
FFFF017C                            ; 
FFFF017C                            ; Uses:
FFFF017C                            ; d4-d5
FFFF017C                            ; --------------------------------------------
FFFF017C                            
FFFF017C                            ; HEX 
FFFF017C                            
FFFF017C                            VDP_ShowVal_Nibl:
FFFF017C 6100 0000                  		bsr	vdpshv_findvdppos
FFFF0180 E14B                       		lsl.w	#8,d3
FFFF0182 E94B                       		lsl.w	#4,d3
FFFF0184 4843                       		swap	d3
FFFF0186 7800                       		moveq	#(1)-1,d4
FFFF0188 6000 0000                  		bra	vdpshv_showval
FFFF018C                            VDP_ShowVal_B:
FFFF018C 6100 0000                  		bsr	vdpshv_findvdppos
FFFF0190 E14B                       		lsl.w	#8,d3
FFFF0192 4843                       		swap	d3
FFFF0194 7801                       		moveq	#(1*2)-1,d4
FFFF0196 6000 0000                  		bra	vdpshv_showval
FFFF019A                            VDP_ShowVal_W:
FFFF019A 6100 0000                  		bsr	vdpshv_findvdppos
FFFF019E 4843                       		swap	d3
FFFF01A0 7803                       		moveq	#(2*2)-1,d4
FFFF01A2 6000 0000                  		bra	vdpshv_showval
FFFF01A6                            VDP_ShowVal_L:
FFFF01A6 6100 0000                  		bsr	vdpshv_findvdppos
FFFF01AA 7807                       		moveq	#(4*2)-1,d4
FFFF01AC 6000 0000                  		bra	vdpshv_showval
FFFF01B0                            	
FFFF01B0                            ; DEC
FFFF01B0                            ; WARNING: semi-slow
FFFF01B0                            
FFFF01B0                            VDP_ShowValDec_Nibl:
FFFF01B0 6100 0000                  		bsr	vdpshv_findvdppos
FFFF01B4                            ; 		bsr	vdpshv_hextobcd
FFFF01B4 E14B                       		lsl.w	#8,d3
FFFF01B6 E94B                       		lsl.w	#4,d3
FFFF01B8 4843                       		swap	d3
FFFF01BA 7800                       		moveq	#(1)-1,d4
FFFF01BC 6000 0000                  		bra	vdpshv_showval
FFFF01C0                            		
FFFF01C0                            VDP_ShowValDec_B:
FFFF01C0 6100 0000                  		bsr	vdpshv_findvdppos
FFFF01C4                            ; 		bsr	vdpshv_hextobcd
FFFF01C4 E14B                       		lsl.w	#8,d3
FFFF01C6 4843                       		swap	d3
FFFF01C8 7801                       		moveq	#(1*2)-1,d4
FFFF01CA 6000 0000                  		bra	vdpshv_showval
FFFF01CE                            VDP_ShowValDec_W:
FFFF01CE 6100 0000                  		bsr	vdpshv_findvdppos
FFFF01D2                            ; 		bsr	vdpshv_hextobcd
FFFF01D2 4843                       		swap	d3
FFFF01D4 7803                       		moveq	#(2*2)-1,d4
FFFF01D6 6000 0000                  		bra	vdpshv_showval
FFFF01DA                            VDP_ShowValDec_L:
FFFF01DA 6100 0000                  		bsr	vdpshv_findvdppos
FFFF01DE                            ; 		bsr	vdpshv_hextobcd
FFFF01DE 7807                       		moveq	#(4*2)-1,d4
FFFF01E0 6000 0000                  		bra	vdpshv_showval
FFFF01E4                            		
FFFF01E4                            ; -----------------------
FFFF01E4                            ; Uses: d4-d5
FFFF01E4                            ; -----------------------
FFFF01E4                            
FFFF01E4                            vdpshv_findvdppos:
FFFF01E4                            		;Check plane to use
FFFF01E4 3A00                       		move.w	d0,d5
FFFF01E6 7000                       		moveq	#0,d0
FFFF01E8 1039 FFFF E904             		move.b	(RAM_VdpRegs+vdpReg_PattFG),d0
FFFF01EE 0805 0001                  		btst	#1,d5				;%10? (WD)
FFFF01F2 6700                       		beq.s	@FG
FFFF01F4 1039 FFFF E905             		move.b	(RAM_VdpRegs+vdpReg_PattWD),d0
FFFF01FA                            @FG:
FFFF01FA E148                       		lsl.w	#8,d0
FFFF01FC E548                       		lsl.w	#2,d0
FFFF01FE 0805 0000                  		btst	#0,d5				;%01? (BG)
FFFF0202 6700                       		beq.s	@FGWD
FFFF0204 7000                       		moveq	#0,d0
FFFF0206 1039 FFFF E906             		move.b	(RAM_VdpRegs+vdpReg_PattBG),d0
FFFF020C E148                       		lsl.w	#8,d0
FFFF020E EB48                       		lsl.w	#5,d0
FFFF0210                            @FGWD:
FFFF0210                            
FFFF0210                            		;Start Y
FFFF0210 7800                       		moveq	#0,d4
FFFF0212 3801                          		move.w	d1,d4
FFFF0214 ED8C                         		lsl.l	#6,d4
FFFF0216 0805 0001                   		btst	#1,d5
FFFF021A 6700                        		beq.s	@def_fgbg
FFFF021C                             		
FFFF021C                             		;TODO: WD resolution check
FFFF021C                            ;    		move.b	(RAM_VdpRegs+vdpReg_HMode),d5
FFFF021C                            ;    		and.w	#%10000001,d5
FFFF021C                            ;    		bne.s	@Not128
FFFF021C E38C                           		lsl.l	#1,d4
FFFF021E 6000                       		bra.s	@Not128
FFFF0220                            @def_fgbg:
FFFF0220 0839 0000 FFFF E912         		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
FFFF0228 6700                        		beq.s	@Not40
FFFF022A E38C                         		lsl.l	#1,d4
FFFF022C                            @Not40:
FFFF022C 0839 0001 FFFF E912         		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
FFFF0234 6700                        		beq.s	@Not128
FFFF0236 E38C                           		lsl.l	#1,d4
FFFF0238                            @Not128:
FFFF0238 D044                        		add.w	d4,d0			;+Y Start
FFFF023A 4841                       		swap	d1
FFFF023C E349                       		lsl.w	#1,d1
FFFF023E D041                       		add.w	d1,d0			;+X Start
FFFF0240 6000 FF04                  		bra	VDP_VramToCmd
FFFF0244                            	
FFFF0244                            ; -----------------------
FFFF0244                            
FFFF0244                            vdpshv_showval:
FFFF0244 7200                       		moveq	#0,d1
FFFF0246 23C0 00C0 0004             		move.l	d0,($C00004)
FFFF024C                            @next:
FFFF024C E99B                       		rol.l	#4,d3
FFFF024E 1203                       		move.b	d3,d1
FFFF0250 0241 000F                  		and.w	#$F,d1
FFFF0254 0C41 000A                  		cmp.w	#$A,d1
FFFF0258 6500 0000                  		bcs	@lessF
FFFF025C 0641 0007                  		add.w	#7,d1
FFFF0260                            @lessF
FFFF0260 D242                       		add.w	d2,d1
FFFF0262 33C1 00C0 0000             		move.w	d1,($C00000)
FFFF0268 51CC FFE2                  		dbf	d4,@next
FFFF026C 4E75                       		rts
FFFF026E                            	
FFFF026E                            ; ; -----------------------
FFFF026E                            ; ; Input:
FFFF026E                            ; ; d3 - HEX
FFFF026E                            ; ; 
FFFF026E                            ; ; Output:
FFFF026E                            ; ; d3 - BCD
FFFF026E                            ; ; 
FFFF026E                            ; ; Uses:
FFFF026E                            ; ; d4-d5
FFFF026E                            ; ; -----------------------
FFFF026E                            ; 
FFFF026E                            ; vdpshv_hextobcd:
FFFF026E                            ; 		move.l	d3,d5
FFFF026E                            ; 		moveq	#0,d3
FFFF026E                            ; 		move.l	d5,d4
FFFF026E                            ; 	
FFFF026E                            ; 		move.w	d4,d1
FFFF026E                            ; 		lsr.w	#8,d1
FFFF026E                            ; 		and.w	#$FF,d1
FFFF026E                            ; 		tst.w	d1
FFFF026E                            ; 		beq	@part2
FFFF026E                            ; 		sub.w	#1,d1
FFFF026E                            ; 		add.w	d1,d1
FFFF026E                            ; 		add.w	d1,d1
FFFF026E                            ; 		move.l	@hideclist(pc,d1.w),d3
FFFF026E                            ; 		bra	@part2
FFFF026E                            ; 	
FFFF026E                            ; ; -----------------------
FFFF026E                            ; ; $X00+ array
FFFF026E                            ; ; -----------------------
FFFF026E                            ; 
FFFF026E                            ; @hideclist:
FFFF026E                            ; 		dc.l $256, $512, $768, $1024, $1280, $1536, $1792, $2048
FFFF026E                            ; 		dc.l $2304, $2560, $2816, $3072, $3328, $3584, $3840, $4096
FFFF026E                            ; 		dc.l $4352, $4608, $4864, $5120, $5376, $5632, $5888, $6144
FFFF026E                            ; 		dc.l $6400, $6656, $6912, $7168, $7424, $7680, $7936, $8192
FFFF026E                            ; 		dc.l $8448, $8704, $8960, $9216, $9472, $9728, $9984, $10240
FFFF026E                            ; 		dc.l $10496, $10752, $11008, $11264, $11520, $11776, $12032, $12288
FFFF026E                            ; 		dc.l $12544, $12800, $13056, $13312, $13568, $13824, $14080, $14336
FFFF026E                            ; 		dc.l $14592, $14848, $15104, $15360, $15616, $15872, $16128, $16384
FFFF026E                            ; 		dc.l $16640, $16896, $17152, $17408, $17664, $17920, $18176, $18432
FFFF026E                            ; 		dc.l $18688, $18944, $19200, $19456, $19712, $19968, $20224, $20480
FFFF026E                            ; 		dc.l $20736, $20992, $21248, $21504, $21760, $22016, $22272, $22528
FFFF026E                            ; 		dc.l $22784, $23040, $23296, $23552, $23808, $24064, $24320, $24576
FFFF026E                            ; 		dc.l $24832, $25088, $25344, $25600, $25856, $26112, $26368, $26624
FFFF026E                            ; 		dc.l $26880, $27136, $27392, $27648, $27904, $28160, $28416, $28672
FFFF026E                            ; 		dc.l $28928, $29184, $29440, $29696, $29952, $30208, $30464, $30720
FFFF026E                            ; 		dc.l $30976, $31232, $31488, $31744, $32000, $32256, $32512, $32768
FFFF026E                            ; 		dc.l $33024, $33280, $33536, $33792, $34048, $34304, $34560, $34816
FFFF026E                            ; 		dc.l $35072, $35328, $35584, $35840, $36096, $36352, $36608, $36864
FFFF026E                            ; 		dc.l $37120, $37376, $37632, $37888, $38144, $38400, $38656, $38912
FFFF026E                            ; 		dc.l $39168, $39424, $39680, $39936, $40192, $40448, $40704, $40960
FFFF026E                            ; 		dc.l $41216, $41472, $41728, $41984, $42240, $42496, $42752, $43008
FFFF026E                            ; 		dc.l $43264, $43520, $43776, $44032, $44288, $44544, $44800, $45056
FFFF026E                            ; 		dc.l $45312, $45568, $45824, $46080, $46336, $46592, $46848, $47104
FFFF026E                            ; 		dc.l $47360, $47616, $47872, $48128, $48384, $48640, $48896, $49152
FFFF026E                            ; 		dc.l $49408, $49664, $49920, $50176, $50432, $50688, $50944, $51200
FFFF026E                            ; 		dc.l $51456, $51712, $51968, $52224, $52480, $52736, $52992, $53248
FFFF026E                            ; 		dc.l $53504, $53760, $54016, $54272, $54528, $54784, $55040, $55296
FFFF026E                            ; 		dc.l $55552, $55808, $56064, $56320, $56576, $56832, $57088, $57344
FFFF026E                            ; 		dc.l $57600, $57856, $58112, $58368, $58624, $58880, $59136, $59392
FFFF026E                            ; 		dc.l $59648, $59904, $60160, $60416, $60672, $60928, $61184, $61440
FFFF026E                            ; 		dc.l $61696, $61952, $62208, $62464, $62720, $62976, $63232, $63488
FFFF026E                            ; 		dc.l $63744, $64000, $64256, $64512, $64768, $65024, $65280, $65536
FFFF026E                            ; 		
FFFF026E                            ; @part2:
FFFF026E                            ; 		and.l	#$FF,d4
FFFF026E                            ; 		tst.w	d4
FFFF026E                            ; 		beq.s	@final
FFFF026E                            ; @lownibloop:
FFFF026E                            ; 		sub.l	#1,d4
FFFF026E                            ; 		bcs	@final
FFFF026E                            ; 		add.l	#1,d3
FFFF026E                            ; 		move.w	d3,d1
FFFF026E                            ; 		and.w	#$F,d1
FFFF026E                            ; 		cmp.w	#$A,d1
FFFF026E                            ; 		blt.s	@nohex1
FFFF026E                            ; 		add.l	#6,d3
FFFF026E                            ; @nohex1:
FFFF026E                            ; 		move.w	d3,d1
FFFF026E                            ; 		and.w	#$F0,d1
FFFF026E                            ; 		beq.s	@lownibloop
FFFF026E                            ; 		cmp.w	#$A0,d1
FFFF026E                            ; 		bcs.s	@nohex2
FFFF026E                            ; 		add.l	#$60,d3
FFFF026E                            ; @nohex2:
FFFF026E                            ; 		move.l	d3,d1
FFFF026E                            ; 		and.w	#$F00,d1
FFFF026E                            ; 		beq.s	@lownibloop
FFFF026E                            ; 		cmp.w	#$A00,d1
FFFF026E                            ; 		bcs.s	@nohex3
FFFF026E                            ; 		add.l	#$600,d3
FFFF026E                            ; @nohex3:
FFFF026E                            ; 		move.l	d3,d1
FFFF026E                            ;  		and.l	#$F000,d1
FFFF026E                            ;  		beq.s	@lownibloop
FFFF026E                            ;  		cmp.l	#$A000,d1
FFFF026E                            ;  		bcs.s	@nohex4
FFFF026E                            ;  		add.l	#$6000,d3
FFFF026E                            ; @nohex4:
FFFF026E                            ; 		move.l	d3,d1
FFFF026E                            ;  		and.l	#$F0000,d1
FFFF026E                            ;  		beq.s	@lownibloop
FFFF026E                            ;  		cmp.l	#$A0000,d1
FFFF026E                            ;  		bcs.s	@nohex5
FFFF026E                            ;  		add.l	#$60000,d3
FFFF026E                            ; @nohex5:
FFFF026E                            ; 
FFFF026E                            ;  		bra	@lownibloop
FFFF026E                            ; @final:
FFFF026E                            ; 		rts
FFFF026E                            ; 		
FFFF026E                            ; ; -----------------------
FFFF026E                            ; ; $X0 array
FFFF026E                            ; ; -----------------------
FFFF026E                            ; 
FFFF026E                            ; @middeclist:
FFFF026E                            ; 		dc.l $16
FFFF026E                            ; 		dc.l $32
FFFF026E                            ; 		dc.l $64
FFFF026E                            ; 		dc.l $128
FFFF026E                            		
FFFF026E                            ; --------------------------------------------
FFFF026E                            ; VDP_LoadMaps
FFFF026E                            ; 
FFFF026E                            ; Input:
FFFF026E                            ; a0 - Pattern data
FFFF026E                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
FFFF026E                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
FFFF026E                            ; d2 | LONG - XSize (WORD) | YSize (WORD)
FFFF026E                            ; d3 | WORD - VRAM
FFFF026E                            ; 
FFFF026E                            ; Uses:
FFFF026E                            ; d4-d6
FFFF026E                            ; --------------------------------------------
FFFF026E                            
FFFF026E                            VDP_LoadMaps:
FFFF026E                            		;Check plane to use
FFFF026E 6100 FF74                  		bsr	vdpshv_findvdppos
FFFF0272                            		
FFFF0272 283C 0040 0000             		move.l	#$400000,d4
FFFF0278 0839 0000 FFFF E912        		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
FFFF0280 6700                       		beq.s	@JpNot40
FFFF0282 E38C                        		lsl.l	#1,d4
FFFF0284                            @JpNot40:
FFFF0284 0839 0001 FFFF E912        		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
FFFF028C 6700                       		beq.s	@Y_Loop
FFFF028E E38C                            		lsl.l	#1,d4
FFFF0290                                 		
FFFF0290                            @Y_Loop:
FFFF0290 23C0 00C0 0004             		move.l	d0,($C00004).l		; Set VDP location from d0
FFFF0296 4842                       		swap	d2
FFFF0298 3A02                       		move.w	d2,d5	  		; Move X-pos value to d3
FFFF029A 4842                       		swap	d2
FFFF029C                            @X_Loop:
FFFF029C 3C18                       		move.w	(a0)+,d6
FFFF029E DC43                                       add.w	d3,d6
FFFF02A0 33C6 00C0 0000                             move.w	d6,($C00000)		; Put data
FFFF02A6 51CD FFF4                  		dbf	d5,@X_Loop		; X-pos loop (from d1 to d3)
FFFF02AA D084                       		add.l	d4,d0                   ; Next line
FFFF02AC 51CA FFE2                  		dbf	d2,@Y_Loop		; Y-pos loop
FFFF02B0 4E75                       		rts
FFFF02B2                            
FFFF02B2                            ; --------------------------------------------
FFFF02B2                            ; VDP_LoadAsc
FFFF02B2                            ;
FFFF02B2                            ; Input:
FFFF02B2                            ; a0 - String
FFFF02B2                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
FFFF02B2                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
FFFF02B2                            ; d2 | VRAM
FFFF02B2                            ; 
FFFF02B2                            ; Uses:
FFFF02B2                            ; d3-d4
FFFF02B2                            ; --------------------------------------------
FFFF02B2                            
FFFF02B2                            VDP_LoadAsc:
FFFF02B2                            		;Check plane to use
FFFF02B2 6100 FF30                  		bsr	vdpshv_findvdppos
FFFF02B6                            		
FFFF02B6 283C 0040 0000             		move.l	#$400000,d4
FFFF02BC 0839 0000 FFFF E912        		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
FFFF02C4 6700                       		beq.s	@JpNot40
FFFF02C6 E38C                        		lsl.l	#1,d4
FFFF02C8                            @JpNot40:
FFFF02C8 0839 0001 FFFF E912        		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
FFFF02D0 6700                       		beq.s	@Space
FFFF02D2 E38C                            		lsl.l	#1,d4
FFFF02D4                                 		
FFFF02D4                            @Reset:
FFFF02D4 23C0 00C0 0004             		move.l	d0,($C00004).l
FFFF02DA                            @Next:
FFFF02DA 7600                       		moveq	#0,d3
FFFF02DC 1618                       		move.b	(a0)+,d3
FFFF02DE 0C03 000A                  		cmp.b	#$A,d3
FFFF02E2 6700                       		beq.s	@Space
FFFF02E4 4A03                       		tst.b	d3
FFFF02E6 6600                       		bne.s	@Char
FFFF02E8 4E75                       		rts
FFFF02EA                            @Char:
FFFF02EA D642                       		add.w	d2,d3
FFFF02EC 33C3 00C0 0000             		move.w	d3,($C00000).l
FFFF02F2 60E6                       		bra.s	@Next
FFFF02F4                            @Space:
FFFF02F4 D084                       		add.l	d4,d0                   ; Next line
FFFF02F6 60DC                       		bra.s	@Reset
FFFF02F8                            @Exit:
FFFF02F8 4E75                       		rts
FFFF02FA                            
FFFF02FA                            ; --------------------------------------------
FFFF02FA                            ; Vdp_Init
FFFF02FA                            ;
FFFF02FA                            ; Set the default registers
FFFF02FA                            ; --------------------------------------------
FFFF02FA                            
FFFF02FA                            Vdp_Init:
FFFF02FA 41FA 0000                  		lea	Vdp_RegData(pc),a0
FFFF02FE 43F9 FFFF E902             		lea	(RAM_VdpRegs),a1
FFFF0304 323C 8000                  		move.w	#$8000,d1
FFFF0308 7016                       		moveq	#$17-1,d0
FFFF030A                            @Loop:
FFFF030A 12D8                       		move.b	(a0)+,(a1)+
FFFF030C 51C8 FFFC                  		dbf	d0,@Loop
FFFF0310 4E75                       		rts
FFFF0312                            
FFFF0312                            ; --------------------------------------------
FFFF0312                            ; Vdp_Update
FFFF0312                            ;
FFFF0312                            ; Refresh VDP
FFFF0312                            ; --------------------------------------------
FFFF0312                            
FFFF0312                            Vdp_Update:
FFFF0312 41F9 FFFF E902             		lea	(RAM_VdpRegs),a0
FFFF0318 323C 8000                  		move.w	#$8000,d1
FFFF031C 7016                       		moveq	#$17-1,d0
FFFF031E                            @Loop:
FFFF031E 1218                       		move.b	(a0)+,d1
FFFF0320 33C1 00C0 0004             		move.w	d1,($C00004).l
FFFF0326 123C 0000                  		move.b	#0,d1
FFFF032A 0641 0100                  		add.w	#$100,d1
FFFF032E 51C8 FFEE                  		dbf	d0,@Loop
FFFF0332 4E75                       		rts
FFFF0334                            		
FFFF0334                            ; --------------------------------------------
FFFF0334                            ; VSync
FFFF0334                            ; --------------------------------------------
FFFF0334                            
FFFF0334                            VSync:
FFFF0334 08F9 0000 FFFF D890        		bset	#bitFrameWait,(RAM_VIntWait)
FFFF033C                            @StillOn:
FFFF033C 0839 0000 FFFF D890        		btst	#bitFrameWait,(RAM_VIntWait)
FFFF0344 66F6                       		bne.s	@StillOn
FFFF0346 4E75                       		rts
FFFF0348                            		
FFFF0348                            ; 		move.b	($C00005),d0
FFFF0348                            ; 		btst	#3,d0
FFFF0348                            ; 		beq.s	@StillOn
FFFF0348                            
FFFF0348                            ; -----------------------------------------
FFFF0348                            
FFFF0348                            Vdp_RegData:
FFFF0348 04                         		dc.b $04
FFFF0349 74                         		dc.b $74
FFFF034A 30                         		dc.b $30
FFFF034B 34                         		dc.b $34
FFFF034C 07                         		dc.b $07
FFFF034D 7C                         		dc.b $7C
FFFF034E 00                         		dc.b $00
FFFF034F 00                         		dc.b $00
FFFF0350 00                         		dc.b $00
FFFF0351 00                         		dc.b $00
FFFF0352 00                         		dc.b $00
FFFF0353 03                         		dc.b $03
FFFF0354 81                         		dc.b $81
FFFF0355 3F                         		dc.b $3F
FFFF0356 00                         		dc.b $00
FFFF0357 02                         		dc.b $02
FFFF0358 01                         		dc.b $01
FFFF0359 00                         		dc.b $00
FFFF035A 00                         		dc.b $00
FFFF035B 00                         		dc.b $00
FFFF035C 00                         		dc.b $00
FFFF035D 00                         		dc.b $00
FFFF035E 00                         		dc.b $00
FFFF035F 00                         		dc.b $00
FFFF0360                            		even
FFFF0360                            
FFFF0360                            ; --------------------------------------------
FFFF0360                            ; Vdp_RawAutoMap
FFFF0360                            ;
FFFF0360                            ; Input:
FFFF0360                            ; d0 | LONG - VDP Address
FFFF0360                            ; d1 | WORD - Width
FFFF0360                            ; d2 | WORD - Height
FFFF0360                            ; d3 | WORD - Start from this value
FFFF0360                            ; d4 | WORD - Horizontal size type (32,40,128)
FFFF0360                            ;
FFFF0360                            ; Output:
FFFF0360                            ; none
FFFF0360                            ;
FFFF0360                            ; Breaks:
FFFF0360                            ; d5
FFFF0360                            ; --------------------------------------------
FFFF0360                            		
FFFF0360                            Vdp_RawAutoMap:
FFFF0360 7A00                       		moveq	#0,d5
FFFF0362 DA43                       		add.w	d3,d5
FFFF0364 3605                       		move.w	d5,d3
FFFF0366                            
FFFF0366 1839 FFFF E912             		move.b	(RAM_VdpRegs+vdpReg_PlnSize),d4
FFFF036C 0244 0003                  		and.w	#%00000011,d4
FFFF0370 E54C                       		lsl.w	#2,d4
FFFF0372 4BFA 0000                  		lea	VDP_LineAddr(pc),a5
FFFF0376 2835 4000                  		move.l	(a5,d4.w),d4		;Space
FFFF037A                            
FFFF037A                            @Loop_2:
FFFF037A 23C0 00C0 0004             		move.l	d0,($C00004)		;Set VDP location from d0
FFFF0380 3A01                       		move.w	d1,d5	  		;Move X-pos value to d3
FFFF0382                            @Loop:
FFFF0382 33C3 00C0 0000             		move.w	d3,($C00000)		;Put data
FFFF0388 0643 0001                                  add.w	#1,d3
FFFF038C 51CD FFF4                  		dbf	d5,@Loop		;X-pos loop (from d1 to d3)
FFFF0390 D084                       		add.l	d4,d0                   ;Next line
FFFF0392 51CA FFE6                  		dbf	d2,@Loop_2		;Y-pos loop
FFFF0396 4E75                       		rts
FFFF0398                            		
FFFF0398                            VDP_LineAddr:
FFFF0398 0040 0000                  		dc.l $400000
FFFF039C 0080 0000                  		dc.l $800000
FFFF03A0 0080 0000                  		dc.l $800000
FFFF03A4 0100 0000                  		dc.l $1000000
FFFF03A8                            		even
FFFF03A8                            		
FFFF03A8                            		
FFFF03A8                            		
FFFF03A8                            		include	"engine/subs/fade.asm"
FFFF03A8                            ; =====================================================
FFFF03A8                            ; FadeIn/FadeOut
FFFF03A8                            ; =====================================================
FFFF03A8                            
FFFF03A8                            ; ---------------------------------------
FFFF03A8                            ; Variables
FFFF03A8                            ; ---------------------------------------
FFFF03A8                            
FFFF03A8                            ; PalFadeHint		equ	$50
FFFF03A8                            
FFFF03A8 =00000001                  ID_FadeOut		equ	$01
FFFF03A8 =00000002                  ID_FadeIn		equ	$02
FFFF03A8 =00000003                  ID_ToWhite		equ	$03
FFFF03A8 =00000004                  ID_FadeWhite		equ	$04
FFFF03A8                            
FFFF03A8                            ; ---------------------------------------
FFFF03A8                            
FFFF03A8 =00000001                  PalFadeFlags		equ	1
FFFF03A8 =00000002                  PalFadeStart		equ	2  ;START(byte)|END(byte)|TIMER(word)
FFFF03A8 =00000003                  PalFadeEnd		equ	3
FFFF03A8 =00000004                  PalFadeTmr		equ	4
FFFF03A8 =00000008                  PalFadeSource		equ	8
FFFF03A8                            
FFFF03A8                            ; ---------------------------------------
FFFF03A8                            
FFFF03A8 =00000007                  bitFinished		equ 	7
FFFF03A8                            
FFFF03A8                            ; =====================================================
FFFF03A8                            ; Genesis palette
FFFF03A8                            ; =====================================================
FFFF03A8                            
FFFF03A8                            PalFade:
FFFF03A8                            ; 		if MARS
FFFF03A8                            ; 		bsr	PalFade_Mars
FFFF03A8                            ; 		endif
FFFF03A8                            
FFFF03A8 4DF9 FFFF E0E2             		lea	(RAM_PalFadeControl),a6
FFFF03AE 0816 0007                  		btst	#bitFinished,(a6)
FFFF03B2 6700                       		beq.s	@NotFinished
FFFF03B4 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
FFFF03BA 6B00 0000                  		bmi	@Finished
FFFF03BE 4E75                       		rts
FFFF03C0                            @NotFinished:
FFFF03C0 7000                       		moveq	#0,d0
FFFF03C2 1016                       		move.b	(a6),d0
FFFF03C4 D040                       		add.w	d0,d0
FFFF03C6 323B 0000                  		move.w	@DoList(pc,d0.w),d1
FFFF03CA 4EFB 1000                  		jmp	@DoList(pc,d1.w)
FFFF03CE                            
FFFF03CE                            @Finished:
FFFF03CE 3D6E 0004 0006              		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF03D4 4216                       		clr.b	(a6)
FFFF03D6                            @Return:
FFFF03D6 4E75                       		rts
FFFF03D8                            		
FFFF03D8                            ; =====================================================
FFFF03D8                            
FFFF03D8                            @DoList:
FFFF03D8 FFFE                       		dc.w	@Return-@DoList
FFFF03DA 0000                       		dc.w	@FadeOut-@DoList
FFFF03DC 0000                       		dc.w	@FadeIn-@DoList
FFFF03DE 0000                       		dc.w	@ToWhite-@DoList
FFFF03E0 0000                       		dc.w	@FromWhite-@DoList
FFFF03E2                            		even
FFFF03E2                            
FFFF03E2                            ; =====================================================
FFFF03E2                            ; ---------------------------------------------------
FFFF03E2                            ; FadeOut
FFFF03E2                            ; ---------------------------------------------------
FFFF03E2                            
FFFF03E2                            @FadeOut:
FFFF03E2 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
FFFF03E8 6A00 FFEC                  		bpl	@Return
FFFF03EC 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF03F2                            
FFFF03F2 4BF9 FFFF E882             		lea	(RAM_PalBuffer),a5
FFFF03F8 49F9 FFFF F36A             		lea	(RAM_PalBufferHint),a4
FFFF03FE                            
FFFF03FE 362E 0002                  		move.w	PalFadeStart(a6),d3
FFFF0402 3803                       		move.w	d3,d4
FFFF0404 E04C                       		lsr.w	#8,d4
FFFF0406 DAC4                       		adda	d4,a5
FFFF0408 D8C4                       		adda	d4,a4
FFFF040A                            
FFFF040A 7C00                       		moveq	#0,d6
FFFF040C 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
FFFF0410 7400                       		moveq	#0,d2
FFFF0412                            @Next:
FFFF0412 3015                       		move.w	(a5),d0
FFFF0414 3200                       		move.w	d0,d1
FFFF0416 0241 000E                  		and.w	#$E,d1
FFFF041A 4A41                       		tst.w	d1
FFFF041C 6700                       		beq.s	@RedLast
FFFF041E 0400 0002                  		sub.b	#2,d0
FFFF0422                            @RedLast:
FFFF0422 3200                       		move.w	d0,d1
FFFF0424 E849                       		lsr.w	#4,d1
FFFF0426 0241 000E                  		and.w	#$E,d1
FFFF042A 4A41                       		tst.w	d1
FFFF042C 6700                       		beq.s	@GreenLast
FFFF042E 0440 0020                  		sub.w	#$20,d0
FFFF0432                            @GreenLast:
FFFF0432 3200                       		move.w	d0,d1
FFFF0434 E049                       		lsr.w	#8,d1
FFFF0436 0241 000E                  		and.w	#$E,d1
FFFF043A 4A41                       		tst.w	d1
FFFF043C 6700                       		beq.s	@BlueLast
FFFF043E 0440 0200                  		sub.w	#$200,d0
FFFF0442                            @BlueLast:
FFFF0442 4A40                       		tst.w	d0
FFFF0444 6600 0000                  		bne.w	@NotBlack
FFFF0448 0642 0001                  		add.w	#1,d2
FFFF044C                            @NotBlack:
FFFF044C 3AC0                       		move.w	d0,(a5)+
FFFF044E 38C0                       		move.w	d0,(a4)+
FFFF0450 51CE FFC0                  		dbf	d6,@Next
FFFF0454                            
FFFF0454 7800                       		moveq	#0,d4
FFFF0456 1803                       		move.b	d3,d4
FFFF0458 B444                       		cmp.w	d4,d2
FFFF045A 6D00 FF7A                  		blt	@Return
FFFF045E                            
FFFF045E 08D6 0007                  		bset	#bitFinished,(a6)
FFFF0462 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF0468 4E75                       		rts
FFFF046A                            
FFFF046A                            ; =====================================================
FFFF046A                            ; ---------------------------------------------------
FFFF046A                            ; FadeIn
FFFF046A                            ; ---------------------------------------------------
FFFF046A                            
FFFF046A                            @FadeIn:
FFFF046A 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
FFFF0470 6A00 FF64                  		bpl	@Return
FFFF0474 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF047A                            
FFFF047A 4BF9 FFFF E882             		lea	(RAM_PalBuffer),a5
FFFF0480 47F9 FFFF F36A             		lea	(RAM_PalBufferHint),a3
FFFF0486 49F9 FFFF E0F2             		lea	(RAM_PalFadeBuff),a4
FFFF048C                            
FFFF048C 302E 0002                  		move.w	PalFadeStart(a6),d0
FFFF0490 3800                       		move.w	d0,d4
FFFF0492 E04C                       		lsr.w	#8,d4
FFFF0494 DAC4                       		adda	d4,a5
FFFF0496 D6C4                       		adda	d4,a3
FFFF0498                            
FFFF0498 7C00                       		moveq	#0,d6
FFFF049A 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
FFFF049E 7A00                       		moveq	#0,d5
FFFF04A0                            @Next_2:
FFFF04A0 3015                       		move.w	(a5),d0
FFFF04A2 3214                       		move.w	(a4),d1
FFFF04A4 3400                       		move.w	d0,d2
FFFF04A6 3601                       		move.w	d1,d3
FFFF04A8 0242 000E                  		and.w	#$E,d2
FFFF04AC 0243 000E                  		and.w	#$E,d3
FFFF04B0 B443                       		cmp.w	d3,d2
FFFF04B2 6C00                       		bge.s	@RedFirst
FFFF04B4 0640 0002                  		add.w	#2,d0
FFFF04B8                            @RedFirst:
FFFF04B8                            
FFFF04B8 3400                       		move.w	d0,d2
FFFF04BA 3601                       		move.w	d1,d3
FFFF04BC E84A                       		lsr.w	#4,d2
FFFF04BE E84B                       		lsr.w	#4,d3
FFFF04C0 0242 000E                  		and.w	#$E,d2
FFFF04C4 0243 000E                  		and.w	#$E,d3
FFFF04C8 B443                       		cmp.w	d3,d2
FFFF04CA 6C00                       		bge.s	@GreenFirst
FFFF04CC 0640 0020                  		add.w	#$20,d0
FFFF04D0                            @GreenFirst:
FFFF04D0                            
FFFF04D0 3400                       		move.w	d0,d2
FFFF04D2 3601                       		move.w	d1,d3
FFFF04D4 E04A                       		lsr.w	#8,d2
FFFF04D6 E04B                       		lsr.w	#8,d3
FFFF04D8 0242 000E                  		and.w	#$E,d2
FFFF04DC 0243 000E                  		and.w	#$E,d3
FFFF04E0 B443                       		cmp.w	d3,d2
FFFF04E2 6C00                       		bge.s	@BlueFirst
FFFF04E4 0640 0200                  		add.w	#$200,d0
FFFF04E8                            @BlueFirst:	
FFFF04E8 3400                       		move.w	d0,d2
FFFF04EA 3214                       		move.w	(a4),d1
FFFF04EC B242                       		cmp.w	d2,d1
FFFF04EE 6600                       		bne.s	@NotEqual
FFFF04F0 0645 0001                  		add.w	#1,d5
FFFF04F4                            @NotEqual:
FFFF04F4 D8FC 0002                  		adda	#2,a4
FFFF04F8 3AC0                       		move.w	d0,(a5)+
FFFF04FA 36C0                       		move.w	d0,(a3)+
FFFF04FC 51CE FFA2                  		dbf	d6,@Next_2
FFFF0500                            
FFFF0500 0445 0001                  		sub.w	#1,d5
FFFF0504 3D45 0008                  		move.w	d5,PalFadeSource(a6)
FFFF0508                            
FFFF0508 7800                       		moveq	#0,d4
FFFF050A 7400                       		moveq	#0,d2
FFFF050C 142E 0003                  		move.b	PalFadeStart+1(a6),d2
FFFF0510 1805                       		move.b	d5,d4
FFFF0512 B444                       		cmp.w	d4,d2
FFFF0514 6E00 FEC0                  		bgt	@Return
FFFF0518                            		
FFFF0518 08D6 0007                  		bset	#bitFinished,(a6)
FFFF051C 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF0522 4E75                       		rts
FFFF0524                            
FFFF0524                            ; =====================================================
FFFF0524                            ; ---------------------------------------------------
FFFF0524                            ; ToWhite
FFFF0524                            ; ---------------------------------------------------
FFFF0524                            
FFFF0524                            @ToWhite:
FFFF0524 4BF9 FFFF E882             		lea	(RAM_PalBuffer),a5
FFFF052A 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
FFFF0530 6A00 FEA4                  		bpl	@Return
FFFF0534 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF053A                            
FFFF053A 362E 0002                  		move.w	PalFadeStart(a6),d3
FFFF053E                            
FFFF053E 3C3C 003F                  		move.w	#$3F,d6
FFFF0542 7400                       		moveq	#0,d2
FFFF0544                            @NextW:
FFFF0544 3015                       		move.w	(a5),d0
FFFF0546 3200                       		move.w	d0,d1
FFFF0548 0241 000E                  		and.w	#$E,d1
FFFF054C 0C41 000E                  		cmp.w	#$E,d1
FFFF0550 6700                       		beq.s	@RedLastW
FFFF0552 0600 0002                  		add.b	#2,d0
FFFF0556                            @RedLastW:
FFFF0556 3200                       		move.w	d0,d1
FFFF0558 E849                       		lsr.w	#4,d1
FFFF055A 0241 000E                  		and.w	#$E,d1
FFFF055E 0C41 000E                  		cmp.w	#$E,d1
FFFF0562 6700                       		beq.s	@GreenLastW
FFFF0564 0640 0020                  		add.w	#$20,d0
FFFF0568                            @GreenLastW:
FFFF0568 3200                       		move.w	d0,d1
FFFF056A E049                       		lsr.w	#8,d1
FFFF056C 0241 000E                  		and.w	#$E,d1
FFFF0570 0C41 000E                  		cmp.w	#$E,d1
FFFF0574 6700                       		beq.s	@BlueLastW
FFFF0576 0640 0200                  		add.w	#$200,d0
FFFF057A                            @BlueLastW:
FFFF057A 0C40 0EEE                  		cmp.w	#$EEE,d0
FFFF057E 6D00 0000                  		blt.w	@NotWhite
FFFF0582 0642 0001                  		add.w	#1,d2
FFFF0586                            @NotWhite:
FFFF0586 3AC0                       		move.w	d0,(a5)+
FFFF0588 51CE FFBA                  		dbf	d6,@NextW
FFFF058C                            
FFFF058C 7800                       		moveq	#0,d4
FFFF058E 1803                       		move.b	d3,d4
FFFF0590 B444                       		cmp.w	d4,d2
FFFF0592 6D00 FE42                  		blt	@Return
FFFF0596                            		
FFFF0596 08D6 0007                  		bset	#bitFinished,(a6)
FFFF059A 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
FFFF05A0 4E75                       		rts
FFFF05A2                            
FFFF05A2                            ; =====================================================
FFFF05A2                            ; ---------------------------------------------------
FFFF05A2                            ; FromWhite
FFFF05A2                            ; ---------------------------------------------------
FFFF05A2                            
FFFF05A2                            @FromWhite:
FFFF05A2 08D6 0007                  		bset	#bitFinished,(a6)
FFFF05A6                            ; 		clr.b	(a6)
FFFF05A6 4E75                       		rts
FFFF05A8                            
FFFF05A8                            ; =====================================================
FFFF05A8                            ; ---------------------------------------------------
FFFF05A8                            ; Subs
FFFF05A8                            ; ---------------------------------------------------
FFFF05A8                            
FFFF05A8                            ; =====================================================
FFFF05A8                            ; MARS palette
FFFF05A8                            ; =====================================================
FFFF05A8                            		
FFFF05A8                            		
FFFF05A8                            ; =====================================================
FFFF05A8                            ; ---------------------------------------
FFFF05A8                            ; Subs
FFFF05A8                            ; ---------------------------------------
FFFF05A8                            
FFFF05A8                            ; ---------------------------------------
FFFF05A8                            ; PalFade_Set
FFFF05A8                            ; 
FFFF05A8                            ; Input:
FFFF05A8                            ; d0 - Request type
FFFF05A8                            ; d1 - Settings:
FFFF05A8                            ;      $SSEETTTT   SS StartFrom
FFFF05A8                            ;                  EE NumOfColors
FFFF05A8                            ;                TTTT Timer
FFFF05A8                            ; ---------------------------------------
FFFF05A8                            
FFFF05A8                            PalFade_Set:
FFFF05A8 41F9 FFFF E0E2             		lea	(RAM_PalFadeControl),a0
FFFF05AE                            
FFFF05AE 2141 0002                  		move.l	d1,PalFadeStart(a0)
FFFF05B2 3168 0004 0006             		move.w	PalFadeTmr(a0),PalFadeTmr+2(a0)
FFFF05B8 1080                       		move.b	d0,(a0)
FFFF05BA 4E75                       		rts
FFFF05BC                            
FFFF05BC                            ; ---------------------------------------
FFFF05BC                            ; PalFadeMars_Set
FFFF05BC                            ; 
FFFF05BC                            ; Input:
FFFF05BC                            ; d0 - Request type
FFFF05BC                            ; d1 - Settings:
FFFF05BC                            ;      $SSEETTTT   SS StartFrom
FFFF05BC                            ;                  EE NumOfColors
FFFF05BC                            ;                TTTT Timer
FFFF05BC                            ; ---------------------------------------
FFFF05BC                            
FFFF05BC                            PalFadeMars_Set:
FFFF05BC 4E75                       		rts
FFFF05BE                            		
FFFF05BE                            ; ---------------------------------------
FFFF05BE                            ; PalFade_Wait
FFFF05BE                            ; 
FFFF05BE                            ; Wait until fade finishes
FFFF05BE                            ; ---------------------------------------
FFFF05BE                            
FFFF05BE                            ;TODO: its broken, temporal solution
FFFF05BE                            
FFFF05BE                            PalFade_Wait:
FFFF05BE                            		
FFFF05BE                            		;MD only
FFFF05BE 4A39 FFFF E0E2               		tst.b	(RAM_PalFadeControl)
FFFF05C4 66F8                         		bne.s	PalFade_Wait
FFFF05C6                             		
FFFF05C6                            
FFFF05C6 4E75                       		rts
FFFF05C8                            
FFFF05C8                            ; ---------------------------------------
FFFF05C8                            ; PalFade_Wait_Flag
FFFF05C8                            ; 
FFFF05C8                            ; Wait until fade finishes
FFFF05C8                            ; 
FFFF05C8                            ; Output:
FFFF05C8                            ; bmi - Busy
FFFF05C8                            ; beq - Finished
FFFF05C8                            ; ---------------------------------------
FFFF05C8                            
FFFF05C8                            PalFade_Wait_Flag:
FFFF05C8 7CFF                        		moveq	#-1,d6
FFFF05CA 4A39 FFFF E0E2             		tst.b	(RAM_PalFadeControl)
FFFF05D0 6600                       		bne.s	@no
FFFF05D2 7C00                       		moveq	#0,d6
FFFF05D4                            @no:
FFFF05D4 4A46                       		tst.w	d6
FFFF05D6 4E75                       		rts	
FFFF05D6 4E75                       		rts	
FFFF05D8                            		include	"engine/subs/misc.asm"
FFFF05D8                            ; ====================================================================
FFFF05D8                            ; ---------------------------------------------
FFFF05D8                            ; Mode cleanup
FFFF05D8                            ; ---------------------------------------------
FFFF05D8                            
FFFF05D8                            Mode_Cleanup:
FFFF05D8 4DF9 FFFF E882             		lea	(RAM_PalBuffer),a6
FFFF05DE 303C 003F                  		move.w	#$3F,d0
FFFF05E2                            @PalBuf:
FFFF05E2 425E                       		clr.w	(a6)+
FFFF05E4 51C8 FFFC                  		dbf	d0,@PalBuf
FFFF05E8                            
FFFF05E8 4DF9 FFFF E5B2             		lea	(RAM_VerBuffer),a6
FFFF05EE 303C 001F                  		move.w	#(($7F)/4),d0
FFFF05F2                            @VerBuf:
FFFF05F2 429E                       		clr.l	(a6)+
FFFF05F4 51C8 FFFC                  		dbf	d0,@VerBuf
FFFF05F8                            
FFFF05F8 4DF9 FFFF E602             		lea	(RAM_SprBuffer),a6
FFFF05FE 303C 007F                  		move.w	#$7F,d0
FFFF0602                            @SprBuf:
FFFF0602 429E                       		clr.l	(a6)+
FFFF0604 51C8 FFFC                  		dbf	d0,@SprBuf
FFFF0608                            
FFFF0608 4DF9 FFFF E1F2             		lea	(RAM_HorBuffer),a6
FFFF060E 303C 00DF                  		move.w	#(($37F)/4),d0
FFFF0612                            @HorBuf:
FFFF0612 429E                       		clr.l	(a6)+
FFFF0614 51C8 FFFC                  		dbf	d0,@HorBuf
FFFF0618                            
FFFF0618 4E75                       		rts
FFFF061A                            
FFFF061A                            ; ====================================================================
FFFF061A                            ; ---------------------------------------------
FFFF061A                            ; Full fadein/fadeout
FFFF061A                            ; ---------------------------------------------
FFFF061A                            
FFFF061A                            Mode_FadeIn:
FFFF061A 7002                       		moveq	#ID_FadeIn,d0
FFFF061C 223C 003F 0001             		move.l	#$003F0001,d1
FFFF0622 6100 FF84                   		bsr	PalFade_Set
FFFF0626                            		
FFFF0626 6000 FF96                  		bra	PalFade_Wait
FFFF062A                            
FFFF062A                            Mode_FadeOut:
FFFF062A 7001                       		moveq	#ID_FadeOut,d0
FFFF062C 223C 003F 0001             		move.l	#$003F0001,d1
FFFF0632 6100 FF74                   		bsr	PalFade_Set
FFFF0636                            		
FFFF0636 6000 FF86                  		bra	PalFade_Wait
FFFF063A                            		
FFFF063A                            ; ====================================================================
FFFF063A                            ; ---------------------------------------------
FFFF063A                            ; Generic data loaders
FFFF063A                            ;
FFFF063A                            ; NonVDP:
FFFF063A                            ; a0 - Input
FFFF063A                            ; a1 - Output
FFFF063A                            ; d0 - Size
FFFF063A                            ; ---------------------------------------------
FFFF063A                            
FFFF063A                            LoadData_Byte:
FFFF063A 12D8                       		move.b	(a0)+,(a1)+
FFFF063C 51C8 FFFC                  		dbf	d0,LoadData_Byte
FFFF0640 4E75                       		rts
FFFF0642                            
FFFF0642                            LoadData_Word:
FFFF0642 32D8                       		move.w	(a0)+,(a1)+
FFFF0644 51C8 FFFC                  		dbf	d0,LoadData_Word
FFFF0648 4E75                       		rts
FFFF064A                            
FFFF064A                            LoadData_Long:
FFFF064A 22D8                       		move.l	(a0)+,(a1)+
FFFF064C 51C8 FFFC                  		dbf	d0,LoadData_Long
FFFF0650 4E75                       		rts
FFFF0652                            		
FFFF0652                            ; ====================================================================
FFFF0652                            ; ---------------------------------------------
FFFF0652                            ; RLE decompression
FFFF0652                            ; byte $FF is end-of-data
FFFF0652                            ;
FFFF0652                            ; a0 - Input
FFFF0652                            ; a1 - Output
FFFF0652                            ; ---------------------------------------------
FFFF0652                            
FFFF0652                            RLE_decompress:
FFFF0652 7000                       		moveq	#0,d0
FFFF0654 7200                       		moveq	#0,d1
FFFF0656 1018                       		move.b	(a0)+,d0
FFFF0658 0C00 00FF                  		cmp.b	#-1,d0
FFFF065C 6700 0000                  		beq	@Finish
FFFF0660 1218                       		move.b	(a0)+,d1
FFFF0662                            @CopyIt:
FFFF0662 12C1                       		move.b	d1,(a1)+
FFFF0664 51C8 FFFC                  		dbf	d0,@CopyIt
FFFF0668                            		
FFFF0668 60E8                       		bra.s	RLE_decompress
FFFF066A                            @Finish:
FFFF066A 4E75                       		rts
FFFF066C                                		
FFFF066C                            ; ====================================================================
FFFF066C                            ; ---------------------------------------------
FFFF066C                            ; CalcSine
FFFF066C                            ;
FFFF066C                            ; Input:
FFFF066C                            ; d0 | WORD
FFFF066C                            ;
FFFF066C                            ; Output:
FFFF066C                            ; d0 | WORD
FFFF066C                            ; d1 | WORD
FFFF066C                            ; ---------------------------------------------
FFFF066C                            
FFFF066C                            CalcSine:
FFFF066C 0240 00FF                  		and.w	#$FF,d0
FFFF0670 D040                       		add.w	d0,d0
FFFF0672 0640 0080                  		add.w	#$80,d0
FFFF0676 323B 0000                  		move.w	Sine_Data(pc,d0.w),d1
FFFF067A 0440 0080                  		sub.w	#$80,d0
FFFF067E 303B 0000                  		move.w	Sine_Data(pc,d0.w),d0
FFFF0682 4E75                       		rts	
FFFF0684                            
FFFF0684                            Sine_Data:
FFFF0684 0000 0006 000C 0012 0019+  		dc.w 0,	6, $C, $12, $19, $1F, $25, $2B,	$31, $38, $3E
FFFF069A 0044 004A 0050 0056 005C+  		dc.w $44, $4A, $50, $56, $5C, $61, $67,	$6D, $73, $78
FFFF06AE 007E 0083 0088 008E 0093+  		dc.w $7E, $83, $88, $8E, $93, $98, $9D,	$A2, $A7, $AB
FFFF06C2 00B0 00B5 00B9 00BD 00C1+  		dc.w $B0, $B5, $B9, $BD, $C1, $C5, $C9,	$CD, $D1, $D4
FFFF06D6 00D8 00DB 00DE 00E1 00E4+  		dc.w $D8, $DB, $DE, $E1, $E4, $E7, $EA,	$EC, $EE, $F1
FFFF06EA 00F3 00F4 00F6 00F8 00F9+  		dc.w $F3, $F4, $F6, $F8, $F9, $FB, $FC,	$FD, $FE, $FE
FFFF06FE 00FF 00FF 00FF 0100 00FF+  		dc.w $FF, $FF, $FF, $100, $FF, $FF, $FF, $FE, $FE, $FD
FFFF0712 00FC 00FB 00F9 00F8 00F6+  		dc.w $FC, $FB, $F9, $F8, $F6, $F4, $F3,	$F1, $EE, $EC
FFFF0726 00EA 00E7 00E4 00E1 00DE+  		dc.w $EA, $E7, $E4, $E1, $DE, $DB, $D8,	$D4, $D1, $CD
FFFF073A 00C9 00C5 00C1 00BD 00B9+  		dc.w $C9, $C5, $C1, $BD, $B9, $B5, $B0,	$AB, $A7, $A2
FFFF074E 009D 0098 0093 008E 0088+  		dc.w $9D, $98, $93, $8E, $88, $83, $7E,	$78, $73, $6D
FFFF0762 0067 0061 005C 0056 0050+  		dc.w $67, $61, $5C, $56, $50, $4A, $44,	$3E, $38, $31
FFFF0776 002B 0025 001F 0019 0012+  		dc.w $2B, $25, $1F, $19, $12, $C, 6, 0,	-6, -$C, -$12
FFFF078C FFE7 FFE1 FFDB FFD5 FFCF+  		dc.w -$19, -$1F, -$25, -$2B, -$31, -$38, -$3E, -$44, -$4A
FFFF079E FFB0 FFAA FFA4 FF9F FF99+  		dc.w -$50, -$56, -$5C, -$61, -$67, -$6D, -$75, -$78, -$7E
FFFF07B0 FF7D FF78 FF72 FF6D FF68+  		dc.w -$83, -$88, -$8E, -$93, -$98, -$9D, -$A2, -$A7, -$AB
FFFF07C2 FF50 FF4B FF47 FF43 FF3F+  		dc.w -$B0, -$B5, -$B9, -$BD, -$C1, -$C5, -$C9, -$CD, -$D1
FFFF07D4 FF2C FF28 FF25 FF22 FF1F+  		dc.w -$D4, -$D8, -$DB, -$DE, -$E1, -$E4, -$E7, -$EA, -$EC
FFFF07E6 FF12 FF0F FF0D FF0C FF0A+  		dc.w -$EE, -$F1, -$F3, -$F4, -$F6, -$F8, -$F9, -$FB, -$FC
FFFF07F8 FF03 FF02 FF02 FF01 FF01+  		dc.w -$FD, -$FE, -$FE, -$FF, -$FF, -$FF, -$100,	-$FF, -$FF
FFFF080A FF01 FF02 FF02 FF03 FF04+  		dc.w -$FF, -$FE, -$FE, -$FD, -$FC, -$FB, -$F9, -$F8, -$F6
FFFF081C FF0C FF0D FF0F FF12 FF14+  		dc.w -$F4, -$F3, -$F1, -$EE, -$EC, -$EA, -$E7, -$E4, -$E1
FFFF082E FF22 FF25 FF28 FF2C FF2F+  		dc.w -$DE, -$DB, -$D8, -$D4, -$D1, -$CD, -$C9, -$C5, -$C1
FFFF0840 FF43 FF47 FF4B FF50 FF55+  		dc.w -$BD, -$B9, -$B5, -$B0, -$AB, -$A7, -$A2, -$9D, -$98
FFFF0852 FF6D FF72 FF78 FF7D FF82+  		dc.w -$93, -$8E, -$88, -$83, -$7E, -$78, -$75, -$6D, -$67
FFFF0864 FF9F FFA4 FFAA FFB0 FFB6+  		dc.w -$61, -$5C, -$56, -$50, -$4A, -$44, -$3E, -$38, -$31
FFFF0876 FFD5 FFDB FFE1 FFE7 FFEE+  		dc.w -$2B, -$25, -$1F, -$19, -$12, -$C,	-6, 0, 6, $C, $12
FFFF088C 0019 001F 0025 002B 0031+  		dc.w $19, $1F, $25, $2B, $31, $38, $3E,	$44, $4A, $50
FFFF08A0 0056 005C 0061 0067 006D+  		dc.w $56, $5C, $61, $67, $6D, $73, $78,	$7E, $83, $88
FFFF08B4 008E 0093 0098 009D 00A2+  		dc.w $8E, $93, $98, $9D, $A2, $A7, $AB,	$B0, $B5, $B9
FFFF08C8 00BD 00C1 00C5 00C9 00CD+  		dc.w $BD, $C1, $C5, $C9, $CD, $D1, $D4,	$D8, $DB, $DE
FFFF08DC 00E1 00E4 00E7 00EA 00EC+  		dc.w $E1, $E4, $E7, $EA, $EC, $EE, $F1,	$F3, $F4, $F6
FFFF08F0 00F8 00F9 00FB 00FC 00FD+  		dc.w $F8, $F9, $FB, $FC, $FD, $FE, $FE,	$FF, $FF, $FF
FFFF0904                            		even
FFFF0904                            		
FFFF0904                            ; ====================================================================
FFFF0904                            ; ---------------------------------------------
FFFF0904                            ; Sprites system
FFFF0904                            ; ---------------------------------------------
FFFF0904                            
FFFF0904                            ; TODO: talvez moverlo
FFFF0904                            
FFFF0904                            ; Start: $FFBDDA
FFFF0904                            ; End: $FFC05A
FFFF0904                            ; Size: $280 | $A0
FFFF0904                            
FFFF0904                            		rsreset
FFFF0904 =00000000                  sprite_free	rs.l	1
FFFF0904 =00000004                  sprite_link	rs.w	1
FFFF0904 =00000006                  sprite_used	rs.w	1
FFFF0904                            		
FFFF0904                            ; ---------------------------------------------
FFFF0904                            ; Sprites_Reset
FFFF0904                            ; ---------------------------------------------
FFFF0904                            
FFFF0904                            Sprites_Reset:
FFFF0904 4DF9 FFFF D8D2             		lea	(RAM_SprControl),a6
FFFF090A 2A6E 0000                  		movea.l	sprite_free(a6),a5
FFFF090E BAFC E602                  		cmpa	#((RAM_SprBuffer)&$FFFF),a5
FFFF0912 6D00                       		blt.s	@Full
FFFF0914                            @NextEntry:
FFFF0914                            ; 		tst.l	(a5)
FFFF0914                            ; 		beq.s	@Full
FFFF0914                            ; 		tst.l	4(a5)
FFFF0914                            ; 		beq.s	@Full
FFFF0914 BAFC E882                   		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
FFFF0918 6E00                        		bgt.s	@Full
FFFF091A 429D                        		clr.l	(a5)+
FFFF091C 429D                         		clr.l	(a5)+
FFFF091E BAFC E882                    		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
FFFF0922 6DF0                         		blt.s	@NextEntry
FFFF0924                            @Full:
FFFF0924 2D7C FFFF E602 0000        		move.l	#RAM_SprBuffer,sprite_free(a6)
FFFF092C 3D7C 0001 0004             		move.w	#1,sprite_link(a6)
FFFF0932                            @Return:
FFFF0932 4E75                       		rts
FFFF0934                            		
FFFF0934                            ; ====================================================================
FFFF0934                            ; ---------------------------------------------
FFFF0934                            ; SRAM
FFFF0934                            ; ---------------------------------------------
FFFF0934                            
FFFF0934                            SRAM_Init:
FFFF0934 13FC 0003 00A1 30F1        		move.b	#%11,($A130F1)		;read+write
FFFF093C 41F9 0020 0000             		lea	($200000),a0
FFFF0942 0108 0001                  		movep.w	1(a0),d0
FFFF0946 0C80 0000 4745             		cmp.l	#"GE",d0
FFFF094C 6700                       		beq.s	@exit
FFFF094E 43FA 0000                  		lea	@SramHead(pc),a1
FFFF0952 7006                       		moveq	#7-1,d0
FFFF0954                            @header:
FFFF0954 1019                       		move.b	(a1)+,d0
FFFF0956 1140 0001                  		move.b	d0,1(a0)
FFFF095A D0FC 0002                  		adda	#2,a0
FFFF095E 51C8 FFF4                  		dbf	d0,@header
FFFF0962                            @exit:
FFFF0962 13FC 0000 00A1 30F1        		move.b	#0,($A130F1)
FFFF096A 4E75                       		rts
FFFF096C                            
FFFF096C                            ; ---------------------------------------------
FFFF096C                            
FFFF096C 4745 4E59 5341 5645 00     @SramHead:	dc.b "GENYSAVE",0
FFFF0976 00                         		even
FFFF0976                            		
FFFF0976                            		
FFFF0976                            		include	"engine/subs/pads.asm"
FFFF0976                            ; ====================================================================
FFFF0976                            ; Joypads
FFFF0976                            ; ====================================================================
FFFF0976                            
FFFF0976                            		rsreset
FFFF0976 =00000000                  CtrlID		rs.b	1
FFFF0976 =00000001                  FightPad	rs.b	1		;only TRUE $01 or FALSE $00
FFFF0976 =00000002                  ExOnHold	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
FFFF0976 =00000003                  OnHold		rs.b	1		;SACBRLDU
FFFF0976 =00000004                  ExOnPress	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
FFFF0976 =00000005                  OnPress		rs.b	1		;SACBRLDU
FFFF0976 =00000006                  MouseX		rs.w	1		;TODO
FFFF0976 =00000008                  MouseY		rs.w	1
FFFF0976 =00000010                  Port2		equ	$10
FFFF0976                            
FFFF0976                            
FFFF0976 =00000001                  JoyUp		equ	%00000001
FFFF0976 =00000002                  JoyDown		equ	%00000010
FFFF0976 =00000004                  JoyLeft		equ	%00000100
FFFF0976 =00000008                  JoyRight	equ	%00001000
FFFF0976 =00000010                  JoyB		equ	%00010000
FFFF0976 =00000020                  JoyC		equ	%00100000
FFFF0976 =00000040                  JoyA		equ	%01000000
FFFF0976 =00000080                  JoyStart	equ	%10000000
FFFF0976 =00000000                  bitJoyUp	equ	0
FFFF0976 =00000001                  bitJoyDown	equ	1
FFFF0976 =00000002                  bitJoyLeft	equ	2
FFFF0976 =00000003                  bitJoyRight	equ	3
FFFF0976 =00000004                  bitJoyB		equ	4
FFFF0976 =00000005                  bitJoyC		equ	5
FFFF0976 =00000006                  bitJoyA		equ	6
FFFF0976 =00000007                  bitJoyStart	equ	7
FFFF0976                            
FFFF0976 =00000001                  JoyZ		equ	%00000001
FFFF0976 =00000002                  JoyY		equ	%00000010
FFFF0976 =00000004                  JoyX		equ	%00000100
FFFF0976 =00000008                  JoyMode		equ	%00001000
FFFF0976 =00000000                  bitJoyZ		equ	0
FFFF0976 =00000001                  bitJoyY		equ	1
FFFF0976 =00000002                  bitJoyX		equ	2
FFFF0976 =00000003                  bitJoyMode	equ	3
FFFF0976                            
FFFF0976                            ; --------------------------------------------
FFFF0976                            ; Pads_Init
FFFF0976                            ; --------------------------------------------
FFFF0976                            
FFFF0976                            Pads_Init:
FFFF0976 33FC 0100 00A1 1100        		move.w	#$100,($A11100)
FFFF097E 33FC 0100 00A1 1200        		move.w	#$100,($A11200)
FFFF0986                            @WaitZ80:
FFFF0986 0839 0000 00A1 1100        		btst	#0,($A11100)
FFFF098E 66F6                        		bne.s	@WaitZ80
FFFF0990                             
FFFF0990 7240                       		moveq	#$40,d1
FFFF0992 13C1 00A1 0009             		move.b	d1,($A10009).l
FFFF0998 13C1 00A1 000B             		move.b	d1,($A1000B).l
FFFF099E 13C1 00A1 000D             		move.b	d1,($A1000D).l
FFFF09A4                            
FFFF09A4 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF09AC 4E75                       		rts
FFFF09AE                            
FFFF09AE                            ; --------------------------------------------
FFFF09AE                            ; Pads_Read
FFFF09AE                            ; --------------------------------------------
FFFF09AE                            
FFFF09AE                            Pads_Read:
FFFF09AE 33FC 0100 00A1 1100        		move.w	#$100,($A11100)
FFFF09B6                            ; 		move.w	#$100,($A11200)
FFFF09B6                            @WaitZ80:
FFFF09B6 0839 0000 00A1 1100        		btst	#0,($A11100)
FFFF09BE 66F6                        		bne.s	@WaitZ80
FFFF09C0                             		
FFFF09C0 4BF9 FFFF D892             		lea	(RAM_Joypads),a5
FFFF09C6 7000                       		moveq	#0,d0
FFFF09C8 6100                       		bsr.s	@DoIt
FFFF09CA 4BF9 FFFF D8A2             		lea	(RAM_Joypads+Port2),a5
FFFF09D0 7001                       		moveq	#1,d0
FFFF09D2 6100                       		bsr.s	@DoIt
FFFF09D4                            
FFFF09D4 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF09DC 4E75                       		rts
FFFF09DE                            
FFFF09DE                            ; ---------------------------------------
FFFF09DE                            
FFFF09DE                            @DoIt:
FFFF09DE 4DF9 00A1 0003             		lea	($A10003).l,a6
FFFF09E4 E348                       		lsl.w	#1,d0
FFFF09E6 DCC0                       		add.w	d0,a6			;Add result to port
FFFF09E8 6100 0000                  		bsr	@FindJoypad
FFFF09EC 1A80                       		move.b	d0,(a5)
FFFF09EE                            
FFFF09EE 0C00 000F                                  cmp.b	#$F,d0
FFFF09F2 6700                                       beq.s	@End
FFFF09F4 0C00 000D                  		cmp.b	#$D,d0
FFFF09F8 6700                                       beq.s	@Controller
FFFF09FA 0C00 0007                    		cmp.b	#7,d0			;Multitap
FFFF09FE 6700                                       beq.s	@End
FFFF0A00 0C00 0003                  		cmp.b	#3,d0
FFFF0A04 6700 0000                                  beq	@Mouse
FFFF0A08                            
FFFF0A08                            @End:
FFFF0A08 4E75                       		rts
FFFF0A0A                            
FFFF0A0A                            ; ------------------------------------
FFFF0A0A                            ; Controller
FFFF0A0A                            ; ------------------------------------
FFFF0A0A                            
FFFF0A0A                            @Controller:
FFFF0A0A 1D7C 0040 0006             		move.b	#$40,6(a6)
FFFF0A10 4E71                       		nop
FFFF0A12 4E71                       		nop
FFFF0A14 1CBC 0040                  		move.b	#$40,(a6)		; Show CB|RLDU
FFFF0A18 4E71                       		nop
FFFF0A1A 4E71                       		nop
FFFF0A1C 1CBC 0000                  		move.b	#$00,(a6)		; Show SA|RLDU
FFFF0A20 4E71                       		nop
FFFF0A22 4E71                       		nop
FFFF0A24 1CBC 0040                  		move.b	#$40,(a6)		; Show CB|RLDU
FFFF0A28 4E71                       		nop
FFFF0A2A 4E71                       		nop
FFFF0A2C 1CBC 0000                  		move.b	#$00,(a6)		; Show SA|RLDU
FFFF0A30 4E71                       		nop
FFFF0A32 4E71                       		nop
FFFF0A34 1CBC 0040                  		move.b	#$40,(a6)		; "Okay OKAY!, I have more buttons"
FFFF0A38 4E71                       		nop
FFFF0A3A 4E71                       		nop
FFFF0A3C 1016                       		move.b	(a6),d0
FFFF0A3E 1CBC 0000                   		move.b	#$00,(a6)		; "Heres my ID"
FFFF0A42 4E71                         		nop
FFFF0A44 4E71                         		nop
FFFF0A46 1216                        		move.b	(a6),d1
FFFF0A48 1CBC 0040                   		move.b	#$40,(a6)
FFFF0A4C 4E71                        		nop
FFFF0A4E 4E71                        		nop
FFFF0A50                            		
FFFF0A50 7400                       		moveq	#0,d2
FFFF0A52 0241 000F                  		and.w	#$F,d1
FFFF0A56 0C41 000F                  		cmp.w	#$F,d1
FFFF0A5A 6600                       		bne.s	@Original
FFFF0A5C                            		
FFFF0A5C 7401                       		moveq	#1,d2
FFFF0A5E 7200                        		moveq	#0,d1
FFFF0A60 122D 0002                   		move.b	ExOnHold(a5),d1
FFFF0A64 4601                       		not.b	d1
FFFF0A66 B101                        		eor.b	d0,d1
FFFF0A68 C200                        		and.b	d0,d1
FFFF0A6A 0241 000F                   		and.w	#$F,d1
FFFF0A6E 1B41 0004                   		move.b	d1,ExOnPress(a5)
FFFF0A72 4600                        		not.b	d0
FFFF0A74 0240 000F                   		and.w	#$F,d0
FFFF0A78 1B40 0002                   		move.b	d0,ExOnHold(a5)
FFFF0A7C                             		
FFFF0A7C                            @Original:	
FFFF0A7C 1B42 0001                  		move.b	d2,FightPad(a5)
FFFF0A80                            	
FFFF0A80 1CBC 0000                  		move.b	#0,(a6)
FFFF0A84 4E71                       		nop
FFFF0A86 4E71                       		nop
FFFF0A88 1016                       		move.b	(a6),d0
FFFF0A8A E508                       		lsl.b	#2,d0
FFFF0A8C 0200 00C0                  		and.b	#$C0,d0	
FFFF0A90 1CBC 0040                  		move.b	#$40,(a6)
FFFF0A94 4E71                       		nop
FFFF0A96 4E71                       		nop
FFFF0A98 1216                       		move.b	(a6),d1
FFFF0A9A 0201 003F                  		and.b	#$3F,d1
FFFF0A9E 8001                       		or.b	d1,d0
FFFF0AA0 4600                       		not.b	d0
FFFF0AA2 122D 0003                  		move.b	OnHold(a5),d1
FFFF0AA6 B101                       		eor.b	d0,d1
FFFF0AA8 1B40 0003                  		move.b	d0,OnHold(a5)
FFFF0AAC C200                       		and.b	d0,d1
FFFF0AAE 1B41 0005                  		move.b	d1,OnPress(a5)
FFFF0AB2 4E75                       		rts
FFFF0AB4                            
FFFF0AB4                            ; ; ------------------------------------
FFFF0AB4                            ; ; Multitap
FFFF0AB4                            ; ; ------------------------------------
FFFF0AB4                            ; 
FFFF0AB4                            ; @Multitap:
FFFF0AB4                            ; 		bra	@End
FFFF0AB4                            
FFFF0AB4                            ; ------------------------------------
FFFF0AB4                            ; Sega Mega Mouse
FFFF0AB4                            ;
FFFF0AB4                            ; in: d1 - port number
FFFF0AB4                            ; out: d0 - status
FFFF0AB4                            ;      d2
FFFF0AB4                            ; ------------------------------------
FFFF0AB4                            
FFFF0AB4                            @Mouse:
FFFF0AB4 7200                       		moveq	#0,d1
FFFF0AB6 6100 0000                  		bsr	@ReadIt
FFFF0ABA                            		
FFFF0ABA 2002                       		move.l	d2,d0
FFFF0ABC 4840                       		swap	d0
FFFF0ABE 0240 00FF                  		and.w	#$FF,d0
FFFF0AC2 122D 0003                  		move.b	OnHold(a5),d1
FFFF0AC6 B101                       		eor.b	d0,d1
FFFF0AC8 1B40 0003                  		move.b	d0,OnHold(a5)
FFFF0ACC C200                        		and.b	d0,d1
FFFF0ACE 1B41 0005                  		move.b	d1,OnPress(a5)
FFFF0AD2                            		
FFFF0AD2                            		;TODO
FFFF0AD2 3002                       		move.w	d2,d0
FFFF0AD4 0240 00FF                  		and.w	#$FF,d0
FFFF0AD8 4880                       		ext.w	d0
FFFF0ADA 4440                       		neg.w	d0
FFFF0ADC 3B40 0008                   		move.w	d0,MouseY(a5)
FFFF0AE0                             		
FFFF0AE0 E04A                        		lsr.w	#8,d2
FFFF0AE2 0242 00FF                   		and.w	#$FF,d2
FFFF0AE6 4882                       		ext.w	d2
FFFF0AE8 3B42 0006                   		move.w	d2,MouseX(a5)
FFFF0AEC 6000 FF1A                   		bra	@End
FFFF0AF0                            
FFFF0AF0                            ; ------------------------------------
FFFF0AF0                            
FFFF0AF0                            @ReadIt:
FFFF0AF0 48E7 5902                  		movem.l	d1/d3/d4/d7/a6,-(sp)
FFFF0AF4                            
FFFF0AF4 7000                       		moveq	#0,d0			;Error flag
FFFF0AF6 0C41 0002                  		cmp.w	#2,d1			;Control ID < 2?
FFFF0AFA 6200 0000                  		bhi	@Error
FFFF0AFE D241                       		add.w	d1,d1
FFFF0B00                            	;	lea	($A10003),a6
FFFF0B00                            @Connect:
FFFF0B00 1D7C 0060 0006             		move.b	#$60,6(a6)
FFFF0B06 4E71                                       nop
FFFF0B08 4E71                                       nop
FFFF0B0A 1CBC 0060                                  move.b	#$60,(a6)		;TH,TR=11 (END DATA)
FFFF0B0E 7400                                       moveq	#0,d2
FFFF0B10 7600                                       moveq	#0,d3
FFFF0B12                            @NotReady:
FFFF0B12 0816 0004                   		btst	#4,(a6)
FFFF0B16 67FA                        		beq.s	@NotReady
FFFF0B18 1816                        		move.b	(a6),d4			;d4.b = ? 1 1 1 | 0 0 0
FFFF0B1A 0204 000F                   		and.b	#$F,d4
FFFF0B1E 4A04                        		tst.b	d4
FFFF0B20 6600 0000                   		bne	@Error			;No mouse
FFFF0B24 1CBC 0020                   		move.b	#$20,(a6)		;Select t1 m1 1 1
FFFF0B28 3E3C 00FE                   		move.w	#$FE,d7
FFFF0B2C                            @lp1:
FFFF0B2C 0816 0004                  		btst.b	#4,(a6)
FFFF0B30 6600                       		bne.s	@Mouse_10
FFFF0B32 51CF FFF8                  		dbra	d7,@lp1
FFFF0B36 6000 0000                  		bra	@Error
FFFF0B3A                            		
FFFF0B3A                            @Mouse_10:
FFFF0B3A 1016                       		move.b	(a6),d0			;d0 = xxxx|xxxx|xxxx|t1 m1 1 1
FFFF0B3C E148                       		lsl.w	#8,d0			;d0 = xxxx|t1 m1 1 1|0000|0000
FFFF0B3E 1CBC 0000                  		move.b	#0,(a6)
FFFF0B42 4E71                       		nop
FFFF0B44                            @lp2:
FFFF0B44 0816 0004                  		btst	#4,(a6)
FFFF0B48 6700                       		beq.s	@Mouse_20
FFFF0B4A 51CF FFF8                  		dbra	d7,@lp2
FFFF0B4E 6000 0000                  		bra	@Error
FFFF0B52                            		
FFFF0B52                            @Mouse_20:
FFFF0B52 1616                       		move.b	(a6),d3
FFFF0B54 1CBC 0020                  		move.b	#$20,(a6)
FFFF0B58 E14B                       		lsl.w	#8,d3
FFFF0B5A                            @lp3:
FFFF0B5A 0816 0004                  		btst	#4,(a6)
FFFF0B5E 6600                       		bne.s	@Mouse_30
FFFF0B60 51CF FFF8                  		dbra	d7,@lp3
FFFF0B64 6000 0000                  		bra	@Error
FFFF0B68                            		
FFFF0B68                            @Mouse_30:
FFFF0B68 1616                       		move.b	(a6),d3
FFFF0B6A E90B                       		lsl.b	#4,d3
FFFF0B6C E84B                       		lsr.w	#4,d3
FFFF0B6E 1CBC 0000                  		move.b	#0,(a6)
FFFF0B72 8043                       		or.w	d3,d0
FFFF0B74 7600                       		moveq	#0,d3
FFFF0B76                            @lp4:
FFFF0B76 0816 0004                  		btst	#4,(a6)
FFFF0B7A 6700                                       beq.s	@Mouse_40
FFFF0B7C 51CF FFF8                                  dbra	d7,@lp4
FFFF0B80 6000 0000                                  bra	@Error
FFFF0B84                            
FFFF0B84                            @Mouse_40:
FFFF0B84 1416                       		move.b	(a6),d2
FFFF0B86 1CBC 0020                  		move.b	#$20,(a6)
FFFF0B8A E14A                       		lsl.w	#8,d2
FFFF0B8C                            @lp5:
FFFF0B8C 0816 0004                  		btst	#4,(a6)
FFFF0B90 6600                       		bne.s	@Mouse_50
FFFF0B92 51CF FFF8                  		dbra	d7,@lp5
FFFF0B96 6000 0000                  		bra	@Error
FFFF0B9A                            		
FFFF0B9A                            @Mouse_50:
FFFF0B9A 1416                       		move.b	(a6),d2
FFFF0B9C 1CBC 0000                  		move.b	#0,(a6)
FFFF0BA0 E90A                       		lsl.b	#4,d2
FFFF0BA2 E94A                       		lsl.w	#4,d2
FFFF0BA4                            @lp6:
FFFF0BA4 0816 0004                  		btst	#4,(a6)
FFFF0BA8 6700                       		beq.s	@Mouse_60
FFFF0BAA 51CF FFF8                  		dbra	d7,@lp6
FFFF0BAE 6000 0000                  		bra	@Error
FFFF0BB2                            
FFFF0BB2                            @Mouse_60:
FFFF0BB2 1416                       		move.b	(a6),d2
FFFF0BB4 1CBC 0020                  		move.b	#$20,(a6)
FFFF0BB8 E90A                       		lsl.b	#4,d2
FFFF0BBA E98A                       		lsl.l	#4,d2
FFFF0BBC                            @lp7:
FFFF0BBC 0816 0004                  		btst	#4,(a6)
FFFF0BC0 6600                       		bne.s	@Mouse_70
FFFF0BC2 51CF FFF8                  		dbra	d7,@lp7
FFFF0BC6 6000                       		bra.s	@Error
FFFF0BC8                            
FFFF0BC8                            @Mouse_70:
FFFF0BC8 1416                       		move.b	(a6),d2
FFFF0BCA 1CBC 0000                  		move.b	#0,(a6)
FFFF0BCE E90A                       		lsl.b	#4,d2
FFFF0BD0 E98A                       		lsl.l	#4,d2
FFFF0BD2                            @lp8:
FFFF0BD2 0816 0004                  		btst	#4,(a6)
FFFF0BD6 6700                       		beq.s	@Mouse_80
FFFF0BD8 51CF 0000                  		dbra	d7,@Mouse_80
FFFF0BDC 6000                       		bra.s	@Error
FFFF0BDE                            
FFFF0BDE                            @Mouse_80:
FFFF0BDE 1416                       		move.b	(a6),d2
FFFF0BE0 1CBC 0020                  		move.b	#$20,(a6)
FFFF0BE4 E90A                       		lsl.b	#4,d2
FFFF0BE6 E98A                       		lsl.l	#4,d2
FFFF0BE8                            @lp9:
FFFF0BE8 0816 0004                  		btst	#4,(a6)
FFFF0BEC 6700                       		beq.s	@Mouse_90
FFFF0BEE 51CF FFF8                  		dbra	d7,@lp9
FFFF0BF2 6000                       		bra.s	@Error
FFFF0BF4                            
FFFF0BF4                            @Mouse_90:
FFFF0BF4 1416                       		move.b	(a6),d2
FFFF0BF6 1CBC 0060                  		move.b	#$60,(a6)
FFFF0BFA E90A                       		lsl.b	#4,d2
FFFF0BFC E88A                       		lsr.l	#4,d2
FFFF0BFE                            @lp10:
FFFF0BFE 0816 0004                  		btst	#4,(a6)
FFFF0C02 67FA                       		beq.s	@lp10
FFFF0C04 0082 0000 0000             		or.l	#0,d2
FFFF0C0A                            @Exit:
FFFF0C0A 33FC 0000 00A1 1100        		move.w	#0,($A11100)
FFFF0C12 4CDF 409A                  		movem.l	(sp)+,d1/d3/d4/d7/a6
FFFF0C16 4E75                       		rts
FFFF0C18                            
FFFF0C18                            @Error:
FFFF0C18 1CBC 0060                  		move.b	#$60,(a6)
FFFF0C1C 4E71                       		nop
FFFF0C1E 4E71                       		nop
FFFF0C20                            @erlp:
FFFF0C20 1CBC 0004                  		move.b	#4,(a6)
FFFF0C24 67FA                       		beq.s	@erlp
FFFF0C26 0082 8000 0000             		or.l	#$80000000,d2
FFFF0C2C 7000                       		moveq	#0,d0
FFFF0C2E 33FC 0000 00A1 1100        		move.w	#0,($A11100)
FFFF0C36 4CDF 409A                  		movem.l	(sp)+,d1/d3/d4/d7/a6
FFFF0C3A 4E75                       		rts
FFFF0C3C                            
FFFF0C3C                            ; ------------------------------------
FFFF0C3C                            ; d0.w
FFFF0C3C                            ; $0F - Nothing
FFFF0C3C                            ; $0D - Controller
FFFF0C3C                            ; $07 - Multitap
FFFF0C3C                            ; $03 - Mouse
FFFF0C3C                            ;
FFFF0C3C                            ; d1.l
FFFF0C3C                            ; $00xx00yy - Key presses
FFFF0C3C                            ; ------------------------------------
FFFF0C3C                            
FFFF0C3C                            @FindJoypad:
FFFF0C3C 7000                       		moveq	#0,d0
FFFF0C3E 1CBC 0070                  		move.b	#$70,(a6)
FFFF0C42 6100                       		bsr.s	@GetPress
FFFF0C44 4841                       		swap	d1
FFFF0C46 1CBC 0030                  		move.b	#$30,(a6)
FFFF0C4A D040                       		add.w	d0,d0
FFFF0C4C                            
FFFF0C4C                            @GetPress:
FFFF0C4C 1216                       		move.b	(a6),d1
FFFF0C4E 1401                       		move.b	d1,d2
FFFF0C50 0202 000C                  		and.b	#$C,d2
FFFF0C54 6700                       		beq.s	@Nope1
FFFF0C56 5240                       		addq.w	#1,d0
FFFF0C58                            
FFFF0C58                            @Nope1:
FFFF0C58 D040                       		add.w	d0,d0
FFFF0C5A 1601                       		move.b	d1,d3
FFFF0C5C 0243 0003                  		and.w	#3,d3
FFFF0C60 6700                       		beq.s	@Nope2
FFFF0C62 5240                       		addq.w	#1,d0
FFFF0C64                            
FFFF0C64                            @Nope2:
FFFF0C64 4E75                       		rts
FFFF0C66                            		
FFFF0C66                            		
FFFF0C66                            		include	"engine/subs/dma.asm"
FFFF0C66                            ; =====================================================================================
FFFF0C66                            ; DMA
FFFF0C66                            ; =====================================================================================
FFFF0C66                            
FFFF0C66                            ; -----------------------------------
FFFF0C66                            ; Read
FFFF0C66                            ; -----------------------------------
FFFF0C66                            
FFFF0C66                            ; ROM data
FFFF0C66                            ; Size
FFFF0C66                            ; VRAM Destiantion
FFFF0C66                            
FFFF0C66                            DMA_Read:
FFFF0C66 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
FFFF0C6E                            @WaitZ80:
FFFF0C6E 0839 0000 00A1 1100        		btst	#0,($A11100).l
FFFF0C76 66F6                       		bne.s	@WaitZ80
FFFF0C78                            		
FFFF0C78 4DF9 FFFF DCE2              		lea	(RAM_DMA_Buffer),a6
FFFF0C7E                             		
FFFF0C7E 381E                         		move.w	(a6)+,d4
FFFF0C80 4A44                         		tst.w	d4
FFFF0C82 6700 0000                    		beq	@FinishList
FFFF0C86 0444 0001                    		sub.w	#1,d4
FFFF0C8A                            @NextEntry:
FFFF0C8A 2C1E                        		move.l	(a6)+,d6			;ROM address
FFFF0C8C E28E                         		lsr.l	#1,d6
FFFF0C8E 0606 0001                   		add.b	#1,d6
FFFF0C92 3A3C 9500                    		move.w	#$9500,d5
FFFF0C96 1A06                        		move.b	d6,d5
FFFF0C98 33C5 00C0 0004              		move.w	d5,($C00004).l
FFFF0C9E 2A3C 9700 9600               		move.l	#$97009600,d5			;ROM Address (XXXX00)
FFFF0CA4 E08E                        		lsr.l	#8,d6
FFFF0CA6 1A06                        		move.b	d6,d5
FFFF0CA8 4845                        		swap	d5
FFFF0CAA E08E                        		lsr.l	#8,d6
FFFF0CAC 1A06                        		move.b	d6,d5
FFFF0CAE 23C5 00C0 0004              		move.l	d5,($C00004).l
FFFF0CB4                             		
FFFF0CB4 2A3C 9400 9300              		move.l	#$94009300,d5			;Size
FFFF0CBA 3C1E                        		move.w	(a6)+,d6
FFFF0CBC 1A06                        		move.b	d6,d5
FFFF0CBE 4845                        		swap	d5
FFFF0CC0 E04E                        		lsr.w	#8,d6
FFFF0CC2 1A06                        		move.b	d6,d5
FFFF0CC4 23C5 00C0 0004              		move.l	d5,($C00004).l
FFFF0CCA                             		
FFFF0CCA 3C1E                        		move.w	(a6)+,d6			;VRAM Destiantion
FFFF0CCC 0246 07FF                   		and.w	#$7FF,d6
FFFF0CD0 EB4E                        		lsl.w	#5,d6				;x20
FFFF0CD2 0286 0000 FFE0              		and.l	#$FFE0,d6
FFFF0CD8 E58E                        		lsl.l	#2,d6
FFFF0CDA E44E                        		lsr.w	#2,d6
FFFF0CDC 4846                        		swap	d6
FFFF0CDE 0086 4000 0080              		or.l	#$40000080,d6
FFFF0CE4 23C6 00C0 0004              		move.l	d6,($C00004)
FFFF0CEA 51CC FF9E                   		dbf	d4,@NextEntry
FFFF0CEE                            @FinishList:
FFFF0CEE 4279 FFFF DCE2             		clr.w	(RAM_DMA_Buffer)
FFFF0CF4 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF0CFC 4E75                        		rts
FFFF0CFE                            
FFFF0CFE                            ; -----------------------------------
FFFF0CFE                            ; Set new entry to the list
FFFF0CFE                            ; 
FFFF0CFE                            ; Input:
FFFF0CFE                            ; d0 - ROM Address
FFFF0CFE                            ; d1 - Size
FFFF0CFE                            ; d2 - VRAM
FFFF0CFE                            ; 
FFFF0CFE                            ; Uses:
FFFF0CFE                            ; a2/d3
FFFF0CFE                            ; -----------------------------------
FFFF0CFE                            
FFFF0CFE                            DMA_Set:
FFFF0CFE 45F9 FFFF DCE2             		lea	(RAM_DMA_Buffer),a2
FFFF0D04 0C52 0040                  		cmp.w	#64,(a2)
FFFF0D08 6C00                       		bge.s	@Return
FFFF0D0A 3612                       		move.w	(a2),d3
FFFF0D0C E74B                       		lsl.w	#3,d3			;Size: 8
FFFF0D0E D4C3                       		adda 	d3,a2
FFFF0D10 D4FC 0002                  		adda	#2,a2
FFFF0D14                            
FFFF0D14 24C0                       		move.l	d0,(a2)+		;ROM Address
FFFF0D16 34C1                       		move.w	d1,(a2)+
FFFF0D18 34C2                       		move.w	d2,(a2)+
FFFF0D1A 0679 0001 FFFF DCE2        		add.w	#1,(RAM_DMA_Buffer)
FFFF0D22                            @Return:
FFFF0D22 4E75                       		rts
FFFF0D24                            
FFFF0D24                            ; -----------------------------------
FFFF0D24                            ; Quick set
FFFF0D24                            ; 
FFFF0D24                            ; External
FFFF0D24                            ; 
FFFF0D24                            ; d0 - Destiantion
FFFF0D24                            ; d1 - Source
FFFF0D24                            ; d2 - Size
FFFF0D24                            ; -----------------------------------
FFFF0D24                            
FFFF0D24                            DMA_QuickSet:
FFFF0D24 48E7 0060                  		movem.l	a1-a2,-(sp)
FFFF0D28 2241                       		move.l	d1,a1
FFFF0D2A 5481                       		addq.l	#2,d1
FFFF0D2C E281                       		asr.l	#1,d1
FFFF0D2E 45F9 00C0 0004             		lea	($C00004).l,a2
FFFF0D34 34BC 8F02                  		move.w	#$8F02,(a2)
FFFF0D38                            ; 		move.w	#$8164,d3
FFFF0D38                            ; 		bset	#4,d3
FFFF0D38                            ; 		move.w	d3,(a2)
FFFF0D38 263C 0094 0000             		move.l	#$940000,d3
FFFF0D3E 3602                       		move.w	d2,d3
FFFF0D40 E18B                       		lsl.l	#8,d3
FFFF0D42 363C 9300                  		move.w	#$9300,d3
FFFF0D46 1602                       		move.b	d2,d3
FFFF0D48 2483                       		move.l	d3,(a2)
FFFF0D4A 263C 0096 0000             		move.l	#$960000,d3
FFFF0D50 3601                       		move.w	d1,d3
FFFF0D52 E18B                       		lsl.l	#8,d3
FFFF0D54 363C 9500                  		move.w	#$9500,d3
FFFF0D58 1601                       		move.b	d1,d3
FFFF0D5A 2483                       		move.l	d3,(a2)
FFFF0D5C 4841                       		swap	d1
FFFF0D5E 363C 9700                  		move.w	#$9700,d3
FFFF0D62 1601                       		move.b	d1,d3
FFFF0D64 3483                       		move.w	d3,(a2)
FFFF0D66 0080 4000 0080             		or.l	#$40000080,d0
FFFF0D6C 4840                       		swap	d0
FFFF0D6E 3480                       		move.w	d0,(a2)
FFFF0D70 4840                       		swap	d0
FFFF0D72 3F00                       		move.w	d0,-(sp)
FFFF0D74 349F                       		move.w	(sp)+,(a2)
FFFF0D76                            ; 		move.w	#$8164,(a2)
FFFF0D76 0240 FF7F                  		and.w	#$FF7F,d0
FFFF0D7A 2480                       		move.l	d0,(a2)
FFFF0D7C 2551 FFFC                  		move.l	(a1),-4(a2)
FFFF0D80 34BC 8F02                  		move.w	#$8F02,(a2)
FFFF0D84 4CDF 0600                  		movem.l	(sp)+,a1-a2
FFFF0D88 4E75                       		rts
FFFF0D8A                            		
FFFF0D8A                            		
FFFF0D8A                                            include	"engine/ints.asm"
FFFF0D8A                            ; ====================================================================
FFFF0D8A                            ; -------------------------------------------------
FFFF0D8A                            ; VBlank
FFFF0D8A                            ; -------------------------------------------------
FFFF0D8A                            
FFFF0D8A                            MD_Vint:
FFFF0D8A 4AB9 FFFF D882             		tst.l	(RAM_VIntAddr)
FFFF0D90 6700                       		beq.s	@NoVIntEx
FFFF0D92                            		
FFFF0D92 48E7 FFFE                  		movem.l	a0-a6/d0-d7,-(sp)
FFFF0D96 4EB9 FFFF D880             		jsr	(RAM_VIntJumpTo)
FFFF0D9C 4CDF 7FFF                  		movem.l	(sp)+,a0-a6/d0-d7
FFFF0DA0                            @NoVIntEx:
FFFF0DA0 52B9 FFFF D88C             		addq.l	#1,(RAM_FrameCount)
FFFF0DA6 08F9 0001 FFFF D890        		bset	#1,(RAM_VIntWait)
FFFF0DAE 08B9 0000 FFFF D890        		bclr	#bitFrameWait,(RAM_VIntWait)
FFFF0DB6 4E73                       		rte
FFFF0DB8                            
FFFF0DB8                            ; ====================================================================
FFFF0DB8                            ; -------------------------------------------------
FFFF0DB8                            ; HBlank
FFFF0DB8                            ; -------------------------------------------------
FFFF0DB8                            
FFFF0DB8                            MD_Hint:		
FFFF0DB8 4EB9 FFFF D886             		jsr	(RAM_HIntJumpTo)
FFFF0DBE 4E73                       		rte
FFFF0DC0                            		
FFFF0DC0                            ; ====================================================================
FFFF0DC0                            ; -------------------------------------------------
FFFF0DC0                            ; Separate routines
FFFF0DC0                            ; -------------------------------------------------
FFFF0DC0                            
FFFF0DC0                            VInt_Default:
FFFF0DC0 6100 F5E6                  		bsr	PalFade
FFFF0DC4 6100 0000                  		bsr	SMEG_Upd
FFFF0DC8 6100 FBE4                  		bsr	Pads_Read
FFFF0DCC                            ;  		bsr	DMA_Read
FFFF0DCC                             	
FFFF0DCC                            ; -------------------------------------------------
FFFF0DCC                            
FFFF0DCC                            Dma_Visual:
FFFF0DCC                            ; 		move.w	#$100,($A11100)
FFFF0DCC                            ; @WaitZ80:
FFFF0DCC                            ; 		btst	#0,($A11100)
FFFF0DCC                            ;  		bne.s	@WaitZ80
FFFF0DCC                             		
FFFF0DCC                            ; -----------
FFFF0DCC                             
FFFF0DCC 4DF9 00C0 0004             		lea	($C00004),a6
FFFF0DD2                            		
FFFF0DD2                            ; -----------
FFFF0DD2                            ; Palette
FFFF0DD2                            ; -----------
FFFF0DD2 2CBC 9340 9400              		move.l	#$9400+((($80)&$FF00)>>9)|(($9300+((($80)&$FF)>>1))<<16),(a6)
FFFF0DD8 2CBC 9541 96F4              		move.l	#$9600+(((RAM_PalBuffer>>1)&$FF00)>>8)|(($9500+((RAM_PalBuffer>>1)&$FF))<<16),(a6)
FFFF0DDE 3CBC 977F                  		move.w	#$9700+((((RAM_PalBuffer>>1)&$FF0000)>>16)&$7F),(a6)
FFFF0DE2 3CBC C000                  		move.w	#$C000,(a6)
FFFF0DE6 3F3C 0080                  		move.w	#$0000|$80,-(sp)
FFFF0DEA 3C9F                       		move.w	(sp)+,(a6)
FFFF0DEC                            ; -----------
FFFF0DEC                            ; Sprites
FFFF0DEC                            ; -----------
FFFF0DEC 2CBC 9401 9340              		move.l	#(($9400|(((($280)>>1)&$FF00)>>8))<<16)|($9300|((($280)>>1)&$FF)),(a6)
FFFF0DF2 2CBC 9501 96F3              		move.l	#$9600+(((RAM_SprBuffer>>1)&$FF00)>>8)|(($9500+((RAM_SprBuffer>>1)&$FF))<<16),(a6)
FFFF0DF8 3CBC 977F                  		move.w	#$9700+((((RAM_SprBuffer>>1)&$FF0000)>>16)&$7F),(a6)
FFFF0DFC 3CBC 7800                  		move.w	#$7800,(a6)
FFFF0E00 3F3C 0083                  		move.w	#$0003|$80,-(sp)
FFFF0E04 3C9F                       		move.w	(sp)+,(a6)
FFFF0E06                            ; -----------	
FFFF0E06                            ; Horizontal
FFFF0E06                            ; -----------
FFFF0E06 2CBC 9401 93E0              		move.l	#(($9400|(((((240*4))>>1)&$FF00)>>8))<<16)|($9300|((((240*4))>>1)&$FF)),(a6)
FFFF0E0C 2CBC 95F9 96F0              		move.l	#$9600+(((RAM_HorBuffer>>1)&$FF00)>>8)|(($9500+((RAM_HorBuffer>>1)&$FF))<<16),(a6)
FFFF0E12 3CBC 977F                  		move.w	#$9700+((((RAM_HorBuffer>>1)&$FF0000)>>16)&$7F),(a6)
FFFF0E16 3CBC 7C00                  		move.w	#$7C00,(a6)
FFFF0E1A 3F3C 0083                  		move.w	#$0003|$80,-(sp)
FFFF0E1E 3C9F                       		move.w	(sp)+,(a6)
FFFF0E20                            	
FFFF0E20                            ; -----------
FFFF0E20                            ; Vertical
FFFF0E20                            ; -----------
FFFF0E20                            
FFFF0E20                            ; TODO checar bien esto
FFFF0E20                            
FFFF0E20 2CBC 9400 9328              		move.l	#(($9400|((((($50))>>1)&$FF00)>>8))<<16)|($9300|(((($50))>>1)&$FF)),(a6)
FFFF0E26 2CBC 95D9 96F2              		move.l	#$9600+(((RAM_VerBuffer>>1)&$FF00)>>8)|(($9500+((RAM_VerBuffer>>1)&$FF))<<16),(a6)
FFFF0E2C 3CBC 977F                  		move.w	#$9700+((((RAM_VerBuffer>>1)&$FF0000)>>16)&$7F),(a6)
FFFF0E30 3CBC 4000                  		move.w	#$4000,(a6)
FFFF0E34 3F3C 0090                  		move.w	#$0010|$80,-(sp)
FFFF0E38 3C9F                       		move.w	(sp)+,(a6)
FFFF0E3A                            
FFFF0E3A                            ; 		move.w	#0,($A11100).l
FFFF0E3A                            		
FFFF0E3A                            ; 		lea	(RAM_PalBuffer),a0
FFFF0E3A                            ;  		move.l	#$C0000000,($C00004).l
FFFF0E3A                            ;  		move.w	#$3F,d0
FFFF0E3A                            ; @PalBuf:
FFFF0E3A                            ; 		move.w	(a0)+,($C00000).l
FFFF0E3A                            ;  		dbf	d0,@PalBuf
FFFF0E3A                            ; 
FFFF0E3A                            ; 		lea	(RAM_SprBuffer),a0
FFFF0E3A                            ; 		move.l	#$78000003,($C00004).l
FFFF0E3A                            ; 		move.w	#$9F,d0
FFFF0E3A                            ; @SprBuf:
FFFF0E3A                            ; 		move.l	(a0)+,($C00000).l
FFFF0E3A                            ; 		dbf	d0,@SprBuf
FFFF0E3A                            ; 		
FFFF0E3A                            ; 		lea	(RAM_VerBuffer),a0
FFFF0E3A                            ; 		move.l	#$40000010,($C00004).l
FFFF0E3A                            ; 		move.w	#$F,d0
FFFF0E3A                            ; @VerBuf:
FFFF0E3A                            ; 		move.l	(a0)+,($C00000).l
FFFF0E3A                            ; 		dbf	d0,@VerBuf
FFFF0E3A                            ; 
FFFF0E3A                            ; 		lea	(RAM_HorBuffer),a0
FFFF0E3A                            ; 		move.l	#$7C000003,($C00004).l
FFFF0E3A                            ; 		move.w	#224-1,d0
FFFF0E3A                            ; @HorBuf:
FFFF0E3A                            ; 		move.l	(a0)+,($C00000).l
FFFF0E3A                            ; 		dbf	d0,@HorBuf
FFFF0E3A                            
FFFF0E3A 4E75                       		rts
FFFF0E3C                            
FFFF0E3C                            ; -------------------------------------------------
FFFF0E3C                            
FFFF0E3C                            Hint_Default:
FFFF0E3C 4E75                       		rts
FFFF0E3C 4E75                       		rts
FFFF0E3E                                            include	"cd/incl/subtask.asm"
FFFF0E3E                            ; =====================================================================
FFFF0E3E                            ; -------------------------------------------
FFFF0E3E                            ; Variables
FFFF0E3E                            ; -------------------------------------------
FFFF0E3E                            
FFFF0E3E =00000004                  CD_Load_Hadagi		equ	4
FFFF0E3E =00000008                  CD_WordRamToMain	equ	8
FFFF0E3E =00000005                  CD_LoadHadagi_PrgRam	equ	5
FFFF0E3E                            
FFFF0E3E                            ; -------------------------------------------
FFFF0E3E                            ; SubCommand
FFFF0E3E                            ; -------------------------------------------
FFFF0E3E                            
FFFF0E3E                            SubCpu_Task_Wait:
FFFF0E3E 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; is sub cpu free?
FFFF0E44 66F8                       		bne.s	SubCpu_Task_Wait	; if not, wait for it to finish corrent operation
FFFF0E46                            
FFFF0E46 13FC 0000 00A1 200E        		move.b	#0,(ThisCpu+CommMain)	; Clear Command
FFFF0E4E                            @wait1:
FFFF0E4E 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; sub cpu ready?
FFFF0E54 67F8                       		beq.s	@wait1			; if not, branch
FFFF0E56                            	
FFFF0E56 13C0 00A1 200E             		move.b	d0,(ThisCpu+CommMain)	; Send the command
FFFF0E5C                            @wait2:
FFFF0E5C 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; Is sub CPU done?
FFFF0E62 66F8                       		bne.s	@wait2			; if not, branch
FFFF0E64 4E75                       		rts
FFFF0E66                            
FFFF0E66                            ; -------------------------------------------
FFFF0E66                            ; ASyncSubCommand
FFFF0E66                            ; -------------------------------------------
FFFF0E66                            
FFFF0E66                            SubCpu_Task:
FFFF0E66 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; is sub cpu free?
FFFF0E6C 66F8                       		bne.s	SubCpu_Task		; if not, wait for it to finish corrent operation
FFFF0E6E                            
FFFF0E6E 13FC 0000 00A1 200E        		move.b	#0,(ThisCpu+CommMain)	; Clear Command
FFFF0E76                            @wait:
FFFF0E76 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; sub cpu ready?
FFFF0E7C 67F8                       		beq.s	@wait			; if not, branch
FFFF0E7E                            	
FFFF0E7E 13C0 00A1 200E             		move.b	d0,(ThisCpu+CommMain)	; Send the command
FFFF0E84 4E75                       		rts
FFFF0E86                            		
FFFF0E86                            ; -------------------------------------------
FFFF0E86                            ; SubCpu_Wait
FFFF0E86                            ; -------------------------------------------
FFFF0E86                            
FFFF0E86                            SubCpu_Wait:
FFFF0E86 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; is sub cpu free?
FFFF0E8C 66F8                       		bne.s	SubCpu_Wait		; if not, wait for it to finish corrent operation
FFFF0E8E 13FC 0000 00A1 200E        		move.b	#0,(ThisCpu+CommMain)	; Clear Command
FFFF0E96                            @wait1:
FFFF0E96 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; sub cpu ready?
FFFF0E9C 67F8                       		beq.s	@wait1			; if not, branch
FFFF0E9E 4E75                       		rts
FFFF0EA0                            	
FFFF0EA0                            ; -------------------------------------------
FFFF0EA0                            ; SubCpu_Wait
FFFF0EA0                            ; -------------------------------------------
FFFF0EA0                            
FFFF0EA0                            SubCpu_Wait_Flag:
FFFF0EA0 70FF                       		moveq	#-1,d0
FFFF0EA2 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; is sub cpu free?
FFFF0EA8 6600                       		bne.s	@flagset		; if not, wait for it to finish corrent operation
FFFF0EAA 13FC 0000 00A1 200E        		move.b	#0,(ThisCpu+CommMain)	; Clear Command
FFFF0EB2 4A39 00A1 200F             		tst.b	(ThisCpu+CommSub)	; sub cpu ready?
FFFF0EB8 6700                       		beq.s	@flagset		; if not, branch
FFFF0EBA 7000                       		moveq	#0,d0
FFFF0EBC                            @flagset:
FFFF0EBC 4E75                       		rts
FFFF0EBE                            		
FFFF0EBE                            ; -------------------------------------------
FFFF0EBE                            ; Load Program to WordRAM
FFFF0EBE                            ; -------------------------------------------
FFFF0EBE                            
FFFF0EBE                            Load_PrgWord:
FFFF0EBE 23C0 00A1 2010             		move.l	d0,(ThisCpu+CommDataM)
FFFF0EC4 23C1 00A1 2014             		move.l	d1,(ThisCpu+CommDataM+4)
FFFF0ECA 23C2 00A1 2018             		move.l	d2,(ThisCpu+CommDataM+8)
FFFF0ED0 08F9 0001 00A1 2003         		bset	#1,(ThisCpu+MemoryMode+1)		; WordRAM -> SubCPU
FFFF0ED8 7004                       		moveq	#CD_Load_Hadagi,d0
FFFF0EDA 6100 FF62                  		bsr	SubCpu_Task_Wait
FFFF0EDE 7008                        		moveq	#CD_WordRamToMain,d0			; WordRAM -> MainCPU
FFFF0EE0 6000 FF5C                   		bra	SubCpu_Task_Wait
FFFF0EE4                            
FFFF0EE4                            ; -------------------------------------------
FFFF0EE4                            ; Load Program to RAM
FFFF0EE4                            ; -------------------------------------------
FFFF0EE4                            
FFFF0EE4                            Load_PrgRam:
FFFF0EE4 08F9 0001 00A1 2003         		bset	#1,(ThisCpu+MemoryMode+1)		; WordRAM -> SubCPU
FFFF0EEC                             		
FFFF0EEC 23C0 00A1 2010             		move.l	d0,(ThisCpu+CommDataM)
FFFF0EF2 23C1 00A1 2014             		move.l	d1,(ThisCpu+CommDataM+4)
FFFF0EF8 23C2 00A1 2018             		move.l	d2,(ThisCpu+CommDataM+8)
FFFF0EFE 13FC 0000 00A1 201C        		move.b	#0,(ThisCpu+CommDataM+$C)
FFFF0F06 13FC 0000 00A1 201D        		move.b	#0,(ThisCpu+CommDataM+$D)		; Step 1
FFFF0F0E 7005                       		moveq	#CD_LoadHadagi_PrgRam,d0
FFFF0F10 6100 FF2C                  		bsr	SubCpu_Task_Wait
FFFF0F14                            		
FFFF0F14 13FC 0001 00A1 201D        		move.b	#1,(ThisCpu+CommDataM+$D)		; Step 2
FFFF0F1C 7005                       		moveq	#CD_LoadHadagi_PrgRam,d0
FFFF0F1E 6100 FF1E                  		bsr	SubCpu_Task_Wait
FFFF0F22                            		
FFFF0F22 7008                        		moveq	#CD_WordRamToMain,d0			; WordRAM -> MainCPU
FFFF0F24 6100 FF18                   		bsr	SubCpu_Task_Wait
FFFF0F28 4BF9 0020 0000               		lea	($200000),a5
FFFF0F2E 4DF9 00FF 0000               		lea	($FF0000),a6
FFFF0F34 3C3C 65FF                    		move.w	#(sizeof_prg)-1,d6
FFFF0F38                            @Step_1:
FFFF0F38 1CDD                        		move.b	(a5)+,(a6)+
FFFF0F3A 51CE FFFC                   		dbf	d6,@Step_1
FFFF0F3E                              		
FFFF0F3E 08F9 0001 00A1 2003            		bset	#1,(ThisCpu+MemoryMode+1)		; WordRAM -> SubCPU
FFFF0F46 13FC 0002 00A1 201D           		move.b	#2,(ThisCpu+CommDataM+$D)		; Step 3
FFFF0F4E 7005                          		moveq	#CD_LoadHadagi_PrgRam,d0
FFFF0F50 6100 FEEC                     		bsr	SubCpu_Task_Wait		
FFFF0F54 7008                           		moveq	#CD_WordRamToMain,d0			; WordRAM -> MainCPU
FFFF0F56 6000 FEE6                      		bra	SubCpu_Task_Wait
FFFF0F5A                                		
FFFF0F5A                                		
FFFF0F5A                                            
FFFF0F5A                            ; ====================================================================
FFFF0F5A                            ; ---------------------------------------------
FFFF0F5A                            ; Code | Modes
FFFF0F5A                            ; ---------------------------------------------
FFFF0F5A                            
FFFF0F5A                            		include	"engine/modes/title/code.asm"
FFFF0F5A                            ; =================================================================
FFFF0F5A                            ; Title
FFFF0F5A                            ; =================================================================
FFFF0F5A                            
FFFF0F5A                            ; =================================================================
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            ; Includes
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            
FFFF0F5A                            ; =================================================================
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            ; Variables
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            
FFFF0F5A                            ; =================================================================
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            ; RAM (for RAM_ModeBuffer)
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            
FFFF0F5A                            		rsreset
FFFF0F5A =00000000                  TanValue	rs.w	1
FFFF0F5A =00000002                  SpeedVal	rs.w	1
FFFF0F5A =00000004                  StrchVal	rs.w	1
FFFF0F5A =00000006                  WaveVal		rs.w	1
FFFF0F5A =00000008                  Timer1		rs.w	1
FFFF0F5A =0000000A                  TmpVal_Rot	rs.w	1
FFFF0F5A =0000000C                  TmpVal_Zoom	rs.w	1
FFFF0F5A =0000000E                  PickSong	rs.w	1
FFFF0F5A =00000010                  PickLevel	rs.w	1
FFFF0F5A =00000012                  StrchVer	rs.w	1
FFFF0F5A =00000014                  WavePitch	rs.w	1
FFFF0F5A                            
FFFF0F5A =00000016                  StampX		rs.w	1
FFFF0F5A =00000018                  StampY		rs.w	1
FFFF0F5A =0000001A                  StampXD		rs.w	1
FFFF0F5A =0000001C                  StampYD		rs.w	1
FFFF0F5A =0000001E                  ModelZ		rs.w	1
FFFF0F5A                            
FFFF0F5A                            ; =================================================================
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            ; Init
FFFF0F5A                            ; ------------------------------------------------
FFFF0F5A                            
FFFF0F5A                            mode_Title:
FFFF0F5A 6100 F6CE                  		bsr	Mode_FadeOut
FFFF0F5E                            
FFFF0F5E 46FC 2700                  		move.w	#$2700,sr
FFFF0F62                            		
FFFF0F62                            ; -----------------------------------
FFFF0F62                            ; Cleanup
FFFF0F62                            ; -----------------------------------
FFFF0F62                            
FFFF0F62 6100 F142                  		bsr	Vdp_ClearPlanes
FFFF0F66 6100 F670                  		bsr	Mode_Cleanup
FFFF0F6A                            		
FFFF0F6A 23FC FFFF 0DC0 FFFF D882   		move.l	#VInt_Default,(RAM_VIntAddr)
FFFF0F74 23FC FFFF 0E3C FFFF D888   		move.l	#Hint_Default,(RAM_HIntAddr)
FFFF0F7E 41F9 FFFF E902             		lea	(RAM_VdpRegs),a0
FFFF0F84 117C 0000 000A                 		move.b	#0,vdpReg_HVal(a0)
FFFF0F8A 117C 0081 000C             		move.b	#vdp_H40,vdpReg_HMode(a0)
FFFF0F90 117C 0001 0010             		move.b	#1,vdpReg_PlnSize(a0)
FFFF0F96 117C 0003 000B             		move.b	#3,vdpReg_Scroll(a0)
FFFF0F9C 4228 0012                  		clr.b	vdpReg_WindowY(a0)
FFFF0FA0                            ; 		if SEGACD=0
FFFF0FA0                            ; 		if MARS=0
FFFF0FA0                            ;        		bset	#bit_vdpHint,(a0)
FFFF0FA0                            ; 		endif
FFFF0FA0                            ; 		endif
FFFF0FA0 6100 F370                   		bsr	Vdp_Update
FFFF0FA4                            
FFFF0FA4                            ; -----------------------------------
FFFF0FA4                            ; MD ONLY: show sample picture
FFFF0FA4                            ; -----------------------------------
FFFF0FA4                            
FFFF0FA4 41F9 0000 0000              		lea	(Map_Title),a0
FFFF0FAA 7001                        		moveq	#1,d0
FFFF0FAC 223C 0000 0000              		move.l	#($0000<<16)|$0000,d1
FFFF0FB2 243C 0027 001B               		move.l	#((((320)/8)-1)<<16)|(((224)/8)-1),d2
FFFF0FB8 363C 0001                   		move.w	#1,d3
FFFF0FBC 6100 F2B0                   		bsr	VDP_LoadMaps
FFFF0FC0 41F9 0000 0000             		lea	(Art_Title),a0
FFFF0FC6 303C 0001                  		move.w	#1,d0
FFFF0FCA 3218                       		move.w	(a0)+,d1
FFFF0FCC 6100 F160                  		bsr	VDP_SendData_L
FFFF0FD0 43F9 FFFF E0F2               		lea	(RAM_PalFadeBuff),a1
FFFF0FD6 41F9 0000 0000             		lea	(Pal_Title),a0
FFFF0FDC 303C 000F                    		move.w	#$F,d0
FFFF0FE0 6100 F660                    		bsr	LoadData_Word
FFFF0FE4                            
FFFF0FE4                            ; -----------------------------------
FFFF0FE4                            ; Init features	
FFFF0FE4                            ; -----------------------------------
FFFF0FE4                              		
FFFF0FE4 41F9 0000 0000               		lea	(Art_TempFont),a0
FFFF0FEA 303C 0580                     		move.w	#$580,d0
FFFF0FEE 323C 0000                     		move.w	#((Art_TempFont_End-Art_TempFont)/4)-1,d1
FFFF0FF2 6100 F13A                     		bsr	VDP_SendData_L
FFFF0FF6                               		
FFFF0FF6 43F9 FFFF 6880             		lea	(RAM_ModeBuffer),a1
FFFF0FFC 337C 0003 0002             		move.w	#3,SpeedVal(a1)
FFFF1002 337C 0004 0004             		move.w	#4,StrchVal(a1)
FFFF1008 337C 0006 0006             		move.w	#6,WaveVal(a1)
FFFF100E 4269 0010                  		clr.w	PickLevel(a1)
FFFF1012                            		
FFFF1012 33FC 00EE FFFF E136         		move.w	#$0EE,(RAM_PalFadeBuff+$44)
FFFF101A 33FC 0E00 FFFF E156         		move.w	#$E00,(RAM_PalFadeBuff+$64)
FFFF1022                            ; 		bsr	ScrewBG
FFFF1022                            		
FFFF1022 203C 0000 0000             		move.l	#TestSong_4,d0
FFFF1028 323C 0001                  		move.w	#2-1,d1
FFFF102C 6100 0000                  		bsr	SMEG_LoadSong
FFFF1030                            		
FFFF1030 6100 0000                   		bsr	LevelNames
FFFF1034                             		
FFFF1034                            ; -----------------------------------
FFFF1034                            
FFFF1034 33FC FF00 FFFF 6892        		move.w	#$FF00,(RAM_ModeBuffer+StrchVer)
FFFF103C 4239 FFFF 688E                		clr.b	(RAM_ModeBuffer+PickSong)
FFFF1042 46FC 2000                  		move.w	#$2000,sr
FFFF1046 6100 F5D2                   		bsr	Mode_FadeIn
FFFF104A                            		
FFFF104A                            ; =================================================================
FFFF104A                            ; ------------------------------------------------
FFFF104A                            ; Loop
FFFF104A                            ; ------------------------------------------------
FFFF104A                            
FFFF104A                            Title_Loop:
FFFF104A 6100 F2E8                  		bsr	VSync
FFFF104E                            ; 		bsr	ScrewBG
FFFF104E                            		
FFFF104E 43F9 FFFF 6880             		lea	(RAM_ModeBuffer),a1
FFFF1054                            		
FFFF1054                            ; ------------------------------------------
FFFF1054                            ; MD Controls
FFFF1054                            ; ------------------------------------------
FFFF1054                            
FFFF1054                            ; 		else
FFFF1054                            		
FFFF1054                            ;    		btst	#bitJoyDown,(RAM_Joypads+OnPress)
FFFF1054                            ;    		beq.s	@dontscrl_down2
FFFF1054                            ; 		cmp.w	#$3C-12,WavePitch(a1)
FFFF1054                            ; 		beq.s	@dontscrl_up2
FFFF1054                            ; 		sub.w 	#1,WavePitch(a1)
FFFF1054                            ; 		move.w	WavePitch(a1),d0
FFFF1054                            ; 		bsr	Z80_SetSmplNote
FFFF1054                            ;  		bsr	LevelNames
FFFF1054                            ; @dontscrl_down2:
FFFF1054                            ; 		btst	#bitJoyUp,(RAM_Joypads+OnPress)
FFFF1054                            ; 		beq.s	@dontscrl_up2
FFFF1054                            ; 		cmp.w	#$3C+10,WavePitch(a1)
FFFF1054                            ; 		beq.s	@dontscrl_up2
FFFF1054                            ; 		add.w 	#1,WavePitch(a1)
FFFF1054                            ; 		move.w	WavePitch(a1),d0
FFFF1054                            ; 		bsr	Z80_SetSmplNote
FFFF1054 6100 0000                    		bsr	LevelNames
FFFF1058                            ; @dontscrl_up2:
FFFF1058                            
FFFF1058 0839 0004 FFFF D897        		btst	#bitJoyB,(RAM_Joypads+OnPress)
FFFF1060 6700                       		beq.s	@NotVdpHor
FFFF1062 0879 0000 FFFF E90E        		bchg	#0,(RAM_VdpRegs+vdpReg_HMode)
FFFF106A 0879 0007 FFFF E90E        		bchg	#7,(RAM_VdpRegs+vdpReg_HMode)
FFFF1072 6100 F29E                  		bsr	Vdp_Update
FFFF1076                            @NotVdpHor:
FFFF1076                            
FFFF1076                            ;  		moveq	#0,d0
FFFF1076                            ;  		move.l	#($0000<<16)|$0000,d1
FFFF1076                            ;   		move.l	#$560+"0",d2
FFFF1076                            ;  		move.w	StrchVer(a1),d3
FFFF1076                            ;  		bsr	Vdp_ShowVal_W
FFFF1076                            		
FFFF1076                            ; ------------------------------------------
FFFF1076                            
FFFF1076                            ; 		endif
FFFF1076                            		
FFFF1076                            ; 		btst	#bitJoyStart,(RAM_Joypads+OnPress)
FFFF1076                            ; 		beq.s	@NotStart
FFFF1076                            ; 		
FFFF1076                            ; ; 		if MARS=0
FFFF1076                            ; ; 		if SegaCD=0
FFFF1076                            ; ; 		jmp	MD_AddrError
FFFF1076                            ; ; 		endif
FFFF1076                            ; ; 		endif
FFFF1076                            ; 		
FFFF1076                            ; 		bra	Title_LoadLevel
FFFF1076                            ; @NotStart:
FFFF1076 6000 FFD2                  		bra	Title_Loop
FFFF107A                                            
FFFF107A                            ; =================================================================
FFFF107A                            ; ------------------------------------------------
FFFF107A                            ; Hblank
FFFF107A                            ; ------------------------------------------------
FFFF107A                            	
FFFF107A                            HInt_Title:
FFFF107A 48E7 C000                  		movem.l	d0-d1,-(sp)
FFFF107E                            		
FFFF107E 23FC 4000 0010 00C0 0004   		move.l	#$40000010,($C00004).l
FFFF1088 33FC 0000 00C0 0000        		move.w	#0,($C00000).l
FFFF1090 2039 FFFF E5B2             		move.l	(RAM_VerBuffer),d0
FFFF1096 4840                       		swap	d0
FFFF1098 4880                       		ext.w	d0
FFFF109A 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
FFFF10A0 E249                          		lsr.w	#1,d1
FFFF10A2 9041                        		sub.w	d1,d0
FFFF10A4 33C0 00C0 0000             		move.w	d0,($C00000).l
FFFF10AA                            		
FFFF10AA 7200                        		moveq	#0,d1
FFFF10AC 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
FFFF10B2 E189                         		lsl.l	#8,d1
FFFF10B4 D3B9 FFFF E5B2              		add.l	d1,(RAM_VerBuffer)
FFFF10BA                            		
FFFF10BA 4CDF 0003                  		movem.l	(sp)+,d0-d1
FFFF10BE                            @holdon:
FFFF10BE 4E75                       		rts
FFFF10C0                            		
FFFF10C0                            ; =================================================================
FFFF10C0                            ; ------------------------------------------------
FFFF10C0                            ; VBlank
FFFF10C0                            ; ------------------------------------------------
FFFF10C0                            
FFFF10C0                            Vint_Title:
FFFF10C0 23FC 4000 0010 00C0 0004   		move.l	#$40000010,($C00004).l
FFFF10CA 23FC 0000 0000 00C0 0000   		move.l	#0,($C00000).l
FFFF10D4 2039 FFFF E5B2             		move.l	(RAM_VerBuffer),d0
FFFF10DA 4840                       		swap	d0
FFFF10DC 4880                       		ext.w	d0
FFFF10DE 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
FFFF10E4 E249                          		lsr.w	#1,d1
FFFF10E6 9041                        		sub.w	d1,d0
FFFF10E8 33C0 00C0 0000             		move.w	d0,($C00000).l
FFFF10EE 42B9 FFFF E5B2             		clr.l	(RAM_VerBuffer)
FFFF10F4                            
FFFF10F4 6100 0000                  		bsr	SMEG_Upd
FFFF10F8 6100 F2AE                  		bsr	PalFade
FFFF10FC 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
FFFF1104                            @WaitZ80:
FFFF1104 0839 0000 00A1 1100        		btst	#0,($A11100).l
FFFF110C 66F6                       		bne.s	@WaitZ80
FFFF110E 6100 F89E                  		bsr	Pads_Read
FFFF1112 6100 FB52                   		bsr	DMA_Read
FFFF1116 33FC 0000 00A1 1100         		move.w	#0,($A11100).l
FFFF111E                            
FFFF111E 6000 FCAC                   		bra	Dma_Visual
FFFF1122 4E75                       		rts
FFFF1124                            		
FFFF1124                            ; =================================================================
FFFF1124                            ; ------------------------------------------------
FFFF1124                            ; Subs
FFFF1124                            ; ------------------------------------------------
FFFF1124                            
FFFF1124                            ; ---------------------------
FFFF1124                            ; Screw the bg
FFFF1124                            ; ---------------------------
FFFF1124                            
FFFF1124                            ScrewBG:
FFFF1124 4E75                       		rts
FFFF1126                            
FFFF1126                            ; ---------------------------
FFFF1126                            ; Show the level names
FFFF1126                            ; ---------------------------
FFFF1126                            
FFFF1126                            LevelNames:
FFFF1126 49F9 0000 0000             		lea	(RAM_SMEG_Chnls_BGM),a4
FFFF112C 383C C112                  		move.w	#$C000+($80*2)+($02*9),d4
FFFF1130 7605                        		moveq	#6-1,d3
FFFF1132 6100 0000                  		bsr	@channels
FFFF1136                            
FFFF1136 383C C612                  		move.w	#$C000+($80*12)+($02*9),d4
FFFF113A 7603                        		moveq	#4-1,d3
FFFF113C 6100 0000                  		bsr	@channels
FFFF1140                            
FFFF1140 383C CA92                  		move.w	#$C000+($80*21)+($02*9),d4
FFFF1144 7603                        		moveq	#4-1,d3
FFFF1146 6100 0000                  		bsr	@channels
FFFF114A 383C CAAE                  		move.w	#$C000+($80*21)+($02*23),d4
FFFF114E 7603                        		moveq	#4-1,d3
FFFF1150 6100 0000                  		bsr	@channels
FFFF1154                            		
FFFF1154 4E75                       		rts
FFFF1156                            		
FFFF1156                            @channels:
FFFF1156                            
FFFF1156                            @next_y:
FFFF1156 3004                       		move.w	d4,d0
FFFF1158 6100 EFEC                  		bsr	VDP_VramToCmd
FFFF115C 23C0 00C0 0004             		move.l	d0,($C00004).l
FFFF1162 45FA 0000                  		lea	LevelNamesAsc(pc),a2
FFFF1166                            		
FFFF1166 7A00                       		moveq	#0,d5
FFFF1168 1A2C 0000                    		move.b	chn_note(a4),d5
FFFF116C 4A05                         		tst.b	d5
FFFF116E 6B00                         		bmi.s	@next_x
FFFF1170 0245 007F                    		and.w	#$7F,d5
FFFF1174 E54D                         		lsl.w	#2,d5
FFFF1176 45FA 0000                  		lea	LevelNamesAsc+4(pc),a2
FFFF117A D4C5                          		adda	d5,a2
FFFF117C                            @next_x:
FFFF117C 303C 4000                   		move.w	#$4000,d0
FFFF1180 0C2C 0000 0000              		cmp.b	#FM_6,chn_id(a4)
FFFF1186 6700                        		beq.s	@same
FFFF1188 0C2C 0000 0000              		cmp.b	#NOISE,chn_id(a4)
FFFF118E 6700                        		beq.s	@same
FFFF1190 303C 6000                   		move.w	#$6000,d0
FFFF1194                            @same:
FFFF1194 7400                       		moveq	#0,d2
FFFF1196 141A                       		move.b	(a2)+,d2
FFFF1198 6700                       		beq.s	@jump
FFFF119A 0642 0560                  		add.w	#$560,d2
FFFF119E D440                       		add.w	d0,d2
FFFF11A0 33C2 00C0 0000             		move.w	d2,($C00000).l
FFFF11A6 60D4                       		bra.s	@next_x
FFFF11A8                            @jump:
FFFF11A8 142C 0000                  		move.b	Chn_Inst(a4),d2
FFFF11AC 6100 0000                  		bsr	@MiniVal
FFFF11B0 142C 0000                  		move.b	Chn_Vol(a4),d2
FFFF11B4 6100 0000                  		bsr	@MiniVal
FFFF11B8 142C 0000                  		move.b	Chn_Panning(a4),d2
FFFF11BC 6100 0000                  		bsr	@MiniVal		
FFFF11C0                            		
FFFF11C0 0645 0001                  		add.w	#1,d5
FFFF11C4 0644 0080                  		add.w	#($80*1),d4
FFFF11C8 D8FC 0000                  		adda	#sizeof_chn,a4
FFFF11CC 51CB FF88                   		dbf	d3,@next_y
FFFF11D0 4E75                       		rts
FFFF11D2                            
FFFF11D2                            @MiniVal:
FFFF11D2 0242 00FF                  		and.w	#$FF,d2
FFFF11D6 33FC 0000 00C0 0000        		move.w	#0,($C00000).l
FFFF11DE 3202                       		move.w	d2,d1
FFFF11E0 E849                       		lsr.w	#4,d1
FFFF11E2 0241 000F                  		and.w	#$F,d1
FFFF11E6 0C41 000A                  		cmp.w	#$A,d1
FFFF11EA 6D00                       		blt.s	@lowAl
FFFF11EC 0641 0007                  		add.w	#7,d1
FFFF11F0                            @lowAl:
FFFF11F0 0641 0590                  		add.w	#$560+"0",d1
FFFF11F4 D240                       		add.w	d0,d1
FFFF11F6 33C1 00C0 0000             		move.w	d1,($C00000).l
FFFF11FC                            
FFFF11FC 3202                       		move.w	d2,d1
FFFF11FE 0241 000F                  		and.w	#$F,d1
FFFF1202 0C41 000A                  		cmp.w	#$A,d1
FFFF1206 6D00                       		blt.s	@lowAr
FFFF1208 0641 0007                  		add.w	#7,d1
FFFF120C                            @lowAr:
FFFF120C 0641 0590                  		add.w	#$560+"0",d1
FFFF1210 D240                       		add.w	d0,d1
FFFF1212 33C1 00C0 0000             		move.w	d1,($C00000).l
FFFF1218 4E75                       		rts
FFFF121A                            		
FFFF121A                            ; ---------------------------
FFFF121A                            ; Load level
FFFF121A                            ; ---------------------------
FFFF121A                            
FFFF121A                            Title_LoadLevel:
FFFF121A 33E9 0010 FFFF 6800        		move.w	PickLevel(a1),(RAM_SharedBuffer)
FFFF1222                            		
FFFF1222 7014                       		moveq	#$14,d0
FFFF1224 6100 FC18                  		bsr	SubCpu_Task_Wait
FFFF1228                            		
FFFF1228 6100 F400                  		bsr	Mode_FadeOut
FFFF122C 13FC 0001 FFFF D891         		move.b	#1,(RAM_GameMode)
FFFF1234 4E75                       		rts
FFFF1236                            	
FFFF1236                            ; ---------------------------
FFFF1236                            ; SEGA CD: transfer stamp
FFFF1236                            ; data
FFFF1236                            ; ---------------------------
FFFF1236                            
FFFF1236                            ShowStamps:
FFFF1236 41F9 00A1 2010             		lea	(ThisCpu+CommDataM),a0
FFFF123C 30FC 0000                  		move.w	#0,(a0)+
FFFF1240 3029 0016                  		move.w	StampX(a1),d0
FFFF1244 30C0                       		move.w	d0,(a0)+
FFFF1246 3029 0018                  		move.w	StampY(a1),d0
FFFF124A 30C0                       		move.w	d0,(a0)+
FFFF124C 3029 001A                  		move.w	StampXD(a1),d0
FFFF1250 30C0                       		move.w	d0,(a0)+
FFFF1252 3029 001C                  		move.w	StampYD(a1),d0
FFFF1256 30C0                       		move.w	d0,(a0)+
FFFF1258 7031                       		moveq	#$31,d0
FFFF125A 6100 FBE2                  		bsr	SubCpu_Task_Wait
FFFF125E                            		
FFFF125E 7038                       		moveq	#$38,d0
FFFF1260 6100 FBDC                  		bsr	SubCpu_Task_Wait
FFFF1264                            
FFFF1264 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
FFFF126C                            @WaitZ80:
FFFF126C 0839 0000 00A1 1100        		btst	#0,($A11100).l
FFFF1274 66F6                       		bne.s	@WaitZ80
FFFF1276                            		
FFFF1276 203C 4020 0000              		move.l	#$40200000,d0
FFFF127C 223C 0023 8E00              		move.l	#$200000+$38E00,d1
FFFF1282 343C 3800                   		move.w	#((256*224)>>2),d2
FFFF1286 6100 FA9C                   		bsr	DMA_QuickSet
FFFF128A                             		
FFFF128A 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1292 4E75                       		rts
FFFF1294                            	
FFFF1294                            ; -------------------
FFFF1294                            
FFFF1294                            Stamps_AutoMap:
FFFF1294 741F                       		moveq	#$1F,d2
FFFF1296                            @NextLine:
FFFF1296 2800                       		move.l	d0,d4
FFFF1298 3A01                       		move.w	d1,d5
FFFF129A 363C 001B                  		move.w	#((256*224)>>$B)-1,d3
FFFF129E                            @Next:
FFFF129E 23C4 00C0 0004             		move.l	d4,($C00004).l
FFFF12A4 33C5 00C0 0000             		move.w	d5,($C00000).l
FFFF12AA 0684 0080 0000             		add.l	#$800000,d4
FFFF12B0 0645 0001                  		add.w	#$0001,d5
FFFF12B4 51CB FFE8                  		dbf	d3,@Next
FFFF12B8                            		
FFFF12B8 0641 001C                  		add.w	#((256*224)>>$B),d1
FFFF12BC 0680 0002 0000             		add.l	#$20000,d0
FFFF12C2 51CA FFD2                  		dbf	d2,@NextLine
FFFF12C6 4E75                       		rts
FFFF12C8                            		
FFFF12C8                            ; ------------------------------------------------
FFFF12C8                            ; Render MARS Stuff
FFFF12C8                            ; ------------------------------------------------
FFFF12C8                            
FFFF12C8                            MARS_ModelRender:
FFFF12C8                            
FFFF12C8                            ; -----------------------------------
FFFF12C8                            
FFFF12C8 4E75                       		rts
FFFF12CA                            		
FFFF12CA                            ; =================================================================
FFFF12CA                            ; ------------------------------------------------
FFFF12CA                            ; Data
FFFF12CA                            ; ------------------------------------------------
FFFF12CA                            		
FFFF12CA                            LevelNamesAsc:
FFFF12CA 3D3D 3D00                  		dc.b "===",0
FFFF12CE                            		
FFFF12CE 3D3D 3D00                  		dc.b "===",0
FFFF12D2 4323 3000                  		dc.b "C#0",0
FFFF12D6 442D 3000                  		dc.b "D-0",0
FFFF12DA 4423 3000                  		dc.b "D#0",0
FFFF12DE 452D 3000                  		dc.b "E-0",0
FFFF12E2 462D 3000                  		dc.b "F-0",0
FFFF12E6 4623 3000                  		dc.b "F#0",0
FFFF12EA 472D 3000                  		dc.b "G-0",0
FFFF12EE 4723 3000                  		dc.b "G#0",0
FFFF12F2 412D 3000                  		dc.b "A-0",0
FFFF12F6 4123 3000                  		dc.b "A#0",0		
FFFF12FA 422D 3000                  		dc.b "B-0",0
FFFF12FE                            		
FFFF12FE 432D 3100                  		dc.b "C-1",0
FFFF1302 4323 3100                  		dc.b "C#1",0
FFFF1306 442D 3100                  		dc.b "D-1",0
FFFF130A 4423 3100                  		dc.b "D#1",0
FFFF130E 452D 3100                  		dc.b "E-1",0
FFFF1312 462D 3100                  		dc.b "F-1",0
FFFF1316 4623 3100                  		dc.b "F#1",0
FFFF131A 472D 3100                  		dc.b "G-1",0
FFFF131E 4723 3100                  		dc.b "G#1",0
FFFF1322 412D 3100                  		dc.b "A-1",0
FFFF1326 4123 3100                  		dc.b "A#1",0		
FFFF132A 422D 3100                  		dc.b "B-1",0
FFFF132E                            		
FFFF132E 432D 3200                  		dc.b "C-2",0
FFFF1332 4323 3200                  		dc.b "C#2",0
FFFF1336 442D 3200                  		dc.b "D-2",0
FFFF133A 4423 3200                  		dc.b "D#2",0
FFFF133E 452D 3200                  		dc.b "E-2",0
FFFF1342 462D 3200                  		dc.b "F-2",0
FFFF1346 4623 3200                  		dc.b "F#2",0
FFFF134A 472D 3200                  		dc.b "G-2",0
FFFF134E 4723 3200                  		dc.b "G#2",0
FFFF1352 412D 3200                  		dc.b "A-2",0
FFFF1356 4123 3200                  		dc.b "A#2",0		
FFFF135A 422D 3200                  		dc.b "B-2",0
FFFF135E                            		
FFFF135E 432D 3300                  		dc.b "C-3",0
FFFF1362 4323 3300                  		dc.b "C#3",0
FFFF1366 442D 3300                  		dc.b "D-3",0
FFFF136A 4423 3300                  		dc.b "D#3",0
FFFF136E 452D 3300                  		dc.b "E-3",0
FFFF1372 462D 3300                  		dc.b "F-3",0
FFFF1376 4623 3300                  		dc.b "F#3",0
FFFF137A 472D 3300                  		dc.b "G-3",0
FFFF137E 4723 3300                  		dc.b "G#3",0
FFFF1382 412D 3300                  		dc.b "A-3",0
FFFF1386 4123 3300                  		dc.b "A#3",0		
FFFF138A 422D 3300                  		dc.b "B-3",0
FFFF138E                            		
FFFF138E 432D 3400                  		dc.b "C-4",0
FFFF1392 4323 3400                  		dc.b "C#4",0
FFFF1396 442D 3400                  		dc.b "D-4",0
FFFF139A 4423 3400                  		dc.b "D#4",0
FFFF139E 452D 3400                  		dc.b "E-4",0
FFFF13A2 462D 3400                  		dc.b "F-4",0
FFFF13A6 4623 3400                  		dc.b "F#4",0
FFFF13AA 472D 3400                  		dc.b "G-4",0
FFFF13AE 4723 3400                  		dc.b "G#4",0
FFFF13B2 412D 3400                  		dc.b "A-4",0
FFFF13B6 4123 3400                  		dc.b "A#4",0		
FFFF13BA 422D 3400                  		dc.b "B-4",0
FFFF13BE                            		
FFFF13BE 432D 3500                  		dc.b "C-5",0
FFFF13C2 4323 3500                  		dc.b "C#5",0
FFFF13C6 442D 3500                  		dc.b "D-5",0
FFFF13CA 4423 3500                  		dc.b "D#5",0
FFFF13CE 452D 3500                  		dc.b "E-5",0
FFFF13D2 462D 3500                  		dc.b "F-5",0
FFFF13D6 4623 3500                  		dc.b "F#5",0
FFFF13DA 472D 3500                  		dc.b "G-5",0
FFFF13DE 4723 3500                  		dc.b "G#5",0
FFFF13E2 412D 3500                  		dc.b "A-5",0
FFFF13E6 4123 3500                  		dc.b "A#5",0		
FFFF13EA 422D 3500                  		dc.b "B-5",0
FFFF13EE                            
FFFF13EE 432D 3600                  		dc.b "C-6",0
FFFF13F2 4323 3600                  		dc.b "C#6",0
FFFF13F6 442D 3600                  		dc.b "D-6",0
FFFF13FA 4423 3600                  		dc.b "D#6",0
FFFF13FE 452D 3600                  		dc.b "E-6",0
FFFF1402 462D 3600                  		dc.b "F-6",0
FFFF1406 4623 3600                  		dc.b "F#6",0
FFFF140A 472D 3600                  		dc.b "G-6",0
FFFF140E 4723 3600                  		dc.b "G#6",0
FFFF1412 412D 3600                  		dc.b "A-6",0
FFFF1416 4123 3600                  		dc.b "A#6",0		
FFFF141A 422D 3600                  		dc.b "B-6",0
FFFF141E                            
FFFF141E 432D 3700                  		dc.b "C-7",0
FFFF1422 4323 3700                  		dc.b "C#7",0
FFFF1426 442D 3700                  		dc.b "D-7",0
FFFF142A 4423 3700                  		dc.b "D#7",0
FFFF142E 452D 3700                  		dc.b "E-7",0
FFFF1432 462D 3700                  		dc.b "F-7",0
FFFF1436 4623 3700                  		dc.b "F#7",0
FFFF143A 472D 3700                  		dc.b "G-7",0
FFFF143E 4723 3700                  		dc.b "G#7",0
FFFF1442 412D 3700                  		dc.b "A-7",0
FFFF1446 4123 3700                  		dc.b "A#7",0		
FFFF144A 422D 3700                  		dc.b "B-7",0
FFFF144E                            
FFFF144E 432D 3800                  		dc.b "C-8",0
FFFF1452 4323 3800                  		dc.b "C#8",0
FFFF1456 442D 3800                  		dc.b "D-8",0
FFFF145A 4423 3800                  		dc.b "D#8",0
FFFF145E 452D 3800                  		dc.b "E-8",0
FFFF1462 462D 3800                  		dc.b "F-8",0
FFFF1466 4623 3800                  		dc.b "F#8",0
FFFF146A 472D 3800                  		dc.b "G-8",0
FFFF146E 4723 3800                  		dc.b "G#8",0
FFFF1472 412D 3800                  		dc.b "A-8",0
FFFF1476 4123 3800                  		dc.b "A#8",0		
FFFF147A 422D 3800                  		dc.b "B-8",0
FFFF147E                            		
FFFF147E                            		even
FFFF147E                            		
FFFF147E                            		
FFFF147E                            		
FFFF147E                            ; ---------------------------------------------
FFFF147E                            ; Code | Sound
FFFF147E                            ; ---------------------------------------------
FFFF147E                            
FFFF147E                            		include	"engine/sound/code.asm"
FFFF147E                            ; ================================================================
FFFF147E                            ; SMEG
FFFF147E                            ; Sound and Music Engine for Genesis (also SegaCD* and 32X**)
FFFF147E                            ;
FFFF147E                            ; (C)2013-2016 GF64
FFFF147E                            ; 
FFFF147E                            ; Reads patterns from a ImpulseTracker file (.it)
FFFF147E                            ;
FFFF147E                            ; Ticks:
FFFF147E                            ; 150 - NTSC
FFFF147E                            ; 120 - PAL
FFFF147E                            ;
FFFF147E                            ; uses assembler settings:
FFFF147E                            ; SegaCD     - for building to SegaCD (All the driver must be aligned
FFFF147E                            ;              to WordRAM or PRG-RAM)
FFFF147E                            ; MARS       - for building to 32x (CODE and
FFFF147E                            ;              DATA(Music/Sfx/Voices/Z80 samples) must be aligned to
FFFF147E                            ;              the 32x standards, uses bank 0 only,
FFFF147E                            ;              PWM Samples can be anywhere in ROM)
FFFF147E                            ; SMEG_Z80   - Use Z80, set to 0 while running from PRGRAM
FFFF147E                            ;                 
FFFF147E                            ; Limtations:
FFFF147E                            ; (Driver) - Effects: only volume and panning (Xxx) works
FFFF147E                            ; 
FFFF147E                            ; (SegaCD) - You cant use Z80 samples if your program is running
FFFF147E                            ;            on PRG-RAM (Z80 cant access RAM), if your program is
FFFF147E                            ;            running on WORD-RAM, set the permission to
FFFF147E                            ;            MainCPU (2M Mode) (not recommended)
FFFF147E                            ;            
FFFF147E                            ; * requires respective SubCPU code
FFFF147E                            ; ** requires respective SH2 code
FFFF147E                            ; ================================================================
FFFF147E                            
FFFF147E                            			rsreset
FFFF147E =00000000                  DrvStatus		rs.b 1		;Byte
FFFF147E =00000001                  DrvSettings		rs.b 1		;Byte
FFFF147E =00000002                  PatternEnd		rs.b 1		;Byte
FFFF147E =00000003                  PatternLoop		rs.b 1		;Byte
FFFF147E =00000004                  AddrBackup		rs.l 1		;Long
FFFF147E =00000008                  SongRequest		rs.l 1 		;Long
FFFF147E =0000000C                  SongStart		rs.l 1		;Long
FFFF147E =00000010                  SongRead		rs.l 1		;Long
FFFF147E =00000014                  SongVoices		rs.l 1		;Long
FFFF147E =00000018                  SongSampl		rs.l 1		;Long
FFFF147E =0000001C                  SongPcmSamp		rs.l 1		;Long
FFFF147E =00000020                  TicksRequest		rs.w 1		;Word
FFFF147E =00000022                  TicksRead		rs.w 1		;Word
FFFF147E =00000024                  TicksSet		rs.w 1		;Word
FFFF147E =00000026                  TempoRead 		rs.w 1		;Word
FFFF147E =00000028                  PattSize		rs.w 1		;Word
FFFF147E =0000002A                  PattRead		rs.w 1		;Word
FFFF147E =0000002C                  CdOnlyFlags		rs.w 1		;Word
FFFF147E =0000002E                  CurrPattern		rs.b 1		;Byte
FFFF147E =0000002F                  PcmChnOnOff		rs.b 1		;Byte
FFFF147E =00000030                  PsgLast			rs.b 1		;Byte
FFFF147E =00000031                  DrvSettingsBGM		rs.b 1		;Byte
FFFF147E =00000032                  LastPattChn		rs.b 1		;Byte
FFFF147E =00000033                  Psg_Vibrato		rs.b 1		;Byte
FFFF147E =00000034                  Psg_AutoVol		rs.b 1		;Byte
FFFF147E =00000036                  sizeof_SndBuff		rs.l 0
FFFF147E                            
FFFF147E                            ; --------------------------------------------
FFFF147E                            ; Channel settings
FFFF147E                            ; --------------------------------------------
FFFF147E                            
FFFF147E                            			rsreset
FFFF147E =00000000                  Chn_Freq		rs.w 1		;Word
FFFF147E =00000002                  Chn_Effect		rs.w 1		;Word
FFFF147E =00000004                  Chn_Portam		rs.w 1		;Word
FFFF147E =00000006                  Chn_Type		rs.b 1		;Byte
FFFF147E =00000007                  Chn_ID			rs.b 1		;Byte
FFFF147E =00000008                  Chn_Inst		rs.b 1		;Byte
FFFF147E =00000009                  Chn_Vol			rs.b 1		;Byte
FFFF147E =0000000A                  Chn_DefVol		rs.b 1		;Byte
FFFF147E =0000000B                  Chn_Note		rs.b 1		;Byte
FFFF147E =0000000C                  Chn_Panning		rs.b 1		;Byte
FFFF147E =0000000D                  Chn_FM_Key		rs.b 1		;Byte
FFFF147E =0000000E                  Chn_PCM_Pitch		rs.b 1		;Byte
FFFF147E =0000000F                  Chn_PSG_Vibrato		rs.b 1		;Byte
FFFF147E =00000010                  sizeof_Chn		rs.l 0
FFFF147E                             
FFFF147E                            ; --------------------------------------------
FFFF147E                            ; Bits
FFFF147E                            ; --------------------------------------------
FFFF147E                            
FFFF147E =00000000                  bitPriority		equ	0
FFFF147E =00000001                  bitSfxOn		equ	1
FFFF147E =00000002                  bitDisabled		equ	2
FFFF147E                            
FFFF147E                            ;Status
FFFF147E =00000000                  bitDacOn		equ	0
FFFF147E =00000001                  bitDacNote		equ	1
FFFF147E =00000002                  bitTone3		equ	2
FFFF147E =00000003                  bitSpecial3		equ	3
FFFF147E                            
FFFF147E                            ; --------------------------------------------
FFFF147E                            ; Channel IDs
FFFF147E                            ; --------------------------------------------
FFFF147E                            
FFFF147E =00000000                  FM_1			equ	$00
FFFF147E =00000001                  FM_2			equ	$01
FFFF147E =00000002                  FM_3			equ	$02
FFFF147E =00000004                  FM_4			equ	$04
FFFF147E =00000005                  FM_5			equ	$05
FFFF147E =00000006                  FM_6			equ	$06
FFFF147E =00000080                  PSG_1			equ	$80
FFFF147E =000000A0                  PSG_2			equ	$A0
FFFF147E =000000C0                  PSG_3			equ	$C0
FFFF147E =000000E0                  NOISE			equ	$E0
FFFF147E =00000010                  PCM_1			equ	$10
FFFF147E =00000011                  PCM_2			equ	$11
FFFF147E =00000012                  PCM_3			equ	$12
FFFF147E =00000013                  PCM_4			equ	$13
FFFF147E =00000014                  PCM_5			equ	$14
FFFF147E =00000015                  PCM_6			equ	$15
FFFF147E =00000016                  PCM_7			equ	$16
FFFF147E =00000017                  PCM_8			equ	$17
FFFF147E =00000012                  MaxChannels		equ	18
FFFF147E                            
FFFF147E                            ; --------------------------------------------
FFFF147E                            ; .IT request ($80+) format
FFFF147E                            ; --------------------------------------------
FFFF147E                            
FFFF147E =00000000                  bitNote			equ	0
FFFF147E =00000001                  bitInst			equ	1
FFFF147E =00000002                  bitVolume		equ	2
FFFF147E =00000003                  bitEffect		equ	3
FFFF147E =00000004                  bitSameNote		equ	4
FFFF147E =00000005                  bitSameInst		equ	5
FFFF147E =00000006                  bitSameVol		equ	6
FFFF147E =00000007                  bitSameEffect		equ	7
FFFF147E                            
FFFF147E                            ; --------------------------------------------
FFFF147E                            ; RAM
FFFF147E                            ; 
FFFF147E                            ; MAX: $400
FFFF147E                            ; --------------------------------------------
FFFF147E                            
FFFF147E                            			rsset RAM_SndDriver
FFFF147E =FFFFD8E2                  RAM_SMEG_Buffer		rs.b sizeof_SndBuff
FFFF147E =FFFFD918                  RAM_SMEG_SfxBuff	rs.b sizeof_SndBuff
FFFF147E =FFFFD94E                  RAM_SMEG_PrioList	rs.b MaxChannels
FFFF147E =FFFFD960                  RAM_SMEG_Chnls_BGM	rs.b $10*MaxChannels
FFFF147E =FFFFDA80                  RAM_SMEG_Chnls_SFX	rs.b $10*MaxChannels
FFFF147E =FFFFDBA0                  RAM_SMEG_PcmList	rs.l 64
FFFF147E                            			
FFFF147E =FFFFDCA0                  sizeof_SMEG		rs.l 0
FFFF147E                            ;     			inform 0,"SMEG Used: %h",sizeof_SMEG-RAM_SndDriver
FFFF147E                            			
FFFF147E                            ; ================================================================
FFFF147E                            ; -------------------------------------------
FFFF147E                            ; Macros
FFFF147E                            ; -------------------------------------------
FFFF147E                            
FFFF147E                            Z80_OFF		macro
FFFF147E                            		move.w	#$100,($A11100).l
FFFF147E                            @WaitZ80\@:
FFFF147E                            		btst	#0,($A11100).l
FFFF147E                            		bne.s	@WaitZ80\@
FFFF147E                            		endm
FFFF147E                            
FFFF147E                            ; -----------------------------------------
FFFF147E                            
FFFF147E                            Z80_ON		macro
FFFF147E                            		move.b	#$2A,($A04000).l
FFFF147E                            		move.w	#0,($A11100).l
FFFF147E                            		endm
FFFF147E                            
FFFF147E                            ; -----------------------------------------
FFFF147E                            
FFFF147E                            PCM_Entry	macro	cd_side,mars_side,loop,pitch
FFFF147E                            		
FFFF147E                            cdsize_size	= strlen(\cd_side)
FFFF147E                            
FFFF147E                            		if SegaCD
FFFF147E                            		  if cdsize_size>$C
FFFF147E                            		    inform 2,"(SMEG) CD FILENAME TOO LONG"
FFFF147E                            		  elseif cdsize_size=$C
FFFF147E                            		    dc.b \cd_side
FFFF147E                            		  elseif cdsize_size<$C
FFFF147E                            		    dc.b \cd_side
FFFF147E                            		    rept $C-cdsize_size
FFFF147E                            		      dc.b 0
FFFF147E                            		    endr
FFFF147E                            		  elseif cdsize_size<=0
FFFF147E                            		    inform 2,"(SMEG) YOU FORGOT THE CD FILENAME"
FFFF147E                            		  endif
FFFF147E                            		  
FFFF147E                            		elseif MARS
FFFF147E                            		  dc.l mars_side
FFFF147E                            		endif
FFFF147E                            		
FFFF147E                            		dc.w loop
FFFF147E                            		dc.w pitch
FFFF147E                            		endm
FFFF147E                            
FFFF147E                            ; 		inform 0,"%h",RAM_SMEG_PcmList
FFFF147E                            
FFFF147E                            ; ================================================================
FFFF147E                            ; -------------------------------------------
FFFF147E                            ; External Calls
FFFF147E                            ; -------------------------------------------
FFFF147E                            
FFFF147E                            ;SegaPCM
FFFF147E =00000020                  CdTask_LoadPcm		equ	$20
FFFF147E =00000021                  CdTask_SetAddr		equ	$21
FFFF147E =00000022                  CdTask_SetFreq		equ	$22
FFFF147E =00000023                  CdTask_SetPan		equ	$23
FFFF147E =00000024                  CdTask_SetEnv		equ	$24
FFFF147E =00000025                  CdTask_SetOnOff		equ	$25
FFFF147E =00000026                  CdTask_ClearAllPcm	equ	$26
FFFF147E                            
FFFF147E                            ;MARS
FFFF147E =00000001                  marscall_Play		equ	1
FFFF147E =00000002                  marscall_Stop		equ	2
FFFF147E =00000003                  marscall_SetSmpl	equ	3
FFFF147E =00000004                  marscall_SetVol		equ	4
FFFF147E =00000005                  marscall_SetEntry	equ	5
FFFF147E                            	
FFFF147E                            ; ================================================================
FFFF147E                            ; -------------------------------------------
FFFF147E                            ; Init
FFFF147E                            ; -------------------------------------------
FFFF147E                            
FFFF147E                            SMEG_Init:
FFFF147E 41F9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a0
FFFF1484 303C 02FF                  		move.w	#$2FF,d0
FFFF1488                            @ClrAll:
FFFF1488 4298                       		clr.l	(a0)+
FFFF148A 51C8 FFFC                  		dbf	d0,@ClrAll
FFFF148E                            
FFFF148E                            ; -------------------------------------------
FFFF148E                            ; Z80
FFFF148E                            ; -------------------------------------------
FFFF148E                            
FFFF148E                            SMEG_Z80_Init:
FFFF148E 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
FFFF1496 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
FFFF149E                            @WaitZ80:
FFFF149E 0839 0000 00A1 1100        		btst	#0,($A11100).l
FFFF14A6 66F6                       		bne.s	@WaitZ80
FFFF14A8                            
FFFF14A8 41F9 00A0 0000             		lea	($A00000).l,a0
FFFF14AE 303C 1FFF                  		move.w	#$1FFF,d0
FFFF14B2                            @cleanup:
FFFF14B2 4218                       		clr.b	(a0)+
FFFF14B4 51C8 FFFC                  		dbf	d0,@cleanup
FFFF14B8                            		
FFFF14B8 41FA 0000                  		lea	Z80_Driver(pc),a0
FFFF14BC 43F9 00A0 0000             		lea	($A00000).l,a1
FFFF14C2 323C 0000                  		move.w	#Z80_DriverEnd-Z80_Driver,d1
FFFF14C6                            @ToZ80:
FFFF14C6 12D8                       		move.b	(a0)+,(a1)+
FFFF14C8 51C9 FFFC                  		dbf	d1,@ToZ80
FFFF14CC                            
FFFF14CC                            ; -----------------------------------
FFFF14CC                            
FFFF14CC 33FC 0000 00A1 1200        		move.w	#0,($A11200).l
FFFF14D4 4E71                       		nop
FFFF14D6 4E71                       		nop
FFFF14D8 4E71                       		nop
FFFF14DA 4E71                       		nop
FFFF14DC 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
FFFF14E4 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF14EC                            ; 		rts
FFFF14EC                            		
FFFF14EC                            ; -------------------------------------------
FFFF14EC                            ; Stop ALL Sound
FFFF14EC                            ; -------------------------------------------
FFFF14EC                            
FFFF14EC                            SMEG_StopSnd:
FFFF14EC 103C 002B                  		move.b	#$2B,d0
FFFF14F0 123C 0000                  		move.b	#$00,d1
FFFF14F4 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF1506 13FC 0000 00A0 01ED        		move.b	#0,($A001E0+$D)
FFFF150E 6100 0000                  		bsr	FM_RegWrite_1
FFFF1512 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF1522                            		
FFFF1522 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
FFFF1528 08D6 0002                  		bset	#bitDisabled,(a6)
FFFF152C                            	
FFFF152C 6100 0000                  		bsr	SMEG_FM_Reset
FFFF1530 6100 0000                   		bsr	SMEG_PSG_Reset
FFFF1534 6000 0000                  		bra	SMEG_PCM_Reset
FFFF1538                            		
FFFF1538                            ; -------------------------------------------
FFFF1538                            ; Play Song
FFFF1538                            ; -------------------------------------------
FFFF1538                            
FFFF1538                            SMEG_PlaySong:
FFFF1538 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
FFFF153E 0896 0002                  		bclr	#bitDisabled,(a6)
FFFF1542 4E75                       		rts
FFFF1544                            		
FFFF1544                            ; -------------------------------------------
FFFF1544                            ; Load SFX
FFFF1544                            ;
FFFF1544                            ; d0 - StartOfSong
FFFF1544                            ; d1 - Ticks
FFFF1544                            ; -------------------------------------------
FFFF1544                            
FFFF1544                            SMEG_LoadSfx:
FFFF1544 23C0 FFFF D920             		move.l	d0,(RAM_SMEG_SfxBuff+SongRequest)
FFFF154A 33C1 FFFF D938             		move.w	d1,(RAM_SMEG_SfxBuff+TicksRequest)
FFFF1550 4E75                       		rts
FFFF1552                            
FFFF1552                            ; -------------------------------------------
FFFF1552                            ; Load Song
FFFF1552                            ;
FFFF1552                            ; d0 - StartOfSong
FFFF1552                            ; d1 - Ticks
FFFF1552                            ; -------------------------------------------
FFFF1552                            
FFFF1552                            SMEG_LoadSong:
FFFF1552 23C0 FFFF D8EA             		move.l	d0,(RAM_SMEG_Buffer+SongRequest)
FFFF1558 33C1 FFFF D902             		move.w	d1,(RAM_SMEG_Buffer+TicksRequest)
FFFF155E 4E75                       		rts
FFFF1560                            		
FFFF1560                            ; ================================================================
FFFF1560                            ; -------------------------------------------
FFFF1560                            ; Run
FFFF1560                            ; -------------------------------------------
FFFF1560                            
FFFF1560                            SMEG_Upd:
FFFF1560 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
FFFF1566 6100 0000                  		bsr	@RequestSong
FFFF156A 08D6 0000                  		bset	#bitPriority,(a6)
FFFF156E 6100 0000                                  bsr	@ReadRow
FFFF1572                                            
FFFF1572 4DF9 FFFF D918              		lea	(RAM_SMEG_SfxBuff),a6
FFFF1578 6100 0000                   		bsr	@RequestSfx
FFFF157C 0816 0001                                  btst	#bitSfxOn,(a6)				;Want to play SFX?
FFFF1580 6700                                       beq.s	@Wait
FFFF1582 0896 0000                  		bclr	#bitPriority,(a6)
FFFF1586 6100 0000                  		bsr	@ReadRow
FFFF158A                            @Wait:
FFFF158A 4E75                       		rts
FFFF158C                            
FFFF158C                            ; -------------------------------------------
FFFF158C                            ; Request song
FFFF158C                            ; -------------------------------------------
FFFF158C                            	
FFFF158C                            @RequestSong:
FFFF158C 4AAE 0008                  		tst.l	SongRequest(a6)
FFFF1590 6700                       		beq.s	@Same
FFFF1592 08D6 0002                  		bset	#bitDisabled,(a6)
FFFF1596 6100 FF54                   		bsr	SMEG_StopSnd			;d0-d1 are gone
FFFF159A 4AAE 0008                   		tst.l	SongRequest(a6)
FFFF159E 6B00                        		bmi.s	@Same
FFFF15A0                             		
FFFF15A0 422E 002E                  		clr.b	CurrPattern(a6)
FFFF15A4 422E 0002                  		clr.b	PatternEnd(a6)
FFFF15A8 426E 0028                  		clr.w	PattSize(a6)
FFFF15AC 426E 002A                  		clr.w	PattRead(a6)
FFFF15B0 4BF9 FFFF D960             		lea	(RAM_SMEG_Chnls_BGM),a5
FFFF15B6 422E 002F                  		clr.b	PcmChnOnOff(a6)
FFFF15BA 422E 0000                                  clr.b	DrvStatus(a6)
FFFF15BE 6100 0000                  		bsr	SMEG_Load_SetChnls
FFFF15C2 6100 0000                  		bsr	SMEG_Load_FixBgm
FFFF15C6 6100 0000                   		bsr	SMEG_Load_SetExtChnls
FFFF15CA 0896 0002                  		bclr	#bitDisabled,(a6)
FFFF15CE                            
FFFF15CE 426E 0020                  		clr.w	TicksRequest(a6)
FFFF15D2 42AE 0008                  		clr.l	SongRequest(a6)
FFFF15D6                            @Same:
FFFF15D6 4E75                       		rts
FFFF15D8                            		
FFFF15D8                            ; -------------------------------------------
FFFF15D8                            ; Request sfx
FFFF15D8                            ; -------------------------------------------
FFFF15D8                            
FFFF15D8                            @RequestSfx:
FFFF15D8 4AAE 0008                  		tst.l	SongRequest(a6)
FFFF15DC 67F8                       		beq.s	@Same
FFFF15DE 6BF6                       		bmi.s	@Same
FFFF15E0                            		
FFFF15E0 08D6 0002                  		bset	#bitDisabled,(a6)
FFFF15E4 422E 002E                  		clr.b	CurrPattern(a6)
FFFF15E8 422E 0002                  		clr.b	PatternEnd(a6)
FFFF15EC 426E 0028                  		clr.w	PattSize(a6)
FFFF15F0 426E 002A                  		clr.w	PattRead(a6)
FFFF15F4                            		
FFFF15F4 422E 002F                  		clr.b	PcmChnOnOff(a6)
FFFF15F8 422E 0000                                  clr.b	DrvStatus(a6)
FFFF15FC 08D6 0001                                  bset	#bitSfxOn,(a6)
FFFF1600 4BF9 FFFF DA80             		lea	(RAM_SMEG_Chnls_SFX),a5
FFFF1606 6100 0000                  		bsr	SMEG_Load_SetChnls
FFFF160A 0896 0002                  		bclr	#bitDisabled,(a6)
FFFF160E                            		
FFFF160E 426E 0020                  		clr.w	TicksRequest(a6)
FFFF1612 42AE 0008                  		clr.l	SongRequest(a6)
FFFF1616 4E75                       		rts
FFFF1618                            		
FFFF1618                            ; -------------------------------------------
FFFF1618                            ; Read row
FFFF1618                            ; -------------------------------------------
FFFF1618                            
FFFF1618                            @ReadRow:
FFFF1618 0816 0002                  		btst	#bitDisabled,(a6)
FFFF161C 6600 FF6C                  		bne	@Wait
FFFF1620                            
FFFF1620 046E 0001 0022             		sub.w	#1,TicksRead(a6)
FFFF1626 6A00 FF62                  		bpl	@Wait
FFFF162A 3D6E 0024 0022              		move.w	TicksSet(a6),TicksRead(a6)
FFFF1630                            
FFFF1630                            @NewRow:
FFFF1630 286E 0010                                  movea.l	SongRead(a6),a4
FFFF1634                            
FFFF1634                            ; --------------------------------
FFFF1634                            ; New pattern
FFFF1634                            ; --------------------------------
FFFF1634                            
FFFF1634                            @Next:
FFFF1634 7A00                       		moveq	#0,d5
FFFF1636 7C00                       		moveq	#0,d6
FFFF1638 3C2E 0028                   		move.w	PattSize(a6),d6
FFFF163C 0446 0001                    		sub.w	#1,d6
FFFF1640 3A2E 002A                    		move.w	PattRead(a6),d5
FFFF1644 BC85                        		cmp.l	d5,d6
FFFF1646 6400                        		bcc.s	@NoNextRow
FFFF1648                             		
FFFF1648 426E 002A                  		clr.w	PattRead(a6)
FFFF164C 7A00                       		moveq	#0,d5
FFFF164E 7C00                       		moveq	#0,d6
FFFF1650 1C2E 0002                  		move.b	PatternEnd(a6),d6
FFFF1654 1A2E 002E                  		move.b	CurrPattern(a6),d5
FFFF1658 BC45                       		cmp.w	d5,d6
FFFF165A 6E00                       		bgt.s	@NotEnd
FFFF165C                            		
FFFF165C 286E 000C                  		movea.l	SongStart(a6),a4
FFFF1660 1D5C 0029                  		move.b	(a4)+,PattSize+1(a6)
FFFF1664 1D5C 0028                   		move.b	(a4)+,PattSize(a6)
FFFF1668 D8FC 0006                   		adda	#6,a4
FFFF166C 2D4C 0010                  		move.l	a4,SongRead(a6)
FFFF1670 1D6E 0003 002E             		move.b	PatternLoop(a6),CurrPattern(a6)
FFFF1676 426E 0022                  		clr.w	TicksRead(a6)
FFFF167A 4E75                       		rts
FFFF167C                            
FFFF167C                            ; --------------------------------
FFFF167C                            
FFFF167C                            @NotEnd:
FFFF167C 062E 0001 002E             		add.b	#1,CurrPattern(a6)
FFFF1682 7000                       		moveq	#0,d0
FFFF1684 102E 002E                  		move.b	CurrPattern(a6),d0
FFFF1688 B02E 0003                  		cmp.b	PatternLoop(a6),d0
FFFF168C 6600                       		bne.s	@DontSaveLoop
FFFF168E 2D4C 000C                  		move.l	a4,SongStart(a6)
FFFF1692                            @DontSaveLoop:
FFFF1692 7200                       		moveq	#0,d1
FFFF1694 121C                       		move.b	(a4)+,d1
FFFF1696 141C                       		move.b	(a4)+,d2
FFFF1698 E14A                       		lsl.w	#8,d2
FFFF169A 8242                       		or	d2,d1
FFFF169C 3D41 0028                  		move.w	d1,PattSize(a6)
FFFF16A0 D8FC 0006                  		adda	#6,a4
FFFF16A4                            		
FFFF16A4                            ; --------------------------------
FFFF16A4                            ; Current pattern
FFFF16A4                            ; --------------------------------
FFFF16A4                            
FFFF16A4                            @NoNextRow:
FFFF16A4 7C00                       		moveq	#0,d6
FFFF16A6 7000                       		moveq	#0,d0
FFFF16A8 101C                       		move.b	(a4)+,d0
FFFF16AA                            
FFFF16AA 4A40                       		tst.w	d0
FFFF16AC 6600                       		bne.s	@ValidNote
FFFF16AE                            
FFFF16AE 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF16B4 2D4C 0010                  		move.l	a4,SongRead(a6)
FFFF16B8 4E75                       		rts
FFFF16BA                            
FFFF16BA                            @ValidNote:
FFFF16BA 4A00                       		tst.b	d0
FFFF16BC 6A00                       		bpl.s	@Not80
FFFF16BE 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF16C4 0880 0007                  		bclr	#7,d0
FFFF16C8 1C1C                       		move.b	(a4)+,d6
FFFF16CA                            @Not80:
FFFF16CA 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF16D0 0440 0001                  		sub.w	#1,d0
FFFF16D4 1D40 0032                  		move.b	d0,LastPattChn(a6)
FFFF16D8                            
FFFF16D8 4BF9 FFFF D960             		lea 	(RAM_SMEG_Chnls_BGM),a5
FFFF16DE 0816 0000                  		btst 	#bitPriority,(a6)
FFFF16E2 6600                       		bne.s	@MusicPrio
FFFF16E4 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF16EA 4BF9 FFFF DA80             		lea 	(RAM_SMEG_Chnls_SFX),a5
FFFF16F0 08F3 0000 0000              		bset	#0,(a3,d0.w)
FFFF16F6                            @MusicPrio:
FFFF16F6 C0FC 0010                  		mulu.w	#sizeof_Chn,d0
FFFF16FA DAC0                       		adda	d0,a5
FFFF16FC                            		
FFFF16FC 4A46                       		tst.w	d6
FFFF16FE 6700                       		beq.s	@NotRest
FFFF1700 422D 0006                  		clr.b	Chn_Type(a5)
FFFF1704 1B46 0006                  		move.b	d6,Chn_Type(a5)
FFFF1708                            
FFFF1708                            @NotRest:
FFFF1708                            
FFFF1708                            ; -------------
FFFF1708                            ; Note
FFFF1708                            ; -------------
FFFF1708                            
FFFF1708 082D 0004 0006             		btst	#bitSameNote,Chn_Type(a5)
FFFF170E 6600                       		bne.s	@PlayOnly
FFFF1710 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
FFFF1716 6700                       		beq.s	@NoNote
FFFF1718                            
FFFF1718 1B5C 000B                                  move.b	(a4)+,Chn_Note(a5)
FFFF171C 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF1722                            
FFFF1722                            @PlayOnly:
FFFF1722 6100 0000                  		bsr	SMEG_ChannelRest
FFFF1726                            @NoNote:
FFFF1726                            
FFFF1726                            ; -------------
FFFF1726                            ; Instrument
FFFF1726                            ; -------------
FFFF1726                            
FFFF1726 082D 0005 0006              		btst	#bitSameInst,Chn_Type(a5)
FFFF172C 6600                       		bne.s	@SameInst
FFFF172E 082D 0001 0006             		btst	#bitInst,Chn_Type(a5)
FFFF1734 6700                       		beq.s	@NoInst
FFFF1736                            
FFFF1736 1B5C 0008                  		move.b	(a4)+,Chn_Inst(a5)
FFFF173A 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF1740                            
FFFF1740                            @SameInst:
FFFF1740 6100 0000                  		bsr	SMEG_SetVoice
FFFF1744                            @NoInst:
FFFF1744                            
FFFF1744                            ; -------------
FFFF1744                            ; Volume
FFFF1744                            ; -------------
FFFF1744                            
FFFF1744 082D 0006 0006              		btst	#bitSameVol,Chn_Type(a5)
FFFF174A 6600                        		bne.s	@SameVol
FFFF174C 082D 0002 0006             		btst	#bitVolume,Chn_Type(a5)
FFFF1752 6700                       		beq.s	@NoVolume
FFFF1754                            
FFFF1754 426D 0004                  		clr.w	Chn_Portam(a5)
FFFF1758 426D 0002                  		clr.w	Chn_Effect(a5)
FFFF175C 7000                                       moveq	#0,d0
FFFF175E 101C                       		move.b	(a4)+,d0
FFFF1760 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF1766 0440 0040                  		sub.w	#64,d0
FFFF176A 4440                       		neg.w	d0
FFFF176C 1B40 0009                                  move.b	d0,Chn_Vol(a5)
FFFF1770                            
FFFF1770                            @SameVol:
FFFF1770 6100 0000                  		bsr	@ChnVolume
FFFF1774                            @NoVolume:
FFFF1774                            
FFFF1774                            ; -------------
FFFF1774                            ; Effect
FFFF1774                            ; -------------
FFFF1774                            
FFFF1774 082D 0007 0006              		btst	#bitSameEffect,Chn_Type(a5)
FFFF177A 6600                        		bne.s	@SameEffect
FFFF177C 082D 0003 0006             		btst	#bitEffect,Chn_Type(a5)
FFFF1782 6700                       		beq.s	@NoEffect
FFFF1784                            
FFFF1784 1B5C 0002                  		move.b	(a4)+,Chn_Effect(a5)
FFFF1788 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF178E 1B5C 0003                  		move.b	(a4)+,Chn_Effect+1(a5)
FFFF1792 066E 0001 002A             		add.w	#1,PattRead(a6)
FFFF1798                            @SameEffect:
FFFF1798 6100 0000                  		bsr	@ChannelEffects
FFFF179C                            @NoEffect:
FFFF179C                            
FFFF179C                            ; --------------
FFFF179C                            ; Play the note
FFFF179C                            ; --------------
FFFF179C                            
FFFF179C 082D 0004 0006              		btst	#bitSameNote,Chn_Type(a5)
FFFF17A2 6600                        		bne.s	@SameNote
FFFF17A4 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
FFFF17AA 6700 FE88                  		beq	@Next
FFFF17AE                            @SameNote:
FFFF17AE 6100 0000                  		bsr	@ChannelPlay
FFFF17B2 6000 FE80                  		bra	@Next
FFFF17B6                            
FFFF17B6                            ; ================================================================
FFFF17B6                            ; -------------------------------
FFFF17B6                            ; Set Freq
FFFF17B6                            ; -------------------------------
FFFF17B6                            
FFFF17B6                            @NoteFreq:
FFFF17B6 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF17BC 6700 0000                  		beq	@ResetFreq
FFFF17C0                            		
FFFF17C0 0C40 00FF                  		cmp.w	#$FF,d0
FFFF17C4 6700                       		beq.s	@ResetFreq
FFFF17C6 0C40 00FE                  		cmp.w	#$FE,d0
FFFF17CA 6700                       		beq.s	@ResetFreq
FFFF17CC                            		
FFFF17CC 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF17D2 6C00 0000                  		bge	@PCM_Freq
FFFF17D6                            		
FFFF17D6 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF17DA 6B00 0000                  		bmi	@PSG_Freq
FFFF17DE 0C2D 0006 0007                             cmp.b	#FM_6,Chn_ID(a5)
FFFF17E4 6600                                       bne.s	@NoChk6
FFFF17E6 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
FFFF17EC 6600 0000                  		bne	@DAC_Set
FFFF17F0                            
FFFF17F0                            @NoChk6:
FFFF17F0 7200                                       moveq	#0,d1
FFFF17F2 1200                                       move.b	d0,d1
FFFF17F4 7400                                       moveq	#0,d2
FFFF17F6 E349                       		lsl.w	#1,d1
FFFF17F8 3B7B 1000 0000             		move.w	@Freq_FM(pc,d1.w),Chn_Freq(a5)
FFFF17FE 4E75                       		rts
FFFF1800                            
FFFF1800                            @ResetFreq:
FFFF1800 0816 0000                    		btst	#bitPriority,(a6)
FFFF1804 6700                         		beq.s	@SfxMode
FFFF1806 7200                        		moveq	#0,d1
FFFF1808 122E 0032                   		move.b	LastPattChn(a6),d1
FFFF180C 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF1812 08B3 0000 1000              		bclr	#0,(a3,d1.w)
FFFF1818                            @SfxMode:
FFFF1818 426D 0000                  		clr.w	Chn_Freq(a5)
FFFF181C 4E75                       		rts
FFFF181E                            		
FFFF181E                            ; -------------------------------
FFFF181E                            ; FM Frequencies
FFFF181E                            ; -------------------------------
FFFF181E                            
FFFF181E                            @Freq_FM:
FFFF181E                            ; 		dc.w $269	;NULL
FFFF181E 028D                       		dc.w $28d	;C-0 $00
FFFF1820 02B4                       		dc.w $2b4
FFFF1822 02DD                       		dc.w $2dd
FFFF1824 0309                       		dc.w $309
FFFF1826 0337                       		dc.w $337
FFFF1828 0368                       		dc.w $368
FFFF182A 039C                       		dc.w $39c
FFFF182C 03D3                       		dc.w $3d3
FFFF182E 040D                       		dc.w $40d
FFFF1830 044B                       		dc.w $44b
FFFF1832 048C                       		dc.w $48c
FFFF1834 0269                       		dc.w $269
FFFF1836 028D                       		dc.w $28d	;C-1 $0C
FFFF1838 02B4                       		dc.w $2b4
FFFF183A 02DD                       		dc.w $2dd
FFFF183C 0309                       		dc.w $309
FFFF183E 0337                       		dc.w $337
FFFF1840 0368                       		dc.w $368
FFFF1842 039C                       		dc.w $39c
FFFF1844 03D3                       		dc.w $3d3
FFFF1846 040D                       		dc.w $40d
FFFF1848 044B                       		dc.w $44b
FFFF184A 048C                       		dc.w $48c
FFFF184C 0A69                       		dc.w $a69
FFFF184E 0A8D                       		dc.w $a8d	;C-2 $18
FFFF1850 0AB4                       		dc.w $ab4
FFFF1852 0ADD                       		dc.w $add
FFFF1854 0B09                       		dc.w $b09
FFFF1856 0B37                       		dc.w $b37
FFFF1858 0B68                       		dc.w $b68
FFFF185A 0B9C                       		dc.w $b9c
FFFF185C 0BD3                       		dc.w $bd3
FFFF185E 0C0D                       		dc.w $c0d
FFFF1860 0C4B                       		dc.w $c4b
FFFF1862 0C8C                       		dc.w $c8c
FFFF1864 1269                       		dc.w $1269
FFFF1866 128D                       		dc.w $128d	;C-3 $24
FFFF1868 12B4                       		dc.w $12b4
FFFF186A 12DD                       		dc.w $12dd
FFFF186C 1309                       		dc.w $1309
FFFF186E 1337                       		dc.w $1337
FFFF1870 1368                       		dc.w $1368
FFFF1872 139C                       		dc.w $139c
FFFF1874 13D3                       		dc.w $13d3
FFFF1876 140D                       		dc.w $140d
FFFF1878 144B                       		dc.w $144b
FFFF187A 148C                       		dc.w $148c
FFFF187C 1A69                       		dc.w $1a69
FFFF187E 1A8D                       		dc.w $1a8d	;C-4 $30
FFFF1880 1AB4                       		dc.w $1ab4
FFFF1882 1ADD                       		dc.w $1add
FFFF1884 1B09                       		dc.w $1b09
FFFF1886 1B37                       		dc.w $1b37
FFFF1888 1B68                       		dc.w $1b68
FFFF188A 1B9C                       		dc.w $1b9c
FFFF188C 1BD3                       		dc.w $1bd3
FFFF188E 1C0D                       		dc.w $1c0d
FFFF1890 1C4B                       		dc.w $1c4b
FFFF1892 1C8C                       		dc.w $1c8c
FFFF1894 2269                       		dc.w $2269
FFFF1896 228D                       		dc.w $228d	;C-5 $3C
FFFF1898 22B4                       		dc.w $22b4
FFFF189A 22DD                       		dc.w $22dd
FFFF189C 2309                       		dc.w $2309
FFFF189E 2337                       		dc.w $2337
FFFF18A0 2368                       		dc.w $2368
FFFF18A2 239C                       		dc.w $239c
FFFF18A4 23D3                       		dc.w $23d3
FFFF18A6 240D                       		dc.w $240d
FFFF18A8 244B                       		dc.w $244b
FFFF18AA 248C                       		dc.w $248c
FFFF18AC 2A69                       		dc.w $2a69
FFFF18AE 2A8D                       		dc.w $2a8d	;C-6 $48
FFFF18B0 2AB4                       		dc.w $2ab4
FFFF18B2 2ADD                       		dc.w $2add
FFFF18B4 2B09                       		dc.w $2b09
FFFF18B6 2B37                       		dc.w $2b37
FFFF18B8 2B68                       		dc.w $2b68
FFFF18BA 2B9C                       		dc.w $2b9c
FFFF18BC 2BD3                       		dc.w $2bd3
FFFF18BE 2C0D                       		dc.w $2c0d
FFFF18C0 2C4B                       		dc.w $2c4b
FFFF18C2 2C8C                       		dc.w $2c8c
FFFF18C4 3269                       		dc.w $3269	;C-7 $54
FFFF18C6 328D                       		dc.w $328d
FFFF18C8 32B4                       		dc.w $32b4
FFFF18CA 32DD                       		dc.w $32dd
FFFF18CC 3309                       		dc.w $3309
FFFF18CE 3337                       		dc.w $3337
FFFF18D0 3368                       		dc.w $3368
FFFF18D2 339C                       		dc.w $339c
FFFF18D4 33D3                       		dc.w $33d3
FFFF18D6 340D                       		dc.w $340d
FFFF18D8 344B                       		dc.w $344b
FFFF18DA 348C                       		dc.w $348c
FFFF18DC                            		even
FFFF18DC                            		
FFFF18DC                            ; -------------------------------
FFFF18DC                            ; PSG Freq
FFFF18DC                            ; -------------------------------
FFFF18DC                            
FFFF18DC                            @PSG_Freq:
FFFF18DC 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
FFFF18E2 6600                       		bne.s	@NormalPSG
FFFF18E4 3B7C 0001 0000             		move.w	#1,Chn_Freq(a5)
FFFF18EA 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
FFFF18F0 6700 0000                  		beq	@Disabled
FFFF18F4                            @NormalPSG:
FFFF18F4 7200                                       moveq	#0,d1
FFFF18F6 1200                                       move.b	d0,d1
FFFF18F8 E349                       		lsl.w	#1,d1
FFFF18FA 343B 1000                  		move.w	@Notes_PSG(pc,d1.w),d2
FFFF18FE 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
FFFF1904 6600                       		bne.s	@NotNoiseFix
FFFF1906 343B 1000                  		move.w	(@Notes_PSG+(12*2))(pc,d1.w),d2		
FFFF190A                            @NotNoiseFix:
FFFF190A 3B42 0000                   		move.w	d2,Chn_Freq(a5)
FFFF190E 046D 0001 0000             		sub.w	#1,Chn_Freq(a5)
FFFF1914 4E75                       		rts
FFFF1916                            
FFFF1916                            ; -------------------------------
FFFF1916                            ; PSG Frequencies
FFFF1916                            ; -------------------------------
FFFF1916                            
FFFF1916                            @Notes_PSG:
FFFF1916 0000                       		dc.w 0		;C-0 $0
FFFF1918 0000                       		dc.w 0
FFFF191A 0000                       		dc.w 0
FFFF191C 0000                       		dc.w 0
FFFF191E 0000                       		dc.w 0
FFFF1920 0000                       		dc.w 0
FFFF1922 0000                       		dc.w 0
FFFF1924 0000                       		dc.w 0
FFFF1926 0000                       		dc.w 0
FFFF1928 0000                       		dc.w 0
FFFF192A 0000                       		dc.w 0
FFFF192C 0000                       		dc.w 0
FFFF192E                            		
FFFF192E 0000                       		dc.w 0		;C-1 $C
FFFF1930 0000                       		dc.w 0
FFFF1932 0000                       		dc.w 0
FFFF1934 0000                       		dc.w 0
FFFF1936 0000                       		dc.w 0
FFFF1938 0000                       		dc.w 0
FFFF193A 0000                       		dc.w 0
FFFF193C 0000                       		dc.w 0
FFFF193E 0000                       		dc.w 0
FFFF1940 0000                       		dc.w 0
FFFF1942 0000                       		dc.w 0
FFFF1944 0000                       		dc.w 0
FFFF1946                            		
FFFF1946 0000                       		dc.w 0		;C-2 $18
FFFF1948 0000                       		dc.w 0
FFFF194A 0000                       		dc.w 0
FFFF194C 0000                       		dc.w 0
FFFF194E 0000                       		dc.w 0
FFFF1950 0000                       		dc.w 0
FFFF1952 0000                       		dc.w 0
FFFF1954 0000                       		dc.w 0
FFFF1956 0000                       		dc.w 0
FFFF1958 0000                       		dc.w 0
FFFF195A 0000                       		dc.w 0
FFFF195C 0000                       		dc.w 0
FFFF195E                            
FFFF195E 0000                       		dc.w 0		;C-3 $24
FFFF1960 0000                       		dc.w 0
FFFF1962 0000                       		dc.w 0
FFFF1964 0000                       		dc.w 0
FFFF1966 0000                       		dc.w 0
FFFF1968 0000                       		dc.w 0
FFFF196A 0000                       		dc.w 0
FFFF196C 0000                       		dc.w 0
FFFF196E 0000                       		dc.w 0
FFFF1970 03F8                       		dc.w $3F8
FFFF1972 03BF                                       dc.w $3BF
FFFF1974 0389                                       dc.w $389
FFFF1976                                            
FFFF1976 0356                       		dc.w $356	;C-4 $30
FFFF1978 0326                                       dc.w $326
FFFF197A 02F9                                       dc.w $2F9
FFFF197C 02CE                                       dc.w $2CE
FFFF197E 02A5                                       dc.w $2A5
FFFF1980 0280                                       dc.w $280
FFFF1982 025C                                       dc.w $25C
FFFF1984 023A                                       dc.w $23A
FFFF1986 021A                                       dc.w $21A
FFFF1988 01FB                       		dc.w $1FB
FFFF198A 01DF                                       dc.w $1DF
FFFF198C 01C4                                       dc.w $1C4
FFFF198E                                            
FFFF198E 01AB                                       dc.w $1AB	;C-5 $3C
FFFF1990 0193                                       dc.w $193
FFFF1992 017D                                       dc.w $17D
FFFF1994 0167                                       dc.w $167
FFFF1996 0153                                       dc.w $153
FFFF1998 0140                                       dc.w $140
FFFF199A 012E                       		dc.w $12E
FFFF199C 011D                                       dc.w $11D
FFFF199E 010D                                       dc.w $10D
FFFF19A0 00FE                                       dc.w $FE
FFFF19A2 00EF                                       dc.w $EF
FFFF19A4 00E2                                       dc.w $E2
FFFF19A6                                            
FFFF19A6 00D6                                       dc.w $D6	;C-6 $48
FFFF19A8 00C9                                       dc.w $C9
FFFF19AA 00BE                                       dc.w $BE
FFFF19AC 00B4                                       dc.w $B4
FFFF19AE 00A9                       		dc.w $A9
FFFF19B0 00A0                                       dc.w $A0
FFFF19B2 0097                                       dc.w $97
FFFF19B4 008F                                       dc.w $8F
FFFF19B6 0087                                       dc.w $87
FFFF19B8 007F                                       dc.w $7F
FFFF19BA 0078                                       dc.w $78
FFFF19BC 0071                                       dc.w $71
FFFF19BE                                            
FFFF19BE 006B                                       dc.w $6B	;C-7 $54
FFFF19C0 0065                                       dc.w $65
FFFF19C2 005F                       		dc.w $5F
FFFF19C4 005A                                       dc.w $5A
FFFF19C6 0055                                       dc.w $55
FFFF19C8 0050                                       dc.w $50
FFFF19CA 004B                                       dc.w $4B
FFFF19CC 0047                                       dc.w $47
FFFF19CE 0043                                       dc.w $43
FFFF19D0 0040                                       dc.w $40
FFFF19D2 003C                                       dc.w $3C
FFFF19D4 0039                                       dc.w $39
FFFF19D6                                            
FFFF19D6 0036                       		dc.w $36	;C-8 $60
FFFF19D8 0033                                       dc.w $33
FFFF19DA 0030                                       dc.w $30
FFFF19DC 002D                                       dc.w $2D
FFFF19DE 002B                                       dc.w $2B
FFFF19E0 0028                                       dc.w $28
FFFF19E2 0026                                       dc.w $26
FFFF19E4 0024                                       dc.w $24
FFFF19E6 0022                                       dc.w $22
FFFF19E8 0020                                       dc.w $20
FFFF19EA 001F                       		dc.w $1F
FFFF19EC 001D                                       dc.w $1D
FFFF19EE                                            
FFFF19EE 001B                                       dc.w $1B	;C-9 $6C
FFFF19F0 001A                                       dc.w $1A
FFFF19F2 0018                                       dc.w $18
FFFF19F4 0017                                       dc.w $17
FFFF19F6 0016                                       dc.w $16
FFFF19F8 0015                                       dc.w $15
FFFF19FA 0013                                       dc.w $13
FFFF19FC 0012                                       dc.w $12
FFFF19FE 0011                       		dc.w $11
FFFF1A00 0010                        		dc.w $10 ;Custom...
FFFF1A02 0009                        		dc.w $9
FFFF1A04 0008                        		dc.w $8
FFFF1A06                            
FFFF1A06                            		even
FFFF1A06                            		
FFFF1A06                            ; -------------------------------
FFFF1A06                            ; Set DAC
FFFF1A06                            ; -------------------------------
FFFF1A06                            
FFFF1A06                            @DAC_Set:
FFFF1A06 426D 0000                  		clr.w	Chn_Freq(a5)
FFFF1A0A 1B40 0000                                  move.b	d0,Chn_Freq(a5)
FFFF1A0E 4E75                                       rts
FFFF1A10                            
FFFF1A10                            ; -------------------------------
FFFF1A10                            ; Set PCM/PWM
FFFF1A10                            ; -------------------------------
FFFF1A10                            
FFFF1A10                            @PCM_Freq:
FFFF1A10                            		
FFFF1A10 7200                         		moveq	#0,d1
FFFF1A12 122D 0007                    		move.b	Chn_ID(a5),d1
FFFF1A16 0201 000F                    		and.b	#$F,d1
FFFF1A1A 7200                                       moveq	#0,d1
FFFF1A1C 1200                                       move.b	d0,d1
FFFF1A1E D22D 000E                  		add.b	Chn_PCM_Pitch(a5),d1
FFFF1A22 E349                       		lsl.w	#1,d1
FFFF1A24 323B 1000                  		move.w	@Notes_PCM(pc,d1.w),d1
FFFF1A28 0641 0008                   		add.w	#8,d1
FFFF1A2C 3B41 0000                  		move.w	d1,Chn_Freq(a5)
FFFF1A30                            		
FFFF1A30 4E75                       		rts
FFFF1A32                            
FFFF1A32                            ; -------------------------------
FFFF1A32                            ; PCM Frequencies
FFFF1A32                            ; -------------------------------
FFFF1A32                            
FFFF1A32                            @Notes_PCM:
FFFF1A32 0000 0000 0000 0000 0000+   		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0	;0
FFFF1A4A 0000 0000 0000 0000 0000+   		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0	;1
FFFF1A62 0000 0000 0000 0000 0000+  		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0	;2
FFFF1A7A 00F6 0104 0113 0124 0135+  		dc.w $00F6,$0104,$0113,$0124,$0135,$0148,$015B,$0170,$0186,$019D,$01B5,$01D0	;3
FFFF1A92 01EB 0208 0228 0248 026B+  		dc.w $01EB,$0208,$0228,$0248,$026B,$0291,$02B8,$02E1,$030E,$033C,$036E,$03A3	;4 16000hz
FFFF1AAA 03DA 0415 0454 0497 04DD+  		dc.w $03DA,$0415,$0454,$0497,$04DD,$0528,$0578,$05CB,$0625,$0684,$06E8,$0753	;5
FFFF1AC2 07C4 083B 08B0 093D 09C7+  		dc.w $07C4,$083B,$08B0,$093D,$09C7,$0A60,$0AF8,$0BA8,$0C55,$0D10,$0DE2,$0EBE	;6
FFFF1ADA 0FA4 107A 1186 1280 1396+  		dc.w $0FA4,$107A,$1186,$1280,$1396,$14CC,$1624,$1746,$18DE,$1A38,$1BE0,$1D94	;7
FFFF1AF2 1F65 20FF 2330 2526 2753+  		dc.w $1F65,$20FF,$2330,$2526,$2753,$29B7,$2C63,$2F63,$31E0,$347B,$377B,$3B41	;8
FFFF1B0A 3EE8 4206 4684 4A5A 4EB5+  		dc.w $3EE8,$4206,$4684,$4A5A,$4EB5,$5379,$58E1,$5DE0,$63C0,$68FF,$6EFF,$783C	;9
FFFF1B22 7FC2 83FC 8D14 9780 9D80+  		dc.w $7FC2,$83FC,$8D14,$9780,$9D80,$AA5D,$B1F9,$BBBA,$CC77,$D751,$E333,$F0B5
FFFF1B3A 0000 0000 0000 0000 0000+  		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
FFFF1B52                            		even
FFFF1B52                            		
FFFF1B52                            		
FFFF1B52                            ; ================================================================
FFFF1B52                            ; -------------------------------
FFFF1B52                            ; Set Volume
FFFF1B52                            ; -------------------------------
FFFF1B52                            
FFFF1B52                            @ChnVolume:
FFFF1B52 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF1B58 6700 0000                  		beq	@Return
FFFF1B5C                            
FFFF1B5C 0816 0000                  		btst	#bitPriority,(a6)
FFFF1B60 6700                       		beq.s	@SFX_Mode
FFFF1B62 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
FFFF1B6A 6700                       		beq.s	@SFX_Mode
FFFF1B6C 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF1B72 7200                        		moveq	#0,d1
FFFF1B74 122E 0032                   		move.b	LastPattChn(a6),d1
FFFF1B78 0833 0000 1000             		btst	#0,(a3,d1.w)
FFFF1B7E 6600 0000                  		bne	@Return
FFFF1B82                            @SFX_Mode:
FFFF1B82                            
FFFF1B82 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF1B88 6C00 0000                  		bge	@ChnVol_PCM
FFFF1B8C 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF1B90 6B00 0000                  		bmi	@ChnVol_PSG
FFFF1B94                            
FFFF1B94 266E 0014                  		movea.l	SongVoices(a6),a3
FFFF1B98 7000                       		moveq	#0,d0
FFFF1B9A 102D 0008                  		move.b	Chn_Inst(a5),d0
FFFF1B9E                            @FindNext:
FFFF1B9E 4A53                       		tst.w	(a3)
FFFF1BA0 6B00 0000                  		bmi	@Return
FFFF1BA4 7200                       		moveq	#0,d1
FFFF1BA6 322B 0002                  		move.w	2(a3),d1
FFFF1BAA B053                       		cmp.w	(a3),d0
FFFF1BAC 6700                       		beq.s	@Found
FFFF1BAE D6FC 0008                   		adda.w	#8,a3
FFFF1BB2 60EA                       		bra.s	@FindNext
FFFF1BB4                            
FFFF1BB4                            @Found:
FFFF1BB4 D6FC 0004                  		adda.w	#4,a3
FFFF1BB8 2653                       		movea.l	(a3),a3
FFFF1BBA 4A41                       		tst.w	d1
FFFF1BBC 6700                       		beq.s	@Nothing
FFFF1BBE                            @FindNext2:
FFFF1BBE D6FC 0019                  		adda	#$19,a3
FFFF1BC2 51C9 FFFA                  		dbf	d1,@FindNext2
FFFF1BC6                            @Nothing:
FFFF1BC6 D6FC 0018                  		adda	#$18,a3
FFFF1BCA                            
FFFF1BCA 103C 0028                  		move.b	#$28,d0
FFFF1BCE 7200                       		moveq	#0,d1
FFFF1BD0 D22D 0007                  		add.b	Chn_ID(a5),d1
FFFF1BD4 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF1BE6 6100 0000                  		bsr	FM_RegWrite_1
FFFF1BEA                            
FFFF1BEA 2D4C 0004                  		move.l	a4,AddrBackup(a6)
FFFF1BEE 49FA 0000                  		lea	SMEG_RegSetVol-1(pc),a4
FFFF1BF2 7C01                       		moveq	#1,d6
FFFF1BF4                            @TryNext:
FFFF1BF4 7200                       		moveq	#0,d1
FFFF1BF6 1213                       		move.b	(a3),d1
FFFF1BF8 D22D 000A                  		add.b	Chn_DefVol(a5),d1
FFFF1BFC D22D 0009                  		add.b	Chn_Vol(a5),d1
FFFF1C00                            
FFFF1C00 7600                                       moveq	#0,d3
FFFF1C02 162D 0007                                  move.b	Chn_ID(a5),d3
FFFF1C06 7000                                       moveq	#0,d0
FFFF1C08 1014                                       move.b	(a4),d0
FFFF1C0A 0C00 004C                                  cmp.b	#$4C,d0
FFFF1C0E 6700                       		beq.s	@Is4C
FFFF1C10 4A13                       		tst.b	(a3)
FFFF1C12 6600                       		bne.s	@FM_Return
FFFF1C14                            
FFFF1C14                            @Is4C:
FFFF1C14 98FC 0002                                  suba	#2,a4
FFFF1C18 96FC 0002                                  suba	#2,a3
FFFF1C1C                            
FFFF1C1C 0C2D 0004 0007                             cmp.b	#FM_4,Chn_ID(a5)
FFFF1C22 6C00                                       bge.s	@FM456
FFFF1C24 D003                       		add.b	d3,d0
FFFF1C26                            
FFFF1C26 6100 0000                  		bsr	FM_RegWrite_1
FFFF1C2A 51CE FFC8                  		dbf	d6,@TryNext
FFFF1C2E 6000                       		bra.s	@FM_Return
FFFF1C30                            
FFFF1C30                            @FM456:
FFFF1C30 0443 0004                  		sub.w	#4,d3
FFFF1C34 D003                       		add.b	d3,d0
FFFF1C36 6100 0000                  		bsr	FM_RegWrite_2
FFFF1C3A 51CE FFB8                  		dbf	d6,@TryNext
FFFF1C3E                            
FFFF1C3E                            @FM_Return:
FFFF1C3E 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF1C4E 286E 0004                  		move.l	AddrBackup(a6),a4
FFFF1C52                            @Return:
FFFF1C52 4E75                       		rts
FFFF1C54                            
FFFF1C54                            ; -------------------------------
FFFF1C54                            
FFFF1C54                            @ChnVol_PSG:
FFFF1C54 7200                       		moveq	#0,d1
FFFF1C56 122D 0009                  		move.b	Chn_Vol(a5),d1
FFFF1C5A 303C 000F                  		move.w	#$F,d0
FFFF1C5E 4A41                       		tst.w	d1
FFFF1C60 6700                       		beq.s	@DontFix
FFFF1C62                            
FFFF1C62 0441 0040                  		sub.w	#64,d1
FFFF1C66 4441                       		neg.w	d1
FFFF1C68 E449                       		lsr.w	#2,d1
FFFF1C6A 3001                       		move.w	d1,d0
FFFF1C6C                            
FFFF1C6C                            	;	move.b	Chn_DefVol(a5),d3
FFFF1C6C                            	;	lsr.w	#2,d3
FFFF1C6C                            	;	add.w	d3,d0
FFFF1C6C                            	;	moveq	#$F,d0
FFFF1C6C                            	;	sub.w	d2,d0
FFFF1C6C                            	;	cmp.w	#$F,d0
FFFF1C6C                            	;	beq.s	@DontFix
FFFF1C6C                            	;	sub.w	#1,d0
FFFF1C6C                            	
FFFF1C6C                            @DontFix:
FFFF1C6C 7200                       		moveq	#0,d1
FFFF1C6E 122D 0007                  		move.b	Chn_ID(a5),d1
FFFF1C72 0881 0007                  		bclr	#7,d1
FFFF1C76 EA49                       		lsr.w	#5,d1
FFFF1C78                            		
FFFF1C78 0200 000F                  		and.b	#$F,d0
FFFF1C7C 0201 0003                  		and.b	#$3,d1
FFFF1C80 7400                       		moveq	#0,d2
FFFF1C82 143C 000F                  		move.b	#$F,d2
FFFF1C86 9400                       		sub.b	d0,d2
FFFF1C88 0002 0090                  		or.b	#%10010000,d2
FFFF1C8C EB09                       		lsl.b	#5,d1
FFFF1C8E 8401                       		or.b	d1,d2
FFFF1C90 13C2 00C0 0011             		move.b	d2,($C00011).l	;$90+channel<<5+($f-vol)
FFFF1C96 4E75                       		rts
FFFF1C98                            
FFFF1C98                            ; -------------------------------
FFFF1C98                            
FFFF1C98                            @ChnVol_PCM:
FFFF1C98                            		
FFFF1C98 7400                        		moveq	#0,d2
FFFF1C9A 7200                        		moveq	#0,d1
FFFF1C9C 143C 00FF                   		move.b	#$FF,d2				;$xx00
FFFF1CA0                            ;     		move.b	Chn_DefVol(a5),d1
FFFF1CA0                            ;       	lsr.w	#4,d1
FFFF1CA0                            ;      		lsl.w	#4,d1
FFFF1CA0                            ;    		sub.b	d1,d2
FFFF1CA0 122D 0009                      		move.b	Chn_Vol(a5),d1
FFFF1CA4 E849                             		lsr.w	#4,d1
FFFF1CA6 E949                            		lsl.w	#4,d1
FFFF1CA8 9401                           		sub.b	d1,d2
FFFF1CAA                               		
FFFF1CAA 7200                        		moveq	#0,d1
FFFF1CAC 122D 0007                   		move.b	Chn_ID(a5),d1
FFFF1CB0 0241 000F                   		and.w	#$F,d1
FFFF1CB4 13C1 00A1 2010              		move.b	d1,(ThisCpu+CommDataM)
FFFF1CBA 13C2 00A1 2011              		move.b	d2,(ThisCpu+CommDataM+1)
FFFF1CC0 7024                        		moveq	#CdTask_SetEnv,d0
FFFF1CC2 6100 0000                   		bsr	SMEG_CD_Call
FFFF1CC6                            
FFFF1CC6 4E75                       		rts
FFFF1CC8                            		
FFFF1CC8                            ; ================================================================
FFFF1CC8                            ; -------------------------------
FFFF1CC8                            ; Channel effect
FFFF1CC8                            ; -------------------------------
FFFF1CC8                            
FFFF1CC8                            @ChannelEffects:
FFFF1CC8 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF1CCE 6700 0000                  		beq	@Null
FFFF1CD2                            		
FFFF1CD2 0816 0000                  		btst	#bitPriority,(a6)
FFFF1CD6 6700                       		beq.s	@SFX_ModeEff
FFFF1CD8 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
FFFF1CE0 6700                       		beq.s	@SFX_ModeEff
FFFF1CE2 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF1CE8 7200                        		moveq	#0,d1
FFFF1CEA 122E 0032                   		move.b	LastPattChn(a6),d1
FFFF1CEE 0833 0000 1000             		btst	#0,(a3,d1.w)
FFFF1CF4 6600 FF5C                  		bne	@Return
FFFF1CF8                            @SFX_ModeEff:
FFFF1CF8                            
FFFF1CF8 7000                       		moveq	#0,d0
FFFF1CFA 102D 0002                  		move.b	Chn_Effect(a5),d0
FFFF1CFE D040                       		add.w	d0,d0
FFFF1D00 323B 0000                  		move.w	@EffectList(pc,d0.w),d1
FFFF1D04 4EFB 1000                  		jmp	@EffectList(pc,d1.w)
FFFF1D08                            		
FFFF1D08                            ; -------------------------------
FFFF1D08                            
FFFF1D08 0000                       @EffectList:	dc.w	@Null-@EffectList
FFFF1D0A 0000                       		dc.w	@Flag_A-@EffectList
FFFF1D0C 0000                       		dc.w	@Null-@EffectList
FFFF1D0E 0000                       		dc.w	@Null-@EffectList
FFFF1D10 0000                       		dc.w	@Flag_D-@EffectList
FFFF1D12 0000                       		dc.w	@Flag_E-@EffectList
FFFF1D14 0000                       		dc.w	@Flag_F-@EffectList
FFFF1D16 0000                       		dc.w	@Null-@EffectList
FFFF1D18 0000                       		dc.w	@Null-@EffectList
FFFF1D1A 0000                       		dc.w	@Null-@EffectList
FFFF1D1C 0000                       		dc.w	@Null-@EffectList
FFFF1D1E 0000                       		dc.w	@Null-@EffectList
FFFF1D20 0000                       		dc.w	@Null-@EffectList
FFFF1D22 0000                       		dc.w	@Flag_M-@EffectList
FFFF1D24 0000                       		dc.w	@Null-@EffectList
FFFF1D26 0000                       		dc.w	@Null-@EffectList
FFFF1D28 0000                       		dc.w	@Null-@EffectList
FFFF1D2A 0000                       		dc.w	@Null-@EffectList
FFFF1D2C 0000                       		dc.w	@Null-@EffectList
FFFF1D2E 0000                       		dc.w	@Null-@EffectList
FFFF1D30 0000                       		dc.w	@Null-@EffectList
FFFF1D32 0000                       		dc.w	@Null-@EffectList
FFFF1D34 0000                       		dc.w	@Null-@EffectList
FFFF1D36 0000                       		dc.w	@Null-@EffectList
FFFF1D38 0000                       		dc.w	@Flag_X-@EffectList
FFFF1D3A 0000                       		dc.w	@Null-@EffectList
FFFF1D3C 0000                       		dc.w	@Flag_Z-@EffectList
FFFF1D3E                            		even
FFFF1D3E                            
FFFF1D3E                            ; -------------------------------
FFFF1D3E                            ; Null effect
FFFF1D3E                            ; -------------------------------
FFFF1D3E                            
FFFF1D3E                            @Null:
FFFF1D3E 4E75                       		rts
FFFF1D40                            
FFFF1D40                            ; -------------------------------
FFFF1D40                            ; Flag A - Set Tick rate
FFFF1D40                            ; -------------------------------
FFFF1D40                            
FFFF1D40                            @Flag_A:
FFFF1D40 7000                       		moveq	#0,d0
FFFF1D42 426E 0024                  		clr.w	TicksSet(a6)
FFFF1D46 102D 0003                  		move.b	Chn_Effect+1(a5),d0
FFFF1D4A 0440 0001                  		sub.w	#1,d0
FFFF1D4E 1D40 0025                  		move.b	d0,TicksSet+1(a6)
FFFF1D52 4E75                       		rts
FFFF1D54                            
FFFF1D54                            ; -------------------------------
FFFF1D54                            ; Flag D - Volume slide
FFFF1D54                            ; -------------------------------
FFFF1D54                            
FFFF1D54                            @Flag_D:
FFFF1D54 7000                       		moveq	#0,d0
FFFF1D56 7200                       		moveq	#0,d1
FFFF1D58 102D 0003                  		move.b	Chn_Effect+1(a5),d0
FFFF1D5C 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF1D60 6A00 0000                  		bpl	@NotPSG
FFFF1D64 E948                       		lsl.w	#4,d0
FFFF1D66                            @NotPSG:
FFFF1D66 122D 0009                  		move.b	Chn_Vol(a5),d1
FFFF1D6A D200                       		add.b	d0,d1
FFFF1D6C 1B41 0009                  		move.b	d1,Chn_Vol(a5)
FFFF1D70 6000 FDE0                  		bra	@ChnVolume
FFFF1D74                            
FFFF1D74                            ; -------------------------------
FFFF1D74                            ; Flag E - Portametro down
FFFF1D74                            ; -------------------------------
FFFF1D74                            
FFFF1D74                            @Flag_E:
FFFF1D74 7000                       		moveq	#0,d0
FFFF1D76 102D 0003                  		move.b	Chn_Effect+1(a5),d0
FFFF1D7A 422D 0004                  		clr.b	Chn_Portam(a5)
FFFF1D7E D12D 0005                  		add.b	d0,Chn_Portam+1(a5)
FFFF1D82 4E75                       		rts
FFFF1D84                            
FFFF1D84                            ; -------------------------------
FFFF1D84                            ; Flag F - Portametro up
FFFF1D84                            ; -------------------------------
FFFF1D84                            
FFFF1D84                            @Flag_F:
FFFF1D84 7000                       		moveq	#0,d0
FFFF1D86 102D 0003                  		move.b	Chn_Effect+1(a5),d0
FFFF1D8A 422D 0005                  		clr.b	Chn_Portam+1(a5)
FFFF1D8E D12D 0004                  		add.b	d0,Chn_Portam(a5)
FFFF1D92 4E75                       		rts
FFFF1D94                            
FFFF1D94                            ; -------------------------------
FFFF1D94                            ; Flag M - Set Channel Volume
FFFF1D94                            ; -------------------------------
FFFF1D94                            
FFFF1D94                            @Flag_M:
FFFF1D94 7000                       		moveq	#0,d0
FFFF1D96 102D 0003                  		move.b	Chn_Effect+1(a5),d0
FFFF1D9A                            	;	tst.b	Chn_ID(a5)
FFFF1D9A                            	;	bpl	@NotPSG_H
FFFF1D9A                            
FFFF1D9A 4440                       		neg.w	d0
FFFF1D9C 0440 00D0                  		sub.w	#$D0,d0
FFFF1DA0                            ;@NotPSG_H:
FFFF1DA0 1B40 000A                  		move.b	d0,Chn_DefVol(a5)
FFFF1DA4 6000 FDAC                  		bra	@ChnVolume
FFFF1DA8                            
FFFF1DA8                            ; -------------------------------
FFFF1DA8                            ; Flag X - Stereo
FFFF1DA8                            ; -------------------------------
FFFF1DA8                            
FFFF1DA8                            @Flag_X:
FFFF1DA8 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF1DAC 6B90                       		bmi.s	@Null
FFFF1DAE 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF1DB4 6C00 0000                  		bge	@PCM_Pan
FFFF1DB8                            		
FFFF1DB8 7000                       		moveq	#0,d0
FFFF1DBA 303C 00C0                  		move.w	#$C0,d0
FFFF1DBE 0C2D 0080 0003                             cmp.b	#$80,Chn_Effect+1(a5)
FFFF1DC4 6700                                       beq.s	@SetPan
FFFF1DC6 4A2D 0003                  		tst.b	Chn_Effect+1(a5)
FFFF1DCA 6B00                       		bmi.s	@Right
FFFF1DCC 6A00                       		bpl.s	@Left
FFFF1DCE                            @SetPan:
FFFF1DCE 1B40 000C                  		move.b	d0,Chn_Panning(a5)
FFFF1DD2 4E75                       		rts
FFFF1DD4                            @Left:
FFFF1DD4 303C 0080                  		move.w	#$80,d0
FFFF1DD8 60F4                       		bra.s	@SetPan
FFFF1DDA                            @Right:
FFFF1DDA 303C 0040                  		move.w	#$40,d0
FFFF1DDE 60EE                       		bra.s	@SetPan
FFFF1DE0                            
FFFF1DE0                            ; -------------------------------
FFFF1DE0                            ; PCM Panning
FFFF1DE0                            ; -------------------------------
FFFF1DE0                            
FFFF1DE0                            @PCM_Pan:
FFFF1DE0                            		
FFFF1DE0 7000                       		moveq	#0,d0
FFFF1DE2 103C 00CC                  		move.b	#%11001100,d0				;TODO: dejarlo así
FFFF1DE6 0C2D 0080 0003             		cmp.b	#$80,Chn_Effect+1(a5)
FFFF1DEC 6700                       		beq.s	@Return2
FFFF1DEE                                             
FFFF1DEE 4A2D 0003                   		tst.b	Chn_Effect+1(a5)
FFFF1DF2 6B00                        		bmi.s	@Right2
FFFF1DF4 6A00                       		bpl.s	@Left2
FFFF1DF6 6000 0000                  		bra	@Return2
FFFF1DFA                            @Right2:
FFFF1DFA 103C 0080                   		move.b	#%10000000,d0
FFFF1DFE 6000 0000                   		bra	@Return2
FFFF1E02                            @Left2:
FFFF1E02 103C 0008                  		move.b	#%00001000,d0
FFFF1E06                            @Return2:
FFFF1E06 1B40 000C                  		move.b	d0,Chn_Panning(a5)
FFFF1E0A                            
FFFF1E0A                            ; -------------------------------------------------
FFFF1E0A                            
FFFF1E0A 4E75                       		rts
FFFF1E0C                            
FFFF1E0C                            ; ======================================================
FFFF1E0C                            ; -------------------------------
FFFF1E0C                            ; Flag Z
FFFF1E0C                            ; -------------------------------
FFFF1E0C                            
FFFF1E0C                            @Flag_Z:
FFFF1E0C 7000                       		moveq	#0,d0
FFFF1E0E 102D 0003                  		move.b	Chn_Effect+1(a5),d0
FFFF1E12 E848                       		lsr.w	#4,d0
FFFF1E14 D040                       		add.w	d0,d0
FFFF1E16 323B 0000                  		move.w	@HashList(pc,d0.w),d1
FFFF1E1A 102D 0003                  		move.b	Chn_Effect+1(a5),d0		;d0 - $0-$F argument
FFFF1E1E 0200 000F                  		and.b	#$F,d0
FFFF1E22 4EFB 1000                  		jmp	@HashList(pc,d1.w)
FFFF1E26                            
FFFF1E26 0000                       @HashList:	dc.w	@DacStatus-@HashList		;$00 - Status
FFFF1E28 0000                       		dc.w	@FM_Key-@HashList		;$10 - FM Keys ON/OFF
FFFF1E2A FF18                       		dc.w	@Null-@HashList			;$20
FFFF1E2C FF18                       		dc.w	@Null-@HashList			;$30
FFFF1E2E 0000                       		dc.w	@PSG-@HashList			;$40 - PSG Settings
FFFF1E30 FF18                       		dc.w	@Null-@HashList			;$50
FFFF1E32 FF18                       		dc.w	@Null-@HashList			;$60
FFFF1E34 FF18                       		dc.w	@Null-@HashList			;$70
FFFF1E36 FF18                       		dc.w	@Null-@HashList			;$80
FFFF1E38 FF18                       		dc.w	@Null-@HashList			;$90
FFFF1E3A FF18                       		dc.w	@Null-@HashList			;$A0
FFFF1E3C FF18                       		dc.w	@Null-@HashList			;$B0
FFFF1E3E FF18                       		dc.w	@Null-@HashList			;$C0
FFFF1E40 FF18                       		dc.w	@Null-@HashList			;$D0
FFFF1E42 FF18                       		dc.w	@Null-@HashList			;$E0
FFFF1E44 0000                       		dc.w	@FixSfx-@HashList		;$F0 - Finish SFX flag (SFX only)
FFFF1E46                            		even
FFFF1E46                            
FFFF1E46                            ; -------------------------------
FFFF1E46                            
FFFF1E46                            @DacStatus:
FFFF1E46 0240 0003                  		and.w	#3,d0
FFFF1E4A 1D40 0001                  		move.b	d0,DrvSettings(a6)
FFFF1E4E                            		
FFFF1E4E 1200                       		move.b	d0,d1
FFFF1E50 0241 0001                  		and.w	#1,d1
FFFF1E54 EF49                       		lsl.w	#7,d1
FFFF1E56 702B                       		moveq	#$2B,d0
FFFF1E58 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF1E6A 6100 0000                  		bsr	FM_RegWrite_1
FFFF1E6E 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF1E7E                            		
FFFF1E7E 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
FFFF1E84 6700 FDCC                  		beq	@Return
FFFF1E88 6000 0000                  		bra	SMEG_SetVoice_DAC
FFFF1E8C                            
FFFF1E8C                            ; -------------------------------
FFFF1E8C                            
FFFF1E8C                            @FM_Key:
FFFF1E8C 0240 000F                  		and.w	#$F,d0
FFFF1E90 1B40 000D                  		move.b	d0,Chn_FM_Key(a5)
FFFF1E94 4E75                       		rts
FFFF1E96                            
FFFF1E96                            ; -------------------------------
FFFF1E96                            
FFFF1E96                            @PSG:
FFFF1E96 08EE 0002 0001             		bset	#bitTone3,DrvSettings(a6)
FFFF1E9C 0C00 0003                  		cmp.b	#3,d0
FFFF1EA0 6700                       		beq.s	@Tone3
FFFF1EA2 0C00 0007                  		cmp.b	#7,d0
FFFF1EA6 6700                       		beq.s	@Tone3
FFFF1EA8 08AE 0002 0001             		bclr	#bitTone3,DrvSettings(a6)
FFFF1EAE                            @Tone3:
FFFF1EAE 0816 0000                    		btst	#bitPriority,(a6)
FFFF1EB2 6700                         		beq.s	@IsPsg
FFFF1EB4 47F9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a3
FFFF1EBA 176B 0001 0031             		move.b	DrvSettings(a3),DrvSettingsBGM(a3)
FFFF1EC0 1740 0030                  		move.b	d0,PsgLast(a3)
FFFF1EC4                            @IsPsg:
FFFF1EC4 0640 00E0                  		add.w	#$E0,d0
FFFF1EC8 6000 0000                  		bra	@PutPSG
FFFF1ECC                            
FFFF1ECC                            ; -------------------------------
FFFF1ECC                            
FFFF1ECC                            @FixSfx:
FFFF1ECC 0816 0000                     		btst	#bitPriority,(a6)
FFFF1ED0 6600 FD80                    		bne	@Return
FFFF1ED4                            		
FFFF1ED4 47F9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a3
FFFF1EDA 176B 0031 0001              		move.b	DrvSettingsBGM(a3),DrvSettings(a3)
FFFF1EE0 7000                       		moveq 	#0,d0
FFFF1EE2 102B 0030                   		move.b	PsgLast(a3),d0
FFFF1EE6 0640 00E0                  		add.w	#$E0,d0
FFFF1EEA 6100 0000                  		bsr	@PutPSG
FFFF1EEE                            
FFFF1EEE 7000                        		moveq	#0,d0
FFFF1EF0 102E 0032                   		move.b	LastPattChn(a6),d0
FFFF1EF4 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF1EFA 08B3 0000 0000              		bclr	#0,(a3,d0.w)
FFFF1F00                             		
FFFF1F00 0896 0001                    		bclr	#bitSfxOn,(a6)				;SFX finished playing
FFFF1F04 4E75                       		rts
FFFF1F06                            		
FFFF1F06                            ; -------------------------------
FFFF1F06                            
FFFF1F06                            @PutPSG:
FFFF1F06 13C0 00C0 0011             		move.b	d0,($C00011)
FFFF1F0C 4E75                       		rts
FFFF1F0E                            		
FFFF1F0E                            ; ================================================================
FFFF1F0E                            ; -------------------------------
FFFF1F0E                            ; Channel play
FFFF1F0E                            ; -------------------------------
FFFF1F0E                            
FFFF1F0E                            @ChannelPlay:	
FFFF1F0E 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF1F14 6700 0000                  		beq	@Disabled
FFFF1F18                            		
FFFF1F18 0816 0000                  		btst	#bitPriority,(a6)
FFFF1F1C 6700                       		beq.s	@SFX_ModePlay
FFFF1F1E 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
FFFF1F26 6700                       		beq.s	@SFX_ModePlay
FFFF1F28 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF1F2E 7200                        		moveq	#0,d1
FFFF1F30 122E 0032                   		move.b	LastPattChn(a6),d1
FFFF1F34 0833 0000 1000             		btst	#0,(a3,d1.w)
FFFF1F3A 6600 FD16                  		bne	@Return
FFFF1F3E                            @SFX_ModePlay:
FFFF1F3E                            
FFFF1F3E 7000                                       moveq	#0,d0
FFFF1F40 102D 000B                  		move.b	Chn_Note(a5),d0
FFFF1F44 4A2D 0004                  		tst.b	Chn_Portam(a5)
FFFF1F48 6700                       		beq.s	@NoUp
FFFF1F4A D02D 0004                  		add.b	Chn_Portam(a5),d0
FFFF1F4E 6000                       		bra.s	@NoDown
FFFF1F50                            @NoUp:
FFFF1F50 4A2D 0005                  		tst.b	Chn_Portam+1(a5)
FFFF1F54 6700                       		beq.s	@NoDown
FFFF1F56 902D 0005                  		sub.b	Chn_Portam+1(a5),d0
FFFF1F5A                            @NoDown:
FFFF1F5A 6100 F85A                  		bsr	@NoteFreq
FFFF1F5E                            
FFFF1F5E                            @Continue:
FFFF1F5E 382D 0000                  		move.w	Chn_Freq(a5),d4
FFFF1F62 6700 0000                  		beq	SMEG_ChannelRest
FFFF1F66 4A44                       		tst.w	d4
FFFF1F68 6B00 0000                  		bmi	SMEG_ChannelRest
FFFF1F6C                            
FFFF1F6C 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF1F72 6C00 0000                  		bge	@ChannelPlay_PCM
FFFF1F76 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
FFFF1F7C 6600 0000                                  bne	@NoChk6_play
FFFF1F80 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
FFFF1F86 6600 0000                  		bne	@ChannelPlay_DAC
FFFF1F8A                            
FFFF1F8A                            @NoChk6_play:
FFFF1F8A 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF1F8E 6B00 0000                  		bmi	@ChannelPlay_PSG
FFFF1F92                            		
FFFF1F92 6100 0000                  		bsr	SMEG_FM_SetPan
FFFF1F96                            
FFFF1F96 7028                       		moveq	#$28,d0
FFFF1F98 7200                       		moveq	#0,d1
FFFF1F9A D22D 0007                  		add.b	Chn_ID(a5),d1
FFFF1F9E 33FC 0100 00A1 1100 0839+   		Z80_OFF
FFFF1FB0 6100 0000                  		bsr	FM_RegWrite_1
FFFF1FB4                            
FFFF1FB4 7A00                       		moveq	#0,d5
FFFF1FB6 1A2D 0007                  		move.b	Chn_ID(a5),d5
FFFF1FBA 0C05 0004                  		cmp.b	#4,d5
FFFF1FBE 6D00                       		blt.s	@FirstFM
FFFF1FC0 0405 0004                  		sub.b	#4,d5
FFFF1FC4                            @FirstFM:
FFFF1FC4 303C 00A4                  		move.w	#$A4,d0
FFFF1FC8 D005                       		add.b	d5,d0
FFFF1FCA 7200                       		moveq	#0,d1
FFFF1FCC E15C                       		rol.w	#8,d4
FFFF1FCE 1204                       		move.b	d4,d1
FFFF1FD0 6100 0000                  		bsr	SMEG_FM_FindWrite
FFFF1FD4 303C 00A0                  		move.w	#$A0,d0
FFFF1FD8 D005                       		add.b	d5,d0
FFFF1FDA 7200                       		moveq	#0,d1
FFFF1FDC E15C                       		rol.w	#8,d4
FFFF1FDE 1204                       		move.b	d4,d1
FFFF1FE0 6100 0000                  		bsr	SMEG_FM_FindWrite
FFFF1FE4                            
FFFF1FE4 7028                       		moveq	#$28,d0
FFFF1FE6 7200                       		moveq	#0,d1
FFFF1FE8 122D 000D                  		move.b	Chn_FM_Key(a5),d1
FFFF1FEC E949                       		lsl.w	#4,d1
FFFF1FEE D22D 0007                  		add.b	Chn_ID(a5),d1
FFFF1FF2 6100 0000                  		bsr	FM_RegWrite_1
FFFF1FF6                            		
FFFF1FF6 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF2006                            @Disabled:
FFFF2006 4E75                       		rts
FFFF2008                            
FFFF2008                            ; -------------------------------
FFFF2008                            ; Play PSG
FFFF2008                            ; -------------------------------
FFFF2008                            
FFFF2008                            @ChannelPlay_PSG:
FFFF2008 0C2D 00E0 0007             		cmp.b	#$E0,Chn_ID(a5)
FFFF200E 6700                       		beq.s	@PlayNoise
FFFF2010                            
FFFF2010 0C2D 00C0 0007                             cmp.b	#$C0,Chn_ID(a5)
FFFF2016 6600                                       bne.s	@NotPsg3
FFFF2018 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
FFFF201E 6700                       		beq.s	@NotPsg3
FFFF2020 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
FFFF2028 4E75                                       rts
FFFF202A                            
FFFF202A                            @NotPsg3:
FFFF202A 7200                       		moveq	#0,d1
FFFF202C 302D 0000                  		move.w	Chn_Freq(a5),d0
FFFF2030 122D 0007                  		move.b	Chn_ID(a5),d1
FFFF2034 0881 0007                  		bclr	#7,d1
FFFF2038 EA49                       		lsr.w	#5,d1
FFFF203A 6000 0000                  		bra	@SetFreq
FFFF203E                            
FFFF203E                            @PlayNoise:
FFFF203E 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
FFFF2044 67C0                       		beq.s	@Disabled
FFFF2046                            
FFFF2046 302D 0000                  		move.w	Chn_Freq(a5),d0
FFFF204A 7202                       		moveq	#2,d1
FFFF204C                            
FFFF204C                            ;---------------------
FFFF204C                            ; Set frequency
FFFF204C                            ;
FFFF204C                            ; d0 - frequency (0-$3ff)
FFFF204C                            ; d1 - channel (0, 1, 2)
FFFF204C                            ;---------------------
FFFF204C                            
FFFF204C                            @SetFreq:
FFFF204C 1400                       		move.b	d0,d2
FFFF204E 0202 000F                  		and.b	#$F,d2
FFFF2052 0602 0080                  		add.b	#$80,d2
FFFF2056 0201 0003                  		and.b	#$3,d1
FFFF205A EB09                       		lsl.b	#$5,d1
FFFF205C 8401                       		or.b	d1,d2
FFFF205E 13C2 00C0 0011             		move.b	d2,($C00011).l	;$80+channel<<5+(freq&$f)
FFFF2064 E848                       		lsr.w	#$4,d0
FFFF2066 13C0 00C0 0011             		move.b	d0,($C00011).l	;freq>>4
FFFF206C 4E75                       		rts
FFFF206E                            		
FFFF206E                            ; -------------------------------
FFFF206E                            ; Play DAC
FFFF206E                            ; -------------------------------
FFFF206E                            
FFFF206E                            @ChannelPlay_DAC:
FFFF206E                            ; 		if SMEG_Z80
FFFF206E                            ;  		btst	#bitDacNote,DrvSettings(a6)
FFFF206E                            ;  		bne	@FoundIt
FFFF206E                            
FFFF206E 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF2080 7000                       		moveq	#0,d0			; TODO: Loop flag
FFFF2082 E308                       		lsl.b	#1,d0
FFFF2084 08C0 0000                  		bset	#0,d0
FFFF2088 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
FFFF208E 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF209E                            @FoundIt:
FFFF209E                            ; 		endif
FFFF209E 4E75                       		rts
FFFF20A0                            
FFFF20A0                            ; -------------------------------
FFFF20A0                            ; Play PCM
FFFF20A0                            ; -------------------------------
FFFF20A0                            
FFFF20A0                            @ChannelPlay_PCM:	
FFFF20A0                            		
FFFF20A0 4AAE 001C                  		tst.l	SongPcmSamp(a6)
FFFF20A4 6700                       		beq.s	@ReturnPCM
FFFF20A6 6B00                       		bmi.s	@ReturnPCM
FFFF20A8                            		
FFFF20A8 7200                        		moveq	#0,d1
FFFF20AA 122D 0007                   		move.b	Chn_ID(a5),d1
FFFF20AE 0241 000F                     		and.w	#$F,d1
FFFF20B2 13C1 00A1 2010              		move.b	d1,(ThisCpu+CommDataM)
FFFF20B8 122D 000C                   		move.b	Chn_Panning(a5),d1
FFFF20BC 13C1 00A1 2011              		move.b	d1,(ThisCpu+CommDataM+1)
FFFF20C2 7023                        		moveq	#CdTask_SetPan,d0
FFFF20C4 6100 0000                   		bsr	SMEG_CD_Call
FFFF20C8                             		
FFFF20C8 7200                       		moveq	#0,d1
FFFF20CA 122D 0007                  		move.b	Chn_ID(a5),d1
FFFF20CE 0201 000F                  		and.b	#$F,d1
FFFF20D2 13C1 00A1 2010             		move.b	d1,(ThisCpu+CommDataM)
FFFF20D8 33ED 0000 00A1 2012        		move.w	Chn_Freq(a5),(ThisCpu+CommDataM+2)
FFFF20E0 7022                       		moveq	#CdTask_SetFreq,d0
FFFF20E2 6100 0000                  		bsr	SMEG_CD_Call
FFFF20E6 03EE 002F                  		bset	d1,PcmChnOnOff(a6)
FFFF20EA 13EE 002F 00A1 2010        		move.b	PcmChnOnOff(a6),(ThisCpu+CommDataM)
FFFF20F2 7025                       		moveq	#CdTask_SetOnOff,d0
FFFF20F4 6100 0000                  		bsr	SMEG_CD_Call
FFFF20F8                            		
FFFF20F8                            @ReturnPCM:
FFFF20F8                             		
FFFF20F8 4E75                       		rts
FFFF20FA                            
FFFF20FA                            ; -------------------------------
FFFF20FA                            ; Mute/Rest channel
FFFF20FA                            ; -------------------------------
FFFF20FA                            
FFFF20FA                            SMEG_ChannelRest:
FFFF20FA 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF2100 6700                       		beq.s	@Return
FFFF2102                            		
FFFF2102 0816 0000                  		btst	#bitPriority,(a6)
FFFF2106 6700                       		beq.s	@SFX_Mode
FFFF2108 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
FFFF2110 6700                       		beq.s	@SFX_Mode
FFFF2112 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF2118 7200                        		moveq	#0,d1
FFFF211A 122E 0032                   		move.b	LastPattChn(a6),d1
FFFF211E 0833 0000 1000             		btst	#0,(a3,d1.w)
FFFF2124 6600 0000                  		bne	@Return
FFFF2128                            @SFX_Mode:
FFFF2128 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF212C 6B00                       		bmi.s	@PSG_Rest
FFFF212E                            
FFFF212E 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
FFFF2134 6600                                       bne.s	@NoChk6
FFFF2136 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
FFFF213C 6600                       		bne.s	@DAC_Rest
FFFF213E                            
FFFF213E                            @NoChk6:
FFFF213E 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF2144 6C00 0000                  		bge	@PCM_Rest
FFFF2148                            		
FFFF2148 7028                       		moveq	#$28,d0
FFFF214A 7200                                       moveq	#0,d1
FFFF214C 122D 0007                  		move.b	Chn_ID(a5),d1
FFFF2150 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF2162 6100 0000                  		bsr	FM_RegWrite_1
FFFF2166 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF2176                            
FFFF2176                            @Return:
FFFF2176 4E75                       		rts
FFFF2178                            
FFFF2178                            ; -------------------------------
FFFF2178                            ; PSG Rest
FFFF2178                            ; -------------------------------
FFFF2178                            
FFFF2178                            @PSG_Rest:
FFFF2178 7000                       		moveq	#0,d0
FFFF217A 102D 0007                  		move.b	Chn_ID(a5),d0
FFFF217E 0600 001F                  		add.b	#$1F,d0
FFFF2182 13C0 00C0 0011             		move.b	d0,($C00011)
FFFF2188                            
FFFF2188                            @Disabled:
FFFF2188 4E75                       		rts
FFFF218A                            
FFFF218A                            ; -------------------------------
FFFF218A                            ; DAC Rest
FFFF218A                            ; -------------------------------
FFFF218A                            
FFFF218A                            @DAC_Rest:
FFFF218A 33FC 0100 00A1 1100 0839+    		Z80_OFF
FFFF219C 702B                       		moveq	#$2B,d0
FFFF219E 7200                                       moveq	#0,d1
FFFF21A0 6100 0000                    		bsr	FM_RegWrite_1
FFFF21A4                            
FFFF21A4 7000                       		moveq	#0,d0
FFFF21A6 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
FFFF21AC 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF21BC 4E75                       		rts
FFFF21BE                            
FFFF21BE                            ; -------------------------------
FFFF21BE                            ; PCM Rest
FFFF21BE                            ; -------------------------------
FFFF21BE                            
FFFF21BE                            @PCM_Rest:
FFFF21BE                             		
FFFF21BE 4AAE 001C                  		tst.l	SongPcmSamp(a6)
FFFF21C2 6700                       		beq.s	@ReturnPCM
FFFF21C4 6B00                       		bmi.s	@ReturnPCM
FFFF21C6                            		
FFFF21C6 7200                       		moveq	#0,d1
FFFF21C8 122D 0007                  		move.b	Chn_ID(a5),d1
FFFF21CC 0201 000F                  		and.b	#$F,d1
FFFF21D0 03AE 002F                  		bclr	d1,PcmChnOnOff(a6)
FFFF21D4 13EE 002F 00A1 2010        		move.b	PcmChnOnOff(a6),(ThisCpu+CommDataM)
FFFF21DC 7025                       		moveq	#CdTask_SetOnOff,d0
FFFF21DE 6100 0000                  		bsr	SMEG_CD_Call
FFFF21E2                            		
FFFF21E2                            @ReturnPCM:
FFFF21E2 4E75                       		rts
FFFF21E4                            		
FFFF21E4                            ; ================================================================
FFFF21E4                            ; Subs
FFFF21E4                            ; ================================================================
FFFF21E4                            
FFFF21E4                            ; -------------------------------------------
FFFF21E4                            ; Extra channels communication
FFFF21E4                            ; -------------------------------------------
FFFF21E4                            
FFFF21E4                            SMEG_CD_Call:
FFFF21E4 6000 EC58                  		bra	SubCpu_Task_Wait
FFFF21E8 4E75                       		rts
FFFF21EA                            
FFFF21EA                            SMEG_MARS_Call:
FFFF21EA 4E75                        		rts
FFFF21EC                             		
FFFF21EC                            ; -------------------------------------------
FFFF21EC                            ; Set instrument
FFFF21EC                            ; -------------------------------------------
FFFF21EC                            
FFFF21EC                            SMEG_SetVoice:
FFFF21EC 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF21F2 6700 0000                  		beq	@Return
FFFF21F6                            		
FFFF21F6 0816 0000                  		btst	#bitPriority,(a6)
FFFF21FA 6700                       		beq.s	@SFX_Mode
FFFF21FC 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
FFFF2204 6700                       		beq.s	@SFX_Mode
FFFF2206 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
FFFF220C 7200                        		moveq	#0,d1
FFFF220E 122E 0032                   		move.b	LastPattChn(a6),d1
FFFF2212 0833 0000 1000             		btst	#0,(a3,d1.w)
FFFF2218 6600 0000                  		bne	@Return
FFFF221C                            @SFX_Mode:
FFFF221C                            
FFFF221C 4AAE 0014                  		tst.l	SongVoices(a6)
FFFF2220 6700 0000                  		beq	@Return
FFFF2224 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF2228 6B00 0000                  		bmi	@Return
FFFF222C                            
FFFF222C 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
FFFF2232 6600                                       bne.s	@NoChk6_Voice
FFFF2234 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
FFFF223A 6600 0000                  		bne	SMEG_SetVoice_DAC
FFFF223E                            @NoChk6_Voice:
FFFF223E 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF2244 6C00 0000                  		bge	SMEG_SetVoice_PCM
FFFF2248                            		
FFFF2248 7000                       		moveq	#0,d0
FFFF224A 102D 0007                  		move.b	Chn_ID(a5),d0
FFFF224E 0C00 0004                  		cmp.b	#4,d0
FFFF2252 6D00                       		blt.s	@Low3
FFFF2254 0400 0004                  		sub.b	#4,d0
FFFF2258                            @Low3:
FFFF2258 266E 0014                  		movea.l	SongVoices(a6),a3
FFFF225C 7C00                       		moveq	#0,d6
FFFF225E 1C2D 0008                  		move.b	Chn_Inst(a5),d6
FFFF2262                            @FindNext:
FFFF2262 4A53                       		tst.w	(a3)
FFFF2264 6B00 0000                  		bmi	@Return
FFFF2268 7200                       		moveq	#0,d1
FFFF226A 322B 0002                  		move.w	2(a3),d1
FFFF226E BC53                       		cmp.w	(a3),d6
FFFF2270 6700                       		beq.s	@Found
FFFF2272 D6FC 0008                   		adda.w	#8,a3
FFFF2276 60EA                       		bra.s	@FindNext
FFFF2278                            
FFFF2278                            @Found:
FFFF2278 D6FC 0004                  		adda.w	#4,a3
FFFF227C                            
FFFF227C 2653                       		movea.l	(a3),a3
FFFF227E C2FC 0019                  		mulu.w	#$19,d1
FFFF2282 D6C1                       		adda	d1,a3
FFFF2284                            ; 		tst.w	d1
FFFF2284                            ; 		beq.s	@Nothing
FFFF2284                            ; 		sub.w	#1,d1
FFFF2284                            ; @NextFM:
FFFF2284                            ; 		adda	#$19,a3
FFFF2284                            ; 		dbf	d1,@NextFM
FFFF2284                            
FFFF2284                            @Nothing:
FFFF2284 4840                       		swap	d0
FFFF2286 303C 0028                  		move.w	#$28,d0
FFFF228A 7200                       		moveq	#0,d1
FFFF228C 122D 0007                  		move.b	Chn_ID(a5),d1
FFFF2290 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF22A2 6100 0000                  		bsr	FM_RegWrite_1
FFFF22A6 4840                       		swap	d0
FFFF22A8                            
FFFF22A8 2D4C 0004                  		move.l	a4,AddrBackup(a6)
FFFF22AC 49FA 0000                  		lea	SMEG_FM_RegList(pc),a4
FFFF22B0 3C00                       		move.w	d0,d6
FFFF22B2 7818                       		moveq	#$18,d4
FFFF22B4                            @Next:
FFFF22B4 3A06                       		move.w	d6,d5
FFFF22B6 101C                       		move.b	(a4)+,d0
FFFF22B8 3600                       		move.w	d0,d3
FFFF22BA D045                       		add.w	d5,d0
FFFF22BC 121B                       		move.b	(a3)+,d1
FFFF22BE                            
FFFF22BE 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
FFFF22C4 6C00                       		bge.s	@Chn456
FFFF22C6 6100 0000                  		bsr	FM_RegWrite_1
FFFF22CA 51CC FFE8                  		dbf	d4,@Next
FFFF22CE 6000                       		bra.s	@BackZ80
FFFF22D0                            
FFFF22D0                            @Chn456:
FFFF22D0 6100 0000                  		bsr	FM_RegWrite_2
FFFF22D4 51CC FFDE                  		dbf	d4,@Next
FFFF22D8                            @BackZ80:
FFFF22D8 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF22E8 286E 0004                  		movea.l	AddrBackup(a6),a4
FFFF22EC                            @Return:
FFFF22EC 4E75                       		rts
FFFF22EE                            
FFFF22EE                            ; -------------------------------------------
FFFF22EE                            ; Set FM panning
FFFF22EE                            ; -------------------------------------------
FFFF22EE                            
FFFF22EE                            SMEG_FM_SetPan:
FFFF22EE 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF22F2 6B00                       		bmi.s	@Return
FFFF22F4                            		
FFFF22F4 303C 00B4                  		move.w	#$B4,d0
FFFF22F8 7400                       		moveq	#0,d2
FFFF22FA 142D 0007                  		move.b	Chn_ID(a5),d2
FFFF22FE 7200                       		moveq	#0,d1
FFFF2300 122D 000C                  		move.b	Chn_Panning(a5),d1
FFFF2304                            
FFFF2304 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF2316 0C02 0003                  		cmp.b	#3,d2
FFFF231A 6E00                       		bgt.s	@SecondFM
FFFF231C D042                       		add.w	d2,d0
FFFF231E 6100 0000                  		bsr	FM_RegWrite_1
FFFF2322 6000                       		bra.s	@BackZ80
FFFF2324                            @SecondFM:
FFFF2324 0442 0004                  		sub.w	#4,d2
FFFF2328 D042                       		add.w	d2,d0
FFFF232A 6100 0000                  		bsr	FM_RegWrite_2
FFFF232E                            @BackZ80:
FFFF232E 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF233E                            @Return:
FFFF233E 4E75                       		rts
FFFF2340                            		
FFFF2340                            ; -------------------------------------------
FFFF2340                            ; Send DAC
FFFF2340                            ; -------------------------------------------
FFFF2340                            
FFFF2340                            SMEG_SetVoice_DAC:
FFFF2340 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF2346 6700 0000                  		beq	@Return
FFFF234A                            		
FFFF234A                            ; 		if SMEG_Z80
FFFF234A 266E 0018                  		movea.l	SongSampl(a6),a3
FFFF234E 7200                       		moveq	#0,d1
FFFF2350 122D 0008                  		move.b	Chn_Inst(a5),d1
FFFF2354                            
FFFF2354                            @FindSample:
FFFF2354 4A53                       		tst.w	(a3)
FFFF2356 6B00                       		bmi.s	@Return
FFFF2358 B253                       		cmp.w	(a3),d1
FFFF235A 6700                       		beq.s	@Found
FFFF235C D6FC 0010                   		adda	#$10,a3
FFFF2360 60F2                       		bra.s	@FindSample
FFFF2362                            
FFFF2362                            @Found:
FFFF2362 D6FC 0002                  		adda.w	#2,a3
FFFF2366 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF2378 361B                        		move.w	(a3)+,d3
FFFF237A 201B                        		move.l	(a3)+,d0
FFFF237C 221B                        		move.l	(a3)+,d1
FFFF237E 241B                        		move.l	(a3)+,d2
FFFF2380 6100                       		bsr.s	SMEG_Z80_LoadWav
FFFF2382 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF2392 1B44 000E                    		move.b 	d4,Chn_PCM_Pitch(a5)
FFFF2396                              		
FFFF2396 7200                       		moveq	#0,d1
FFFF2398 7400                       		moveq 	#0,d2
FFFF239A 122D 000B                  		move.b	Chn_Note(a5),d1
FFFF239E 142D 000E                    		move.b 	Chn_PCM_Pitch(a5),d2
FFFF23A2 D242                         		add.w	d2,d1
FFFF23A4                                  		
FFFF23A4 ED49                       		lsl.w	#6,d1
FFFF23A6 0641 0200                  		add.w	#$200,d1
FFFF23AA 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF23BC 13C1 00A0 00F6             		move.b	d1,($A000F6)		; ld bc,(NEW ADDRESS)
FFFF23C2 E049                       		lsr.w	#8,d1			;
FFFF23C4 13C1 00A0 00F7             		move.b	d1,($A000F7)		;
FFFF23CA                            
FFFF23CA                            @Return:
FFFF23CA 4E75                       		rts
FFFF23CC                            
FFFF23CC                            ; ---------------------------------
FFFF23CC                            
FFFF23CC                            SMEG_Z80_LoadWav:
FFFF23CC 47F9 00A0 01E0             		lea	($A001E0),a3
FFFF23D2 7600                       		moveq	#0,d3
FFFF23D4 7800                       		moveq	#0,d4
FFFF23D6                              		
FFFF23D6                            		;Start
FFFF23D6 4A40                       		tst.w	d0
FFFF23D8 6A00                       		bpl.s	@plus_s
FFFF23DA 383C 0081                  		move.w	#$81,d4
FFFF23DE                            @plus_s:
FFFF23DE 4840                       		swap	d0
FFFF23E0 4844                       		swap	d4
FFFF23E2 1800                       		move.b	d0,d4
FFFF23E4 4844                       		swap	d4
FFFF23E6 4840                       		swap	d0
FFFF23E8 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
FFFF23EA 4844                       		swap	d4
FFFF23EC 16C4                       		move.b	d4,(a3)+		;		$xx0000
FFFF23EE 4844                       		swap	d4
FFFF23F0 16C0                       		move.b	d0,(a3)+		;start Addr	$00xx
FFFF23F2 E048                       		lsr.w	#8,d0
FFFF23F4 16C0                       		move.b	d0,(a3)+		;		$xx00
FFFF23F6                            		
FFFF23F6                            		;Loop
FFFF23F6 7800                       		moveq	#0,d4
FFFF23F8 4A41                       		tst.w	d1
FFFF23FA 6A00                       		bpl.s	@plus_e
FFFF23FC 383C 0081                  		move.w	#$81,d4
FFFF2400                            @plus_e:
FFFF2400 4841                       		swap	d1
FFFF2402 4844                       		swap	d4
FFFF2404 1801                       		move.b	d1,d4
FFFF2406 4844                       		swap	d4
FFFF2408 4841                       		swap	d1
FFFF240A 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
FFFF240C 4844                       		swap	d4
FFFF240E 16C4                       		move.b	d4,(a3)+		;		$xx0000
FFFF2410 4844                       		swap	d4
FFFF2412 16C1                       		move.b	d1,(a3)+		;start Addr	$00xx
FFFF2414 E049                       		lsr.w	#8,d1
FFFF2416 16C1                       		move.b	d1,(a3)+		;		$xx00
FFFF2418                            		
FFFF2418                            		;End
FFFF2418 7800                       		moveq	#0,d4
FFFF241A 4A42                       		tst.w	d2
FFFF241C 6A00                       		bpl.s	@plus_l
FFFF241E 383C 0081                  		move.w	#$81,d4
FFFF2422                            @plus_l:
FFFF2422 4842                       		swap	d2
FFFF2424 4844                       		swap	d4
FFFF2426 1802                       		move.b	d2,d4
FFFF2428 4844                       		swap	d4
FFFF242A 4842                       		swap	d2
FFFF242C 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
FFFF242E 4844                       		swap	d4
FFFF2430 16C4                       		move.b	d4,(a3)+		;		$xx0000
FFFF2432 4844                       		swap	d4
FFFF2434 16C2                       		move.b	d2,(a3)+		;start Addr	$00xx
FFFF2436 E04A                       		lsr.w	#8,d2
FFFF2438 16C2                       		move.b	d2,(a3)+		;		$xx00
FFFF243A                            		
FFFF243A                            ; 		endif
FFFF243A 4E75                       		rts
FFFF243C                            
FFFF243C                            ; -------------------------------------------
FFFF243C                            ; Send PCM/PWM
FFFF243C                            ; -------------------------------------------
FFFF243C                            
FFFF243C                            SMEG_SetVoice_PCM:
FFFF243C                               		
FFFF243C 7200                       		moveq	#0,d1
FFFF243E 7400                          		moveq	#0,d2
FFFF2440 4AAE 001C                  		tst.l	SongPcmSamp(a6)
FFFF2444 6700                       		beq.s	@FinishList
FFFF2446 6B00                       		bmi.s	@FinishList
FFFF2448 266E 001C                  		movea.l	SongPcmSamp(a6),a3
FFFF244C 122D 0008                  		move.b	Chn_Inst(a5),d1
FFFF2450                            @NextPcm:
FFFF2450 4A53                       		tst.w	(a3)
FFFF2452 6B00                       		bmi.s	@GiveUp
FFFF2454 1413                       		move.b	(a3),d2
FFFF2456 B401                       		cmp.b	d1,d2
FFFF2458 6700                       		beq.s	@FoundPcm
FFFF245A D6FC 0002                  		adda	#2,a3
FFFF245E 60F0                       		bra.s	@NextPcm
FFFF2460                            @FoundPcm:
FFFF2460 7200                       		moveq	#0,d1
FFFF2462 122B 0001                  		move.b	1(a3),d1
FFFF2466                            @GiveUp:
FFFF2466 0441 0001                  		sub.w	#1,d1
FFFF246A E549                       		lsl.w	#2,d1
FFFF246C 47F9 FFFF DBA0             		lea	(RAM_SMEG_PcmList),a3
FFFF2472 D6C1                       		adda	d1,a3
FFFF2474                               		
FFFF2474 1B6B 0001 000E             		move.b	1(a3),Chn_PCM_Pitch(a5)
FFFF247A 13ED 0007 00A1 2010        		move.b	Chn_ID(a5),(ThisCpu+CommDataM)
FFFF2482 13D3 00A1 2011             		move.b	(a3),(ThisCpu+CommDataM+1)
FFFF2488 33EB 0002 00A1 2012        		move.w	2(a3),(ThisCpu+CommDataM+2)
FFFF2490 7021                       		moveq	#CdTask_SetAddr,d0
FFFF2492 6100 FD50                  		bsr	SMEG_CD_Call
FFFF2496                            
FFFF2496                            ; ---------------------------------
FFFF2496                            
FFFF2496                            @FinishList:
FFFF2496 4E75                       		rts
FFFF2498                            		
FFFF2498                            ; -------------------------------------------
FFFF2498                            ; Reset FM
FFFF2498                            ; -------------------------------------------
FFFF2498                            
FFFF2498                            SMEG_FM_Reset:
FFFF2498 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF24AA                            
FFFF24AA 7028                       		moveq	#$28,d0
FFFF24AC 7200                       		moveq	#0,d1
FFFF24AE 6100 0000                  		bsr	FM_RegWrite_1
FFFF24B2 7028                       		moveq	#$28,d0
FFFF24B4 7201                       		moveq	#1,d1
FFFF24B6 6100 0000                  		bsr	FM_RegWrite_1
FFFF24BA 7028                       		moveq	#$28,d0
FFFF24BC 7202                       		moveq	#2,d1
FFFF24BE 6100 0000                  		bsr	FM_RegWrite_1
FFFF24C2 7028                       		moveq	#$28,d0
FFFF24C4 7204                       		moveq	#4,d1
FFFF24C6 6100 0000                  		bsr	FM_RegWrite_1
FFFF24CA 7028                       		moveq	#$28,d0
FFFF24CC 7205                       		moveq	#5,d1
FFFF24CE 6100 0000                  		bsr	FM_RegWrite_1
FFFF24D2 7028                       		moveq	#$28,d0
FFFF24D4 7206                       		moveq	#6,d1
FFFF24D6 6100 0000                  		bsr	FM_RegWrite_1
FFFF24DA                            
FFFF24DA 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF24EA 4E75                       		rts
FFFF24EC                            
FFFF24EC                            ; -------------------------------------------
FFFF24EC                            ; Find FM
FFFF24EC                            ; -------------------------------------------
FFFF24EC                            
FFFF24EC                            SMEG_FM_FindWrite:
FFFF24EC 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
FFFF24F2 6C00                       		bge.s	@Second
FFFF24F4 6100 0000                  		bsr	FM_RegWrite_1
FFFF24F8 4E75                       		rts
FFFF24FA                            @Second:
FFFF24FA 6100 0000                  		bsr	FM_RegWrite_2
FFFF24FE 4E75                       		rts
FFFF2500                            
FFFF2500                            ; -------------------------------------------
FFFF2500                            ; Write to FM register
FFFF2500                            ; -------------------------------------------
FFFF2500                            
FFFF2500                            FM_RegWrite_1:
FFFF2500 1439 00A0 4000             		move.b	($A04000).l,d2
FFFF2506 0802 0007                  		btst	#7,d2
FFFF250A 66F4                       		bne.s	FM_RegWrite_1
FFFF250C 13C0 00A0 4000             		move.b	d0,($A04000).l
FFFF2512                            @Loop:
FFFF2512 1439 00A0 4000             		move.b	($A04000).l,d2
FFFF2518 0802 0007                  		btst	#7,d2
FFFF251C 66F4                       		bne.s	@Loop
FFFF251E 13C1 00A0 4001             		move.b	d1,($A04001).l
FFFF2524 4E75                       		rts
FFFF2526                            
FFFF2526                            FM_RegWrite_2:
FFFF2526 1439 00A0 4000             		move.b	($A04000).l,d2
FFFF252C 0802 0007                  		btst	#7,d2
FFFF2530 66CE                       		bne.s	FM_RegWrite_1
FFFF2532 13C0 00A0 4002             		move.b	d0,($A04002).l
FFFF2538                            @Loop:
FFFF2538 1439 00A0 4000             		move.b	($A04000).l,d2
FFFF253E 0802 0007                  		btst	#7,d2
FFFF2542 66F4                       		bne.s	@Loop
FFFF2544 13C1 00A0 4003             		move.b	d1,($A04003).l
FFFF254A 4E75                       		rts
FFFF254C                            		
FFFF254C                            ; -----------------------
FFFF254C                            ; Setup channels
FFFF254C                            ; -----------------------
FFFF254C                            
FFFF254C                            SMEG_Load_SetChnls:
FFFF254C 286E 0008                  		movea.l	SongRequest(a6),a4				;a4 - Music data
FFFF2550 3D6E 0020 0024             		move.w	TicksRequest(a6),TicksSet(a6)
FFFF2556                            
FFFF2556                            ; -----------------------
FFFF2556                            ; Get instruments
FFFF2556                            ; -----------------------
FFFF2556                            
FFFF2556 2D5C 0014                  		move.l	(a4)+,SongVoices(a6)
FFFF255A 2D5C 0018                  		move.l	(a4)+,SongSampl(a6)
FFFF255E 2D5C 001C                  		move.l	(a4)+,SongPcmSamp(a6)
FFFF2562                            	
FFFF2562                            ; -----------------------
FFFF2562                            ; Get the
FFFF2562                            ; PatternEnd/PatternLoop
FFFF2562                            ; numbers
FFFF2562                            ; -----------------------
FFFF2562                            
FFFF2562 1D5C 0002                  		move.b	(a4)+,PatternEnd(a6)
FFFF2566 1D5C 0003                  		move.b	(a4)+,PatternLoop(a6)
FFFF256A                            
FFFF256A                            ; -----------------------
FFFF256A                            ; Setup the channel IDs
FFFF256A                            ; -----------------------
FFFF256A                            
FFFF256A 7011                       		moveq	#(MaxChannels)-1,d0
FFFF256C                            @SetId:
FFFF256C 1B7C 0001 0006             		move.b	#1,Chn_Type(a5)
FFFF2572 1B5C 0007                  		move.b	(a4)+,Chn_ID(a5)
FFFF2576 426D 0000                  		clr.w	Chn_Freq(a5)
FFFF257A                            		
FFFF257A 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
FFFF2580 6700                       		beq.s	@Disabled
FFFF2582 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF2586 6A00                       		bpl.s	@NotPSG
FFFF2588                            		
FFFF2588 7200                         		moveq	#0,d1
FFFF258A 122D 0007                    		move.b	Chn_ID(a5),d1
FFFF258E 0641 001F                    		add.w	#$1F,d1
FFFF2592 13C1 00C0 0011              		move.b	d1,($C00011).l
FFFF2598                            @NotPSG:
FFFF2598 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF259E 6C00                        		bge.s	@Disabled
FFFF25A0                             		
FFFF25A0 1B7C 000F 000D              		move.b	#%00001111,Chn_FM_Key(a5)
FFFF25A6 1B7C 00C0 000C              		move.b	#$C0,Chn_Panning(a5)
FFFF25AC                            
FFFF25AC                            @Disabled:
FFFF25AC DAFC 0010                  		adda 	#sizeof_Chn,a5
FFFF25B0 51C8 FFBA                  		dbf	d0,@SetId
FFFF25B4                             		
FFFF25B4                            ; -----------------------
FFFF25B4                            ; Master volumes
FFFF25B4                            ; -----------------------
FFFF25B4                            
FFFF25B4 7011                       		moveq	#(MaxChannels)-1,d0
FFFF25B6                            @SetVol:
FFFF25B6 1B5C 000A                  		move.b	(a4)+,Chn_DefVol(a5)
FFFF25BA DAFC 0010                  		adda 	#sizeof_Chn,a5
FFFF25BE 51C8 FFF6                  		dbf	d0,@SetVol
FFFF25C2                            
FFFF25C2                            ; -----------------------
FFFF25C2                            ; last steps
FFFF25C2                            ; -----------------------
FFFF25C2                            
FFFF25C2 2D4C 000C                  		move.l	a4,SongStart(a6)
FFFF25C6 1D5C 0029                  		move.b	(a4)+,PattSize+1(a6)
FFFF25CA 1D5C 0028                  		move.b	(a4)+,PattSize(a6)
FFFF25CE 426E 002A                  		clr.w	PattRead(a6)
FFFF25D2 D8FC 0006                  		adda	#6,a4
FFFF25D6 2D4C 0010                  		move.l	a4,SongRead(a6)
FFFF25DA 4E75                       		rts
FFFF25DC                            		
FFFF25DC                            ; -----------------------
FFFF25DC                            ; Fix stuff to BGM
FFFF25DC                            ; -----------------------
FFFF25DC                            
FFFF25DC                            SMEG_Load_FixBgm:
FFFF25DC 4BF9 FFFF D960             		lea	(RAM_SMEG_Chnls_BGM),a5
FFFF25E2 7811                       		moveq	#(MaxChannels)-1,d4
FFFF25E4                            @SetId:
FFFF25E4 1B7C 0080 000C             		move.b	#$80,Chn_Panning(a5)
FFFF25EA                            
FFFF25EA 4A2D 0007                  		tst.b	Chn_ID(a5)
FFFF25EE 6B00                       		bmi.s	@NotFM
FFFF25F0 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
FFFF25F6 6C00                       		bge.s	@NotFM
FFFF25F8                            
FFFF25F8 422D 000D                  		clr.b	Chn_FM_Key(a5)
FFFF25FC 1B7C 000F 000D             		move.b	#%00001111,Chn_FM_Key(a5)
FFFF2602 1B7C 00C0 000C             		move.b	#$C0,Chn_Panning(a5)
FFFF2608 6100 FCE4                  		bsr	SMEG_FM_SetPan
FFFF260C                            @NotFM:
FFFF260C DAFC 0010                  		adda 	#sizeof_Chn,a5
FFFF2610 51CC FFD2                  		dbf	d4,@SetId
FFFF2614                            		
FFFF2614 33FC 0100 00A1 1100 0839+  		Z80_OFF
FFFF2626 702B                       		moveq	#$2B,d0
FFFF2628 7200                                       moveq	#0,d1
FFFF262A 6100 FED4                    		bsr	FM_RegWrite_1
FFFF262E                              		
FFFF262E 7000                       		moveq	#0,d0
FFFF2630 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
FFFF2636 13FC 002A 00A0 4000 33FC+  		Z80_ON
FFFF2646                            		
FFFF2646 4E75                       		rts
FFFF2648                            		
FFFF2648                            ; -----------------------
FFFF2648                            ; Exclusive features
FFFF2648                            ;
FFFF2648                            ; TODO: creo que es
FFFF2648                            ; mala idea hacer esperar
FFFF2648                            ; al VBlank ya que moví
FFFF2648                            ; la rutina esta
FFFF2648                            ; -----------------------
FFFF2648                            
FFFF2648                            SMEG_Load_SetExtChnls:
FFFF2648                            
FFFF2648 7026                        		moveq	#CdTask_ClearAllPcm,d0
FFFF264A 6100 FB98                   		bsr	SMEG_CD_Call
FFFF264E                            		
FFFF264E 4DF9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a6
FFFF2654 4AAE 001C                   		tst.l	SongPcmSamp(a6)
FFFF2658 6700 0000                   		beq	@Return
FFFF265C 6B00 0000                   		bmi	@Return
FFFF2660                             		
FFFF2660 2A6E 001C                   		movea.l	SongPcmSamp(a6),a5
FFFF2664 7200                        		moveq	#0,d1
FFFF2666 47F9 FFFF DBA0              		lea	(RAM_SMEG_PcmList),a3
FFFF266C                            @NextSamp:
FFFF266C 4A55                        		tst.w	(a5)
FFFF266E 6B00                        		bmi.s	@Finish
FFFF2670 1681                        		move.b	d1,(a3)				;ST Address
FFFF2672                            
FFFF2672 302D 000E                   		move.w	$E(a5),d0
FFFF2676 0240 00FF                   		and.w	#$FF,d0
FFFF267A 1740 0001                   		move.b	d0,1(a3)
FFFF267E 23D5 00A1 2010              		move.l	(a5),(ThisCpu+CommDataM)	;\
FFFF2684 23ED 0004 00A1 2014         		move.l	4(a5),(ThisCpu+CommDataM+4)	; > Filename
FFFF268C 23ED 0008 00A1 2018         		move.l	8(a5),(ThisCpu+CommDataM+8)	;/
FFFF2694 33FC 0000 00A1 201C          		move.w	#0,(ThisCpu+CommDataM+$C)
FFFF269C 13C1 00A1 201D              		move.b	d1,(ThisCpu+CommDataM+$D)	;Bank to use
FFFF26A2 7020                        		moveq	#CdTask_LoadPcm,d0
FFFF26A4 6100 FB3E                    		bsr	SMEG_CD_Call
FFFF26A8                              		
FFFF26A8 7400                         		moveq	#0,d2
FFFF26AA 7600                         		moveq	#0,d3
FFFF26AC 3439 00A1 2022              		move.w	(ThisCpu+CommDataS+2),d2
FFFF26B2 0C6D FFFF 000C              		cmp.w	#$FFFF,$C(a5)
FFFF26B8 6700                        		beq.s	@NotLoop
FFFF26BA 342D 000C                   		move.w	$C(a5),d2
FFFF26BE                            @NotLoop:
FFFF26BE                            ; 		move.b	d1,d3
FFFF26BE                            ; 		and.w	#$7F,d3
FFFF26BE                            ; 		lsl.w	#8,d3
FFFF26BE                            ; 		lsl.w	#4,d3
FFFF26BE                            ; 		add.w 	d3,d2
FFFF26BE                            		
FFFF26BE 3742 0002                   		move.w	d2,2(a3)			;Loop address
FFFF26C2 1239 00A1 2020              		move.b	(ThisCpu+CommDataS),d1		;Next ST
FFFF26C8                             		
FFFF26C8 DAFC 0010                   		adda	#$10,a5
FFFF26CC D6FC 0004                   		adda	#4,a3
FFFF26D0 609A                        		bra.s	@NextSamp
FFFF26D2                            @Finish:
FFFF26D2 DAFC 0002                   		adda	#2,a5
FFFF26D6 2D4D 001C                   		move.l	a5,SongPcmSamp(a6)		;Second list
FFFF26DA                            		
FFFF26DA                            ; -----------------------
FFFF26DA                            
FFFF26DA                            		
FFFF26DA                            @Return:
FFFF26DA 4E75                       		rts
FFFF26DC                            		
FFFF26DC                            ; -------------------------------------------
FFFF26DC                            ; Reset PSG
FFFF26DC                            ; -------------------------------------------
FFFF26DC                            
FFFF26DC                            SMEG_PSG_Reset:
FFFF26DC 13FC 009F 00C0 0011        		move.b	#$9F,($C00011).l
FFFF26E4 13FC 00BF 00C0 0011        		move.b	#$BF,($C00011).l
FFFF26EC 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
FFFF26F4 13FC 00FF 00C0 0011        		move.b	#$FF,($C00011).l
FFFF26FC 4E75                       		rts
FFFF26FE                            
FFFF26FE                            ; -------------------------------------------
FFFF26FE                            ; Reset PCM
FFFF26FE                            ; -------------------------------------------
FFFF26FE                            
FFFF26FE                            SMEG_PCM_Reset:
FFFF26FE 4AAE 001C                  		tst.l	SongPcmSamp(a6)
FFFF2702 6700                       		beq.s	@NoResetPCM
FFFF2704 6B00 0000                  		bmi	@NoResetPCM
FFFF2708                            		
FFFF2708                            		
FFFF2708 422E 002F                  		clr.b	PcmChnOnOff(a6)
FFFF270C 13EE 002F 00A1 2010        		move.b	PcmChnOnOff(a6),(ThisCpu+CommDataM)
FFFF2714 7025                       		moveq	#CdTask_SetOnOff,d0
FFFF2716 6000 FACC                  		bra	SMEG_CD_Call
FFFF271A                            		
FFFF271A                            
FFFF271A                            @NoResetPCM:
FFFF271A 4E75                       		rts
FFFF271C                            
FFFF271C                            ; ================================================================
FFFF271C                            ; -------------------------------------------------
FFFF271C                            ; Data
FFFF271C                            ; -------------------------------------------------
FFFF271C                            
FFFF271C                            SMEG_FM_RegList:
FFFF271C B0                         		dc.b $B0
FFFF271D 3038 343C                  		dc.b $30,$38,$34,$3C
FFFF2721 5058 545C                  		dc.b $50,$58,$54,$5C
FFFF2725 6068 646C                  		dc.b $60,$68,$64,$6C
FFFF2729 7078 747C                  		dc.b $70,$78,$74,$7C
FFFF272D 8088 848C                  		dc.b $80,$88,$84,$8C
FFFF2731 4048 444C                  		dc.b $40,$48,$44,$4C
FFFF2735                            SMEG_RegSetVol:
FFFF2736 00                         		even
FFFF2736                            	
FFFF2736                            ; ---------------------------------------------------
FFFF2736                            
FFFF2736                            Z80_Driver:	incbin	"engine/sound/data/z80/main.bin"
FFFF3B36                            Z80_DriverEnd:
FFFF3B36                            		even
FFFF3B36                            		
FFFF3B36                            		
FFFF3B36                            	
FFFF3B36                            ; ====================================================================
FFFF3B36                            
FFFF3B36                             		objend
00003B4E                            PrgCode_End:
00003B4E                             		
00003B4E                            ; ====================================================================
00003B4E                            
00003B4E                            PrgData:
00003B4E                            		obj $200000
00200000                            		
00200000                            ; ---------------------------------------------
00200000                            ; Data | Sound
00200000                            ; ---------------------------------------------
00200000                            
00200000                            		include	"engine/sound/data/main.asm"
00200000                            ; ================================================================
00200000                            ; User data
00200000                            ; ================================================================
00200000                             		
00200000                            ; ================================================================	
00200000                            ; ***************************************************
00200000                            ; FM Voices
00200000                            ; ***************************************************
00200000                            
00200000                            ; ins_piano_casino:
00200000                            ;    		incbin	"engine/sound/data/instruments/old/piano/piano_real.bin"
00200000                            ;    		even
00200000                            
00200000                            ; ins_piano_80s:
00200000                            ;   		incbin	"engine/sound/data/instruments/old/piano/piano_80s.bin"
00200000                            ;   		even
00200000                            ins_piano_generic:
00200000                               		incbin	"engine/sound/data/instruments/old/piano/piano_generic.bin"
0020001A 00                             		even
0020001A                            ins_piano_real:
0020001A                                		incbin	"engine/sound/data/instruments/old/piano/piano_real.bin"
00200034 00                             		even
00200034                            ins_piano_small:
00200034                               		incbin	"engine/sound/data/instruments/old/piano/piano_small.bin"
0020004E 00                            		even
0020004E                            ins_piano_rave:
0020004E                              		incbin	"engine/sound/data/instruments/old/piano/piano_rave.bin"
00200068 00                             		even
00200068                            ; ; 
00200068                            ; ; ; ----------------------------------------
00200068                            ; ; 
00200068                            ins_bass_techno:
00200068                                		incbin	"engine/sound/data/instruments/old/bass/bass_techno.bin"
00200082 00                             		even
00200082                            ins_brass_funny:
00200082                               		incbin	"engine/sound/data/instruments/old/brass/brass_funny.bin"
0020009C 00                            		even
0020009C                            ins_brass_2:
0020009C                               		incbin	"engine/sound/data/instruments/old/brass/brass_2.bin"
002000B6 00                            		even
002000B6                            ; ; ins_fmdrum_kick:
002000B6                            ; ;  		incbin	"engine/sound/data/instruments/old/drums/fm_kick.bin"
002000B6                            ; ;  		even
002000B6                            ins_fmdrum_closedhat:
002000B6                               		incbin	"engine/sound/data/instruments/old/drums/fm_openhat.bin"
002000D0 00                            		even
002000D0                            ; ;  		
002000D0                            
002000D0                            ; ; ; ----------------------------------------
002000D0                            ; ; 
002000D0                            ; ; ins_bell_test:
002000D0                            ; ;  		incbin	"engine/sound/data/instruments/old/bell/bell_xmas.bin"
002000D0                            ; ;  		even
002000D0                            ; ; 
002000D0                            ; ; ; ----------------------------------------
002000D0                            ; ; 
002000D0                            ins_fx_echo:
002000D0                              		incbin	"engine/sound/data/instruments/old/fx/ecco_thelagoon.bin"
0020014E 00                           		even
0020014E                            	
0020014E                            ins_kid_1:  	incbin	"engine/sound/data/instruments/old/old/kid/patch_01.smps"
00200168 00                            		even
00200168                            ins_kid_2:  	incbin	"engine/sound/data/instruments/old/old/kid/patch_02.smps"
00200182 00                            		even
00200182                              	
00200182                              	
00200182                            ins_trumpet:
00200182                            		incbin	"engine/sound/data/instruments/old/old/trumpet_generic.bin"
0020019C 00                            		even
0020019C                             
0020019C                            ins_bass_heavy:
0020019C                            		incbin	"engine/sound/data/instruments/old/bass/bass_heavy_1.bin"
002001B6 00                            		even
002001B6                               		
002001B6                            inspack_socket:
002001B6                            		incbin	"engine/sound/data/instruments/old/old/socket_voiceset.bin"
002005EA 00                            		even
002005EA                               		
002005EA                            ; ================================================================	
002005EA                            ; ***************************************************
002005EA                            ; Music
002005EA                            ; ***************************************************
002005EA                             	
002005EA                            ; MainTheme:
002005EA                            ;   		dc.l @Voices,@Samples,0
002005EA                            ;    		dc.b 33,6
002005EA                            ;   		dc.b  FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
002005EA                            ;   		dc.b PSG_1,PSG_2,PSG_3,NOISE
002005EA                            ;   		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
002005EA                            ;   		dcb.b $12,$00
002005EA                            ;    		incbin "engine/sound/data/music/song1.it",$50+$2E63
002005EA                            ;    		even
002005EA                            ; @Voices:
002005EA                            ;   		dc.w 4,0
002005EA                            ;     		dc.l ins_fmdrum_closedhat
002005EA                            ;     		dc.w 6,0
002005EA                            ;     		dc.l ins_bass_techno
002005EA                            ;     		dc.w 7,0
002005EA                            ;    		dc.l ins_brass_funny
002005EA                            ;      		dc.w 9,0
002005EA                            ;      		dc.l ins_fx_echo 
002005EA                            ;   		dc.w $FFFF
002005EA                            ;   		even
002005EA                            ; @Samples:
002005EA                            ;    		dc.w 1,0
002005EA                            ;    		dc.l samp_Kick
002005EA                            ;    		dc.l samp_Kick_end
002005EA                            ;    		dc.l samp_Kick
002005EA                            ;    		dc.w 2,0
002005EA                            ;    		dc.l samp_Snare
002005EA                            ;    		dc.l samp_Snare_end
002005EA                            ;    		dc.l samp_Snare
002005EA                            ;    		dc.w 3,0
002005EA                            ;    		dc.l samp_Tom
002005EA                            ;    		dc.l samp_Tom_end
002005EA                            ;    		dc.l samp_Tom
002005EA                            ;   		dc.w $FFFF
002005EA                            ;   		even
002005EA                            ;  
002005EA                            ; @ExSampl:
002005EA                            ;      		dc.w -1
002005EA                            ;      		dc.w -1
002005EA                            ;    		even
002005EA                            
002005EA                            ; -------------------------------------
002005EA                            
002005EA                            song_Lyle:
002005EA 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,0
002005F6 1203                          		dc.b 18,3
002005F8 0001 0204 0506               		dc.b  FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
002005FE 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
00200602 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0020060A 0000 0000 0000 0000 0000+    		dcb.b $12,$00
0020061C                               		incbin "engine/sound/data/music/something.it",$50+$1150+$10
002059E4                               		even
002059E4                            @Voices:
002059E4                            ;     		dc.w 8,0
002059E4                            ;      		dc.l ins_fmdrum_closedhat
002059E4 0001 0000                      		dc.w 1,0
002059E8 0020 019C                       		dc.l ins_bass_heavy
002059EC 0003 0000                        		dc.w 3,0
002059F0 0020 0182                       		dc.l ins_trumpet
002059F4                            ;      		dc.w 9,0
002059F4                            ;      		dc.l ins_fx_echo 
002059F4 FFFF                         		dc.w $FFFF
002059F6                              		even
002059F6                            @Samples:
002059F6 0005 0000                     		dc.w 5,0
002059FA 0000 0000                      		dc.l samp_Kick
002059FE 0000 0000                      		dc.l samp_Kick_end
00205A02 0000 0000                      		dc.l samp_Kick
00205A06 0006 0000                      		dc.w 6,0
00205A0A 0000 0000                      		dc.l samp_Snare
00205A0E 0000 0000                      		dc.l samp_Snare_end
00205A12 0000 0000                      		dc.l samp_Snare
00205A16 FFFF                         		dc.w $FFFF
00205A18                              		even
00205A18                             
00205A18                            @ExSampl:
00205A38 FFFF                            		dc.w -1
00205A3A 0C01                              		dc.b 12,1
00205A3C 0202                              		dc.b 2,2	
00205A3E FFFF                            		dc.w -1
00205A40                               		even
00205A40                               		
00205A40                            ; ---------------------------------------------------
00205A40                             
00205A40                            ; Tempo: 7
00205A40                            
00205A40                            TestSong:
00205A40 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
00205A4C 0A00                          		dc.b 10,0
00205A4E 0001 0204 0506               		dc.b FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
00205A54 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
00205A58 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
00205A60 0000 0000 0000 0000 0000+    		dcb.b $12,$00
00205A72                               		incbin "engine/sound/data/music/sound-beim-laden.it",$50+$2C28+$18
00208964                               		even
00208964                            @Voices:
00208964 0002 0000                        		dc.w 2,0
00208968 0020 019C                       		dc.l ins_bass_heavy
0020896C 0005 0000                        		dc.w 5,0
00208970 0020 00B6                      		dc.l ins_fmdrum_closedhat
00208974 0006 0012                        		dc.w 6,$12
00208978 0020 01B6                       		dc.l inspack_socket
0020897C FFFF                         		dc.w $FFFF
0020897E                              		even
0020897E                            @Samples:
0020897E 0001 0000                     		dc.w 1,0
00208982 0000 0000                      		dc.l samp_TechnoKick
00208986 0000 0000                      		dc.l samp_TechnoKick_end
0020898A 0000 0000                      		dc.l samp_TechnoKick
0020898E 0007 0000                     		dc.w 7,0
00208992 0000 0000                      		dc.l samp_TechnoKick
00208996 0000 0000                      		dc.l samp_TechnoKick_end
0020899A 0000 0000                      		dc.l samp_TechnoKick
0020899E 0003 0000                     		dc.w 3,0
002089A2 0000 0000                      		dc.l samp_TechnoSnare
002089A6 0000 0000                      		dc.l samp_TechnoSnare_end
002089AA 0000 0000                      		dc.l samp_TechnoSnare
002089AE FFFF                         		dc.w $FFFF
002089B0                              		even
002089B0                             
002089B0                            @ExSampl:
002089D0 FFFF                             		dc.w -1
002089D2 0A02                             		dc.b 10,2
002089D4 0B01                              		dc.b 11,1
002089D6 FFFF                             		dc.w -1
002089D8                                		even
002089D8                               	
002089D8                            ; ---------------------------------------------------
002089D8                            
002089D8                            ; Tempo: 12
002089D8                            
002089D8                            TestSong_2:
002089D8 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
002089E4 1500                          		dc.b 21,0
002089E6 0001 0204 0506               		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
002089EC 80A0 C0FF                    		dc.b PSG_1,PSG_2,PSG_3,-1
002089F0 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
002089F8 0000 0000 0000 0000 0000+    		dcb.b $12,$00
00208A0A                               		incbin "engine/sound/data/music/klu_pian.it",$50+$383+8
0020A8F2                               		even
0020A8F2                            @Voices:
0020A8F2 0001 0000                      		dc.w 1,0
0020A8F6 0020 001A                        		dc.l ins_piano_real
0020A8FA FFFF                         		dc.w -1
0020A8FC                              		even
0020A8FC                              		
0020A8FC                            @Samples:
0020A8FC FFFF                         		dc.w -1
0020A8FE                              		even
0020A8FE                             
0020A8FE                            @ExSampl:
0020A90E FFFF                         		dc.w -1
0020A910 FFFF                         		dc.w -1
0020A912                              		even
0020A912                              		
0020A912                            ; ---------------------------------------------------
0020A912                            
0020A912                            ; Tempo: 12
0020A912                            
0020A912                            TestSong_3:
0020A912 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
0020A91E 0B00                          		dc.b 11,0
0020A920 0001 0204 0506               		dc.b FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
0020A926 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
0020A92A 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0020A932 0000 0000 0000 0000 0000+    		dcb.b $12,$00
0020A944                            ;    		incbin "engine/sound/data/music/doremifa.it",$184F+$50
0020A944                                		incbin "engine/sound/data/music/light.it",$1E71+$50+$10
0020D77C 00                            		even
0020D77C                            @Voices:
0020D77C 0001 0000                        		dc.w 1,0
0020D780 0020 004E                       		dc.l ins_piano_rave
0020D784 0002 0000                        		dc.w 2,0
0020D788 0020 0068                       		dc.l ins_bass_techno
0020D78C 000C 0000                        		dc.w 12,0
0020D790 0020 0082                       		dc.l ins_brass_funny
0020D794 FFFF                         		dc.w $FFFF
0020D796                              		even
0020D796                            @Samples:
0020D796 0001 0000                     		dc.w 1,0
0020D79A 0000 0000                      		dc.l samp_Snare
0020D79E 0000 0000                      		dc.l samp_Snare_end
0020D7A2 0000 0000                      		dc.l samp_Snare
0020D7A6 FFFF                         		dc.w $FFFF
0020D7A8                              		even
0020D7A8                             
0020D7A8                            @ExSampl:
0020D7B8 FFFF                            		dc.w -1
0020D7BA 0301                            		dc.b 3,1
0020D7BC 0401                            		dc.b 4,1
0020D7BE 0D01                            		dc.b 13,1
0020D7C0 FFFF                            		dc.w -1
0020D7C2                               		even
0020D7C2                            
0020D7C2                            
0020D7C2                            ; ---------------------------------------------------
0020D7C2                            
0020D7C2                            TestSong_4:
0020D7C2 0000 0000 0000 0000 0000+   		dc.l @Voices,@Samples,@ExSampl
0020D7CE 0D01                         		dc.b 13,1
0020D7D0 0001 0204 0506              		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
0020D7D6 80A0 C0E0                   		dc.b PSG_1,PSG_2,PSG_3,NOISE
0020D7DA 1011 1213 1415 1617         		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0020D7E2 0000 0000 0000 0000 0000+   		dcb.b $12,$00
0020D7F4                              		incbin "engine/sound/data/music/yuki.it",$50+$39E9+$18
00210A80                              		even
00210A80                            @Voices:
00210A80 0008 0000                     		dc.w 8,0
00210A84 0020 00B6                      		dc.l ins_fmdrum_closedhat
00210A88 0003 0000                     		dc.w 3,0
00210A8C 0020 0068                      		dc.l ins_bass_techno
00210A90 0006 0000                      		dc.w 6,0
00210A94 0020 001A                     		dc.l ins_piano_real
00210A98                            ;     		dc.w 9,0
00210A98                            ;     		dc.l ins_fx_echo 
00210A98 FFFF                        		dc.w $FFFF
00210A9A                             		even
00210A9A                            @Samples:
00210A9A 0004 0000                    		dc.w 4,0
00210A9E 0000 0000                     		dc.l samp_Kick
00210AA2 0000 0000                     		dc.l samp_Kick_end
00210AA6 0000 0000                     		dc.l samp_Kick
00210AAA 0001 0000                     		dc.w 1,0
00210AAE 0000 0000                     		dc.l samp_Snare
00210AB2 0000 0000                     		dc.l samp_Snare_end
00210AB6 0000 0000                     		dc.l samp_Snare
00210ABA 0010 0000                     		dc.w 16,0
00210ABE 0000 0000                     		dc.l samp_Tom
00210AC2 0000 0000                     		dc.l samp_Tom_end
00210AC6 0000 0000                     		dc.l samp_Tom
00210ACA 0012 0000                     		dc.w 18,0
00210ACE 0000 0000                     		dc.l samp_Tom
00210AD2 0000 0000                     		dc.l samp_Tom_end
00210AD6 0000 0000                     		dc.l samp_Tom
00210ADA FFFF                        		dc.w $FFFF
00210ADC                             		even
00210ADC                            
00210ADC                            @ExSampl:
00210AFC FFFF                         		dc.w -1
00210AFE 0201                            		dc.b 2,1
00210B00 0C02                            		dc.b 12,2		
00210B02 FFFF                         		dc.w -1
00210B04                              		even
00210B04                            ;  		
00210B04                            ; ---------------------------------------------------
00210B04                            
00210B04                            SmegSong_Title:
00210B04 0000 0000 0000 0000 0000+    		dc.l @Voices,0,@ExSampl
00210B10 0101                           		dc.b 1,1
00210B12 0001 0204 0506                		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
00210B18 80A0 C0E0                     		dc.b PSG_1,PSG_2,PSG_3,NOISE	
00210B1C 1011 1213 1415 1617            		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
00210B24 0000 0000 0000 0000 0000+     		dcb.b $12,$00
00210B36                                		incbin "engine/sound/data/music/title.it",$50+$1677+$10
00210D44 00                             		even
00210D44                            @Voices:
00210D44                            ; ;     		dc.w 8,0
00210D44                            ; ;      		dc.l ins_fmdrum_closedhat
00210D44                            ; ;     		dc.w 3,0
00210D44                            ; ;      		dc.l ins_bass_techno
00210D44                            ; ;      		dc.w 1,0
00210D44                            ; ;     		dc.l ins_piano_real
00210D44 0001 0000                        		dc.w 1,0
00210D48 0020 00D0                         		dc.l ins_fx_echo 
00210D4C FFFF                          		dc.w $FFFF
00210D4E                               		even
00210D4E                            ; @Samples:
00210D4E                            ;    		dc.w 4,0
00210D4E                            ;     		dc.l samp_Kick
00210D4E                            ;     		dc.l samp_Kick_end
00210D4E                            ;     		dc.l samp_Kick
00210D4E                            ;     		dc.w 1,0
00210D4E                            ;     		dc.l samp_Snare
00210D4E                            ;     		dc.l samp_Snare_end
00210D4E                            ;     		dc.l samp_Snare
00210D4E                            ;     		dc.w 16,0
00210D4E                            ;     		dc.l samp_Tom
00210D4E                            ;     		dc.l samp_Tom_end
00210D4E                            ;     		dc.l samp_Tom
00210D4E                            ;     		dc.w 18,0
00210D4E                            ;     		dc.l samp_Tom
00210D4E                            ;     		dc.l samp_Tom_end
00210D4E                            ;     		dc.l samp_Tom
00210D4E                            ;   		dc.w $FFFF
00210D4E                            ;   		even
00210D4E                            ;  
00210D4E                            @ExSampl:
00210D5E FFFF                            		dc.w -1
00210D60 0101                              		dc.b 1,1		
00210D62 FFFF                            		dc.w -1
00210D64                               		even
00210D64                             		
00210D64                            ; ================================================================
00210D64                            ; ***************************************************
00210D64                            ; SFX
00210D64                            ; ***************************************************
00210D64                            
00210D64                            sfx_CharJump:
00210D64 0000 0000 0000 0000 0000+  		dc.l 0,0,0
00210D70 0101                        		dc.b 1,1
00210D72 FFFF FFFF FFFF                		dc.b -1,-1,-1,-1,-1,-1
00210D78 FFFF FFE0                     		dc.b -1,-1,-1,NOISE	
00210D7C FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
00210D84 0000 0000 0000 0000 0000+  		dcb.b $12,$00
00210D96                            
00210D96                            		incbin	"engine/sound/data/sfx/char_jump.it",0x34F+0x50+8
00210EEC                            		even
00210EEC                            		
00210EEC                            ; ---------------------------
00210EEC                            
00210EEC                            sfx_PrizeToing:
00210EEC 0000 0000 0000 0000 0000+  		dc.l 0,0,0
00210EF8 0101                        		dc.b 1,1
00210EFA FFFF FFFF FFFF                		dc.b -1,-1,-1,-1,-1,-1
00210F00 FFA0 FFE0                     		dc.b -1,PSG_2,-1,NOISE	
00210F04 FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
00210F0C 0000 0000 0000 0000 0000+  		dcb.b $12,$00
00210F1E                            
00210F1E                            		incbin	"engine/sound/data/sfx/prize_blup.it",0x347+0x50
00211062 00                         		even
00211062                            
00211062                            ; ---------------------------
00211062                            
00211062                            sfx_ArrowPlup:
00211062 0000 0000 0000 0000 0000+  		dc.l 0,@Samples,0
0021106E 0101                        		dc.b 1,1
00211070 FFFF FFFF FF06                		dc.b -1,-1,-1,-1,-1,FM_6
00211076 FFFF FFFF                     		dc.b -1,-1,-1,-1	
0021107A FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
00211082 0000 0000 0000 0000 0000+  		dcb.b $12,$00
00211094                            
00211094                            		incbin	"engine/sound/data/sfx/arrow_plup.it",0xE1+0x50
00211134 00                         		even
00211134                            @Samples:
00211134 0001 0000                       		dc.w 1,0
00211138 0000 0000                       		dc.l samp_Kick
0021113C 0000 0000                       		dc.l samp_Kick_end
00211140 0000 0000                       		dc.l samp_Kick
00211144 FFFF                          		dc.w -1
00211146                               		even
00211146                             		
00211146                            ; ***************************************************
00211146                            ; Z80 Samples
00211146                            ; ***************************************************
00211146                            
00211146                            ;  		if MARS
00211146                             		cnop 0,$10000
00220000                            ;   		endif
00220000                            		
00220000                            ; ----------------------------------------
00220000                            
00220000                            samp_Kick:	incbin	"engine/sound/data/samples/dac/sauron_kick.wav",$2C
00220F9A                            samp_Kick_end:
00220F9A                             		even
00220F9A                            samp_Snare:	incbin	"engine/sound/data/samples/dac/snare.wav",$2C
0022237A                            samp_Snare_end:
0022237A                             		even
0022237A                            samp_TechnoKick:
0022237A                            		incbin	"engine/sound/data/samples/dac/ST-72_techno-bassd3.wav",$2C
002229CD                            samp_TechnoKick_end:
002229CE 00                          		even
002229CE                            samp_TechnoSnare:
002229CE                            		incbin	"engine/sound/data/samples/dac/ST-79_whodini-snare.wav",$2C
00224952                            samp_TechnoSnare_end:
00224952                             		even
00224952                            
00224952                            samp_Tom:	incbin	"engine/sound/data/samples/dac/sauron_tom.wav",$2C
0022550C                            samp_Tom_end:
0022550C                             		even
0022550C                             		
0022550C                             		
0022550C                            		
0022550C                            ; ---------------------------------------------
0022550C                            ; Data | Shared
0022550C                            ; ---------------------------------------------
0022550C                            
0022550C                            		include	"engine/shared/main.asm"
0022550C                            ; ====================================================================
0022550C                            ; Shared Data
0022550C                            ; ====================================================================
0022550C                            
0022550C                            Art_TempFont:	incbin	"engine/shared/data/art_dbgfont.bin",0,($20*96)
0022610C                            Art_TempFont_End:
0022610C                            		even
0022610C                            
0022610C                            ; 		if SegaCD
0022610C                            ; Pal_StampsTest:	incbin	"engine/misc/stamptest/pal.bin"
0022610C                            ; 		even
0022610C                            ; Map_StampsTest:	dc.w ((@End-Map_StampsTest)/2)-1
0022610C                            ; 		incbin	"engine/misc/stamptest/map.bin"
0022610C                            ; @End:
0022610C                            ; 		even
0022610C                            ; 		endif
0022610C                            ; 		endif
0022610C                            		
0022610C                            ; ---------------------------------------------
0022610C                            ; Data | Modes
0022610C                            ; ---------------------------------------------
0022610C                            
0022610C                            		include	"engine/modes/title/data/main.asm"
0022610C                            ; =================================================================
0022610C                            ; ------------------------------------------------
0022610C                            ; Data
0022610C                            ; ------------------------------------------------
0022610C                            
0022610C 0000                       Art_Title_BG:	dc.w ((@End-Art_Title_BG)/4)-1
0022610E                            		incbin	"engine/modes/Title/data/bg_art.bin"
0022C46E                            @End:
0022C46E                            		even
0022C46E 0000                       Art_Title:	dc.w ((@End-Art_Title)/4)-1
0022C470                            		incbin	"engine/modes/Title/data/art.bin"
0022E610                            @End:
0022E610                            		even
0022E610                            		
0022E610                            		
0022E610                            Pal_Title_BG:	incbin	"engine/modes/Title/data/bg_pal.bin"
0022E630                            @End:
0022E630                            		even
0022E630                            Map_Title_BG:	incbin	"engine/modes/Title/data/bg_map.bin"
0022EEF0                            		even
0022EEF0                            		
0022EEF0                            
0022EEF0                            
0022EEF0                            Pal_Title:	incbin	"engine/modes/Title/data/pal.bin"
0022EF10                            @End:
0022EF10                            		even
0022EF10                            Map_Title:	incbin	"engine/modes/Title/data/map.bin"
0022F7D0                            		even
0022F7D0                            		even
0022F7D0                            		
0022F7D0                            ; ---------------------------------------------
0022F7D0                            
0022F7D0                            		objend	
0003331E                            PrgData_End:
0003331E                            
0003331E                            ; =====================================================================
0003331E                            
0003331E                            		inform 0,"THIS PRG-RAM CODE/DATA USES: %h of %h | %h of 3FFFF",PrgCode_End,sizeof_prg,((PrgData_End-PrgData)-1)
0003331E                            		
0003331E                            ; =====================================================================
0003331E                            
0003331E                            		cnop 0,$40000
00040000                            		
