00000000                            ; ====================================================================
00000000                            ; MD Side
00000000                            ; ====================================================================
00000000                            
00000000                            		include	"engine/ram.asm"
00000000                            ; =====================================================
00000000                            ; RAM
00000000                            ; =====================================================
00000000                            
00000000                            ; ----------------
00000000                            ; Sega CD RAM
00000000                            ; ----------------
00000000                            
00000000                            		rsset $FFFF6800
00000000                            		
00000000                            ; =====================================================
00000000                            ; ----------------------------------------
00000000                            ; Variables
00000000                            ; ----------------------------------------
00000000                            
00000000 =00000000                  bitFrameWait		equ	0
00000000 =00000001                  bitVBlankWait		equ	1
00000000 =00000002                  bitHBlankWait		equ	2
00000000 =00000003                  bitDontWaitHInt		equ	3
00000000 =00000004                  bitLockPads		equ	4
00000000 =00000005                  bitHotStart		equ	5
00000000 =00000006                  bitWaitHint		equ	6
00000000 =00000007                  bitHasTMSS		equ	7
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Game vars
00000000                            ; ----------------------------------------
00000000                            
00000000                            ; =====================================================
00000000                            ; ----------------------------------------
00000000                            ; Mode buffer
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFF6800                  RAM_SharedBuffer	rs.b	$80
00000000 =FFFF6880                  RAM_ModeBuffer		rs.b	$7000
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Work stuff
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFD880                  RAM_VIntJumpTo		rs.w	1		;DONT SEPARATE
00000000 =FFFFD882                  RAM_VIntAddr		rs.l	1		;*
00000000 =FFFFD886                  RAM_HIntJumpTo		rs.w	1		;DONT SEPARATE
00000000 =FFFFD888                  RAM_HIntAddr		rs.l	1		;*
00000000                            
00000000 =FFFFD88C                  RAM_FrameCount		rs.l	1
00000000 =FFFFD890                  RAM_VIntWait		rs.b 	1
00000000 =FFFFD891                  RAM_GameMode		rs.b 	1
00000000 =FFFFD892                  RAM_Joypads		rs.b	$40
00000000 =FFFFD8D2                  RAM_SprControl		rs.b	$10
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Sound
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFD8E2                  RAM_SndDriver		rs.b	$400
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; DMA
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFDCE2                  RAM_DMA_Buffer		rs.b	$400
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; PalFade
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFE0E2                  RAM_PalFadeControl	rs.b	$10
00000000                            			
00000000 =FFFFE0F2                  RAM_PalFadeBuff		rs.w	64
00000000 =FFFFE172                  RAM_PalFadeBuffHint	rs.w	64
00000000                            
00000000                            ; ----------------------------------------
00000000                            ; Visual stuff
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFE1F2                  RAM_HorBuffer		rs.l	240;224
00000000 =FFFFE5B2                  RAM_VerBuffer		rs.l	(320/16)
00000000 =FFFFE602                  RAM_SprBuffer		rs.b	(8*80)
00000000 =FFFFE882                  RAM_PalBuffer		rs.w	64
00000000 =FFFFE902                  RAM_VdpRegs		rs.b	$18
00000000                            
00000000 =FFFFE91A                  RAM_VerBufferHint	rs.l	(320/16)
00000000 =FFFFE96A                  RAM_SprBufferHint	rs.l	(8*80)
00000000 =FFFFF36A                  RAM_PalBufferHint	rs.w	64
00000000                            
00000000                            ; =====================================================
00000000                            ; ----------------------------------------
00000000                            ; Last RAM
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFFF3EA                  RAM_End			rs.b	0
00000000                            ;                                 inform 0,"RAM ENDS AT: %h",RAM_End
00000000                            ;                         inform 0,"%h",RAM_FrameCount
00000000                            ;                         inform 0,"%h",RAM_FrameCount
00000000                            
00000000                            ; ====================================================================
00000000                            ; -------------------------------------------------
00000000                            ; Header / Init
00000000                            ; -------------------------------------------------
00000000                            
00000000                            		include "md/init.asm"
00000000                            ; ====================================================================
00000000                            ; -----------------------------------------------------------------
00000000                            ; Header
00000000                            ; -----------------------------------------------------------------
00000000                            
00000000 0000 0000                  		dc.l 0
00000004 0000 0000                  		dc.l MD_Entry
00000008                            
00000008 0000 0000 0000 0000 0000+  		cnop 0,$70
00000070 0000 0000                                  dc.l MD_Hint
00000074 0000 0000                  		cnop 0,$78
00000078 0000 0000                                  dc.l MD_Vint
0000007C                            
0000007C 0000 0000 0000 0000 0000+  		cnop 0,$100
00000100 5345 4741 2047 454E 4553+  		dc.b "SEGA GENESIS    "
00000110                            		cnop 0,$110
00000110 2843 2947 4636 3420 3230+  		dc.b "(C)GF64 2016.???"
00000120                                            cnop 0,$120
00000120 3F3F 3F3F 3F3F 3F3F 3F3F+  		dc.b "????????????????                                "
00000150                                            cnop 0,$150
00000150 3F3F 3F20 2020 2020 2020+                  dc.b "???                                             "
00000180 474D 2048 4F4D 4542 5245+                  dc.b "GM HOMEBREW-00"
0000018E 0000                                       cnop 0,$190
00000190 4A20 2020 2020 2020 2020+  		dc.b "J               "
000001A0                            
000001A0 0000 0000                  		dc.l 0
000001A4 0000 0000                  		dc.l MD_RomEnd
000001A8 00FF 0000                  		dc.l $FF0000
000001AC 00FF FFFF                  		dc.l $FFFFFF
000001B0 5241 F820                  		dc.b "RA",%11111000,$20
000001B4 0020 0000                  		dc.l $200000
000001B8 0020 03FF                  		dc.l $2003FF
000001BC                            
000001BC 0000 0000 0000 0000 0000+  		cnop 0,$1F0
000001F0 5520 2020 2020 2020 2020+  		dc.b "U               "
00000200                            		            
00000200                            ; -----------------------------------------------------------------
00000200                            ; Startup
00000200                            ; -----------------------------------------------------------------
00000200                            
00000200                                            cnop 0,$200
00000200                            MD_Entry:
00000200 4AB9 00A1 0008             		tst.l	($A10008).l		;Test Port A control
00000206 6600                       		bne.s	@PortA_Ok
00000208 4A79 00A1 000C             		tst.w	($A1000C).l		;Test Port C control
0000020E                            @PortA_Ok:
0000020E 6600 0000                  		bne	@Skip
00000212                            
00000212 1039 00A1 0001             		move.b	($A10001).l,d0		;version
00000218 0200 000F                  		andi.b	#$F,d0
0000021C 6700                       		beq.s	@Older
0000021E 23F9 0000 0100 00A1 4000   		move.l	($100),($A14000).l
00000228                            @Older:   
00000228 4A79 00C0 0004             		tst.w	($C00004).l		;test if VDP works
0000022E 7000                       		moveq	#0,d0
00000230 2C40                       		movea.l	d0,a6
00000232 4E66                       		move.l	a6,usp			;set usp to $0
00000234                            
00000234 46FC 2700                  		move	#$2700,sr
00000238 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l	;Stop the Z80
00000240 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l	;Reset the Z80
00000248                            		
00000248 08B9 0007 FFFF D890        		bclr	#bitHasTMSS,(RAM_VIntWait)
00000250 4AB9 FFFF C000             		tst.l	($FFFFC000)
00000256 6700                       		beq.s	@no_msg
00000258 08F9 0007 FFFF D890        		bset	#bitHasTMSS,(RAM_VIntWait)
00000260                            @no_msg:
00000260 41F9 FFFF 0000             		lea	($FFFF0000).l,a0
00000266 323C 7FFF                  		move.w	#$7FFF,d1
0000026A                            @ClearRAM:
0000026A 4258                       		clr.w	(a0)+
0000026C 51C9 FFFC                  		dbf	d1,@ClearRAM
00000270 4CF9 7FFF 00FF 0000        		movem.l	($FF0000).l,d0-a6
00000278                            		
00000278 23FC 8164 8F02 00C0 0004   		move.l	#$81648F02,($C00004).l
00000282                            ; 		move.l	#$00000020,($C00004).l
00000282                            ; 		lea	(RAM_PalFadeBuff),a1
00000282                            ; 		moveq	#64-1,d0
00000282                            ; @nextpal:
00000282                            ; 		move.w	($C00000),d1
00000282                            ; 		move.w	d1,(a1)+
00000282                            ; 		dbf	d0,@nextpal
00000282 13FC 009F 00C0 0011        		move.b	#$9F,($C00011).l
0000028A 13FC 00BF 00C0 0011        		move.b	#$BF,($C00011).l
00000292 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
0000029A 13FC 00FF 00C0 0011        		move.b	#$FF,($C00011).l
000002A2                            		
000002A2 33FC 0000 00A1 1200        		move.w	#0,($A11200).l
000002AA                            		
000002AA 23FC 4000 0003 00C0 0004   		move.l	#$40000003,($C00004).l
000002B4 23FC 0069 006E 00C0 0000   		move.l	#"i"<<16|"n",($C00000).l
000002BE 23FC 0069 0074 00C0 0000   		move.l	#"i"<<16|"t",($C00000).l
000002C8                            		
000002C8                            ;-----------------------
000002C8                            ; Here starts your code
000002C8                            ;-----------------------
000002C8                            
000002C8                            @Skip:
000002C8 4A79 00C0 0004             		tst.w	($C00004).l
000002CE 13FC 0000 FFFF D891        		move.b	#0,(RAM_GameMode)
000002D6 6000 0000                  		bra 	MD_Main
000002DA                            		
000002DA                            ; @lol:
000002DA                            ; 		dc.b "asdionmtnsrontownrkosemronasderwerts",0
000002DA                            ; 		even
000002DA                            		
000002DA                            		
000002DA                            		include	"md/error.asm"
000002DA                            ; ===========================================================================
000002DA                            ; Error screen
000002DA                            ; ===========================================================================
000002DA                            
000002DA =00020000                  vdp_Xpos	equ	$20000
000002DA =00400000                  vdp_Ypos_32	equ	$400000
000002DA =50000003                  Plane_WD	equ	$50000003
000002DA                            
000002DA                            MD_BusError:
000002DA 6100 0000                  		bsr	ErrorScr_Init
000002DE 41FA 0000                  		lea	Asc_ErrBus(pc),a0
000002E2 6100 0000                  		bsr	ErrorScr_ShowMsg
000002E6 6000 0000                  		bra	ErrorScr_Loop
000002EA                            
000002EA                            MD_AddrError:
000002EA 6100 0000                  		bsr	ErrorScr_Init
000002EE 41FA 0000                  		lea	Asc_ErrAddr(pc),a0
000002F2 6100 0000                  		bsr	ErrorScr_ShowMsg
000002F6 6000                       		bra.s	ErrorScr_Loop
000002F8                            
000002F8                            MD_IllegalError:
000002F8 6100 0000                  		bsr	ErrorScr_Init
000002FC 41FA 0000                  		lea	Asc_ErrIlle(pc),a0
00000300 6100 0000                  		bsr	ErrorScr_ShowMsg
00000304 6000                       		bra.s	ErrorScr_Loop
00000306                            
00000306                            MD_ZeroDivError:
00000306 6100 0000                  		bsr	ErrorScr_Init
0000030A 41FA 0000                  		lea	Asc_ErrZerDiv(pc),a0
0000030E 6100 0000                  		bsr	ErrorScr_ShowMsg
00000312 6000                       		bra.s	ErrorScr_Loop
00000314                            
00000314                            MD_ChkError:
00000314 6100 0000                  		bsr	ErrorScr_Init
00000318 41FA 0000                  		lea	Asc_ErrChk(pc),a0
0000031C 6100 0000                  		bsr	ErrorScr_ShowMsg
00000320 6000                       		bra.s	ErrorScr_Loop
00000322                            
00000322                            MD_TrapVError:
00000322 6100 0000                  		bsr	ErrorScr_Init
00000326 41FA 0000                  		lea	Asc_ErrTrapV(pc),a0
0000032A 6100 0000                  		bsr	ErrorScr_ShowMsg
0000032E 6000                       		bra.s	ErrorScr_Loop
00000330                            
00000330                            MD_PrivilegeError:
00000330 6100 0000                  		bsr	ErrorScr_Init
00000334 41FA 0000                  		lea	Asc_ErrPriv(pc),a0
00000338 6100 0000                  		bsr	ErrorScr_ShowMsg
0000033C 6000                       		bra.s	ErrorScr_Loop
0000033E                            
0000033E                            MD_TraceError:
0000033E 6100 0000                  		bsr	ErrorScr_Init
00000342 41FA 0000                  		lea	Asc_ErrTrace(pc),a0
00000346 6100 0000                  		bsr	ErrorScr_ShowMsg
0000034A 6000                       		bra.s	ErrorScr_Loop
0000034C                            
0000034C                            MD_LineA_Error:
0000034C 6100 0000                  		bsr	ErrorScr_Init
00000350 41FA 0000                  		lea	Asc_ErrLineA(pc),a0
00000354 6100 0000                  		bsr	ErrorScr_ShowMsg
00000358 6000                       		bra.s	ErrorScr_Loop
0000035A                            
0000035A                            MD_LineF_Error:
0000035A 6100 0000                  		bsr	ErrorScr_Init
0000035E 41FA 0000                  		lea	Asc_ErrLineF(pc),a0
00000362 6100 0000                  		bsr	ErrorScr_ShowMsg
00000366                            
00000366                            ; ----------------------------------------------
00000366                            ; Loop
00000366                            ; ----------------------------------------------
00000366                            
00000366                            ErrorScr_Loop:
00000366 6100 0000                  		bsr	Pads_Read
0000036A                            
0000036A 4A39 0000 0000             		tst.b	(RAM_Joypads+OnPress)
00000370 6600                       		bne.s	@View
00000372 60F2                       		bra.s	ErrorScr_Loop
00000374                            
00000374                            ; ----------------------------------------------
00000374                            
00000374                            @View:
00000374 33FC 8124 00C0 0004        		move.w	#$8124,($C00004)
0000037C 33FC 8C00 00C0 0004        		move.w	#$8C00,($C00004)
00000384 23FC 9000 927C 00C0 0004   		move.l	#$9000927C,($C00004)
0000038E 33FC 927C 00C0 0004        		move.w	#$927C,($C00004)
00000396 33FC 8164 00C0 0004        		move.w	#$8164,($C00004)
0000039E 0879 0000 FFFF 4000        		bchg	#0,($FFFF4000)
000003A6 67BE                       		beq.s	ErrorScr_Loop
000003A8                            
000003A8 33FC 8124 00C0 0004        		move.w	#$8124,($C00004)
000003B0 23FC 8C01 9081 00C0 0004   		move.l	#$8C019081,($C00004)
000003BA 33FC 9200 00C0 0004        		move.w	#$9200,($C00004)
000003C2 33FC 8164 00C0 0004        		move.w	#$8164,($C00004)
000003CA 609A                       		bra.s	ErrorScr_Loop
000003CC                            
000003CC                            ; ===========================================================================
000003CC                            ; ----------------------------------------------
000003CC                            ; Init
000003CC                            ; ----------------------------------------------
000003CC                            
000003CC                            ErrorScr_Init:	
000003CC 46FC 2700                   		move.w	#$2700,sr
000003D0 48F9 FFFF FFFF 4000         		movem.l	d0-d7/a0-a7,($FFFF4000)
000003D8 13FC 0000 0000 0000         		move.b	#0,(RAM_VdpRegs+vdpReg_PlnSize)
000003E0                             		
000003E0 23FC 8124 8C00 00C0 0004    		move.l	#$81248C00,($C00004)
000003EA 23FC 9000 927C 00C0 0004    		move.l	#$9000927C,($C00004)
000003F4 13FC 009F 00C0 0011        		move.b	#$9F,($C00011)
000003FC 13FC 00BF 00C0 0011         		move.b	#$BF,($C00011)
00000404 13FC 00DF 00C0 0011         		move.b	#$DF,($C00011)
0000040C 13FC 00FF 00C0 0011         		move.b	#$FF,($C00011)
00000414                            
00000414 23FC 5000 0003 00C0 0004      		move.l	#$50000003,($C00004)
0000041E 303C 037F                     		move.w	#$37F,d0
00000422                            @ClrWinScr:
00000422 33FC E580 00C0 0000           		move.w	#($8560|$6000)+" ",($C00000)
0000042A 51C8 FFF6                     		dbf	d0,@ClrWinScr
0000042E 41FA 0000                    		lea	Art_DbgFont(pc),a0
00000432 23FC 7000 0002 00C0 0004   		move.l	#$70000002,($C00004)
0000043C 323C 0000                     		move.w	#((Art_DbgFont_End-Art_DbgFont)/4)-1,d1
00000440                            @Loop:
00000440 23D8 00C0 0000             		move.l	(a0)+,($C00000).l
00000446 51C9 FFF8                  		dbf	d1,@Loop
0000044A                             
0000044A 43F9 FFFF 4000               		lea	($FFFF4000),a1
00000450 263C 520E 0003               		move.l	#Plane_WD+(vdp_Ypos_32*8)+(vdp_Xpos*7),d3
00000456 7A07                         		moveq	#7,d5
00000458                            @ShowDdata:
00000458 48E7 1000                    		movem.l	d3,-(sp)
0000045C 7000                       		moveq	#0,d0
0000045E 2011                       		move.l	(a1),d0
00000460 2203                       		move.l	d3,d1
00000462 343C E590                  		move.w	#$8560+$6000+"0",d2
00000466                            ; 		bsr	VDP_ShowVal_Long
00000466 4CDF 0008                  		movem.l	(sp)+,d3
0000046A                              
0000046A 0683 0040 0000             		add.l	#$400000,d3
00000470 D2FC 0004                  		adda	#4,a1
00000474 51CD FFE2                    		dbf	d5,@ShowDdata
00000478                             
00000478 43F9 FFFF 7020               		lea	($FFFF7020),a1
0000047E 263C 5228 0003               		move.l	#Plane_WD+(vdp_Ypos_32*8)+(vdp_Xpos*20),d3
00000484 7A07                         		moveq	#7,d5
00000486                            @ShowAdata:
00000486 48E7 1000                    		movem.l	d3,-(sp)
0000048A 7000                                        moveq	#0,d0
0000048C 2011                                        move.l	(a1),d0
0000048E 2203                                        move.l	d3,d1
00000490 343C E590                                   move.w	#$8560+$6000+"0",d2
00000494                            ;                  bsr	VDP_ShowVal_Long
00000494 4CDF 0008                                   movem.l	(sp)+,d3
00000498                             
00000498 0683 0040 0000                              add.l	#$400000,d3
0000049E D2FC 0004                                   adda	#4,a1
000004A2 51CD FFE2                   		dbf	d5,@ShowAdata
000004A6                              
000004A6 4239 FFFF 4000                		clr.b	($FFFF4000)
000004AC                            
000004AC 33FC 8164 00C0 0004         		move.w	#$8164,($C00004)
000004B4 4E75                       		rts
000004B6                            
000004B6                            ; ----------------------------------------------
000004B6                            ; Show error text
000004B6                            ; ----------------------------------------------
000004B6                            
000004B6                            ErrorScr_ShowMsg:
000004B6 23FC 5106 0003 00C0 0004   		move.l	#$51060003,($C00004).l
000004C0                            @LoopStr:
000004C0 7000                       		moveq	#0,d0
000004C2 1018                       		move.b	(a0)+,d0
000004C4 6700                       		beq.s	@end
000004C6 0640 E560                  		add.w	#$8560+$6000,d0
000004CA 33C0 00C0 0000             		move.w	d0,($C00000).l
000004D0 60EE                       		bra.s 	@LoopStr
000004D2                            @end:
000004D2 4E75                       		rts
000004D4                            
000004D4                            ; ===========================================================================
000004D4                            
000004D4 4255 5320 4552 524F 5220+  Asc_ErrBus:	dc.b "BUS ERROR                ",0
000004EE                            		even		
000004EE 4144 4452 4553 5320 4552+  Asc_ErrAddr:	dc.b "ADDRESS ERROR            ",0
00000508                            		even		
00000508 494C 4C45 4741 4C20 496E+  Asc_ErrIlle:	dc.b "ILLEGAL Instruction      ",0
00000522                            		even		
00000522 5A45 524F 2044 4956 4944+  Asc_ErrZerDiv:	dc.b "ZERO DIVIDE              ",0
0000053C                            		even		
0000053C 4348 4B20 494E 5354 5255+  Asc_ErrChk:	dc.b "CHK INSTRUCTION          ",0
00000556                            		even		
00000556 5452 4150 5620 4552 524F+  Asc_ErrTrapV:	dc.b "TRAPV ERROR              ",0
00000570                            		even		
00000570 5052 4956 494C 4547 4520+  Asc_ErrPriv:	dc.b "PRIVILEGE ERROR          ",0
0000058A                            		even	
0000058A 5452 4143 4520 2020 2020+  Asc_ErrTrace:	dc.b "TRACE                    ",0
000005A4                            		even
000005A4 4C49 4E45 4120 4552 524F+  Asc_ErrLineA:	dc.b "LINEA ERROR              ",0
000005BE                            		even
000005BE 4C49 4E45 4620 4552 524F+  Asc_ErrLineF:	dc.b "LINEF ERROR              ",0
000005D8                            		even
000005D8                            		
000005D8                            Art_DbgFont:	incbin	"engine/shared/data/art_dbgfont.bin",0,($20*96)
000011D8                            Art_DbgFont_End:
000011D8                            
000011D8                             		even
000011D8                             		even
000011D8                            		     
000011D8                            ; -------------------------------------------------
000011D8                            ; Program data
000011D8                            ; -------------------------------------------------
000011D8                            
000011D8                            		include	"engine/main.asm"
000011D8                            ; ====================================================================
000011D8                            ; -------------------------------------------------
000011D8                            ; Start
000011D8                            ; -------------------------------------------------
000011D8                            
000011D8                            MD_Main:
000011D8 46FC 2700                  		move.w	#$2700,sr
000011DC                            
000011DC 33FC 4EF9 FFFF D880        		move.w	#$4EF9,(RAM_VIntJumpTo)
000011E4 33FC 4EF9 FFFF D886        		move.w	#$4EF9,(RAM_HIntJumpTo)	
000011EC 23FC 0000 0000 FFFF D882   		move.l	#VInt_Default,(RAM_VIntAddr)
000011F6 23FC 0000 0000 FFFF D888   		move.l	#Hint_Default,(RAM_HIntAddr)
00001200                            		
00001200 42B9 FFFF DCE2             		clr.l	(RAM_DMA_Buffer)
00001206 6100 0000                  		bsr	SRAM_Init
0000120A 6100 0000                  		bsr	Vdp_Init
0000120E 6100 0000                  		bsr	SMEG_Init
00001212 6100 0000                  		bsr	Pads_Init
00001216 46FC 2000                   		move.w	#$2000,sr
0000121A                            		
0000121A                            ; -------------------------------------------------
0000121A                            ; Modes
0000121A                            ; -------------------------------------------------
0000121A                            
0000121A                            @RunMode:
0000121A 7000                                       moveq	#0,d0
0000121C 1039 FFFF D891                             move.b	(RAM_GameMode),d0
00001222 E548                                       lsl.w	#2,d0
00001224 0240 00FC                                  and.w	#%11111100,d0
00001228 41FA 0000                                  lea	GameModes(pc),a0
0000122C 2070 0000                                  movea.l	(a0,d0.w),a0
00001230 4E90                                       jsr	(a0)
00001232 60E6                                       bra.s	@RunMode
00001234                            		
00001234                            ; ====================================================================
00001234                            ; ====================================================================
00001234                            
00001234                            ; -------------------------------------------------
00001234                            ; Mode list
00001234                            ; -------------------------------------------------
00001234                            
00001234                            GameModes:
00001234 0000 0000                   		dc.l mode_Title
00001238                            ;  		dc.l mode_Level
00001238                             		even
00001238                            
00001238                            ; ====================================================================
00001238                            ; ---------------------------------------------
00001238                            ; Subs
00001238                            ; ---------------------------------------------
00001238                            
00001238                            		include	"engine/subs/vdp.asm"
00001238                            ; ====================================================================
00001238                            ; ---------------------------------------------
00001238                            ; VDP
00001238                            ; ---------------------------------------------
00001238                            
00001238 =00000004                  bit_vdpHint	equ	4
00001238                            
00001238 =00000081                  vdp_H40		equ	$81
00001238 =00000000                  vdp_H32		equ	$00
00001238 =00000006                  vdp_Double	equ	%00000110
00001238                            
00001238 =00000002                  vdpReg_PattFG	equ	2			;00???000 = ???00000 00000000
00001238 =00000003                  vdpReg_PattWD	equ	3			;
00001238 =00000004                  vdpReg_PattBG	equ	4			;00000??? = ???00000 00000000
00001238 =0000000A                  vdpReg_HVal	equ	$A
00001238 =0000000B                  vdpReg_Scroll	equ	$B
00001238 =0000000C                  vdpReg_HMode	equ	$C
00001238 =00000010                  vdpReg_PlnSize	equ	$10
00001238 =00000011                  vdpReg_WindowX	equ	$11
00001238 =00000012                  vdpReg_WindowY	equ	$12
00001238                            
00001238                            ; --------------------------------------------
00001238                            ; Clear planes
00001238                            ; --------------------------------------------
00001238                            
00001238                            VDP_ClearPlanes:
00001238 6100                       		bsr.s	VDP_ClrPlane_FG
0000123A                            
0000123A                            VDP_ClrPlane_BG:
0000123A 7000                       		moveq	#0,d0
0000123C 1039 FFFF E904             		move.b	(RAM_VdpRegs+vdpReg_PattFG),d0
00001242 E148                       		lsl.w	#8,d0
00001244 E548                       		lsl.w	#2,d0
00001246 6100 0000                  		bsr	VDP_VramToCmd
0000124A 23C0 00C0 0004             		move.l	d0,($C00004).l
00001250 303C 07FF                  		move.w	#$7FF,d0
00001254                            @ClrBG:
00001254 42B9 00C0 0000             		clr.l	($C00000).l
0000125A 51C8 FFF8                  		dbf	d0,@ClrBG
0000125E 4E75                       		rts
00001260                            
00001260                            VDP_ClrPlane_FG:
00001260 7000                       		moveq	#0,d0
00001262 1039 FFFF E906             		move.b	(RAM_VdpRegs+vdpReg_PattBG),d0
00001268 E148                       		lsl.w	#8,d0
0000126A EB48                       		lsl.w	#5,d0
0000126C 6100 0000                  		bsr	VDP_VramToCmd
00001270 23C0 00C0 0004             		move.l	d0,($C00004).l
00001276 303C 07FF                  		move.w	#$7FF,d0
0000127A                            @ClrFG:
0000127A 42B9 00C0 0000             		clr.l	($C00000).l
00001280 51C8 FFF8                  		dbf	d0,@ClrFG
00001284 4E75                       		rts
00001286                            
00001286                            ; --------------------------------------------
00001286                            ; VDP_ClearScroll
00001286                            ;
00001286                            ; Set both scrollings to $0000
00001286                            ; --------------------------------------------
00001286                            
00001286                            VDP_ClearScroll:
00001286 41F9 FFFF E1F2             		lea	(RAM_HorBuffer),a0
0000128C 303C 00EF                  		move.w	#(240)-1,d0
00001290                            @ClrScrl:
00001290 4298                       		clr.l	(a0)+
00001292 51C8 FFFC                  		dbf	d0,@ClrScrl
00001296                            		
00001296 41F9 FFFF E5B2             		lea	(RAM_VerBuffer),a0
0000129C 303C 0013                  		move.w	#(320/16)-1,d0
000012A0                            @ClrVScrl:
000012A0 4298                       		clr.l	(a0)+
000012A2 51C8 FFFC                  		dbf	d0,@ClrVScrl
000012A6 4E75                       		rts
000012A8                            
000012A8                            ; --------------------------------------------
000012A8                            ; VDP_SendData_W, VDP_SendData_L
000012A8                            ;
000012A8                            ; Input:
000012A8                            ; a0 - Data address
000012A8                            ;
000012A8                            ; d0 | VRAM Address
000012A8                            ; d1 | Data size
000012A8                            ; --------------------------------------------
000012A8                            
000012A8                            VDP_SendData_W:
000012A8 EB48                       		lsl.w	#5,d0
000012AA 6100 0000                  		bsr	VDP_VramToCmd
000012AE 23C0 00C0 0004             		move.l	d0,($C00004)
000012B4                            @Loop:
000012B4 33D8 00C0 0000             		move.w	(a0)+,($C00000).l
000012BA 51C9 FFF8                  		dbf	d1,@Loop
000012BE 4E75                       		rts
000012C0                            
000012C0                            VDP_SendData_L:
000012C0 EB48                       		lsl.w	#5,d0
000012C2 6100 0000                  		bsr	VDP_VramToCmd
000012C6 23C0 00C0 0004             		move.l	d0,($C00004)
000012CC                            @Loop:
000012CC 23D8 00C0 0000             		move.l	(a0)+,($C00000).l
000012D2 51C9 FFF8                  		dbf	d1,@Loop
000012D6 4E75                       		rts
000012D8                            
000012D8                            ; --------------------------------------------
000012D8                            ; VDP_VramToCmd
000012D8                            ;
000012D8                            ; Input:
000012D8                            ; d0 | WORD - VRAM to convert
000012D8                            ;
000012D8                            ; Output:
000012D8                            ; d0 | LONG - VDP Command (Write mode)
000012D8                            ; --------------------------------------------
000012D8                            
000012D8                            VDP_VramToCmd:
000012D8 0C40 4000                  		cmp.w	#$4000,d0
000012DC 6500                       		bcs.s	@NoBank
000012DE 4840                       		swap	d0
000012E0 303C 0001                  		move.w	#1,d0
000012E4 4840                       		swap	d0
000012E6 0C40 8000                  		cmp.w	#$8000,d0
000012EA 6500                       		bcs.s	@NoBank	
000012EC 4840                       		swap	d0
000012EE 303C 0002                  		move.w	#2,d0
000012F2 4840                       		swap	d0
000012F4 0C40 C000                  		cmp.w	#$C000,d0
000012F8 6500                       		bcs.s	@NoBank	
000012FA 4840                       		swap	d0
000012FC 303C 0003                  		move.w	#3,d0
00001300 4840                       		swap	d0
00001302                            @NoBank:
00001302 0240 3FFF                    		and.w	#$3FFF,d0
00001306 0040 4000                    		or.w	#$4000,d0
0000130A 4840                          		swap	d0
0000130C 4E75                       		rts
0000130E                            		
0000130E                            ; --------------------------------------------
0000130E                            ; VDP_ShowVal (variants)
0000130E                            ; 
0000130E                            ; Input:
0000130E                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
0000130E                            ; d1 | LONG - XPos (WORD) | YPos (WORD)
0000130E                            ; d2 | WORD - VRAM
0000130E                            ; d3 | LONG - Value
0000130E                            ; 
0000130E                            ; Uses:
0000130E                            ; d4-d5
0000130E                            ; --------------------------------------------
0000130E                            
0000130E                            ; HEX 
0000130E                            
0000130E                            VDP_ShowVal_Nibl:
0000130E 6100 0000                  		bsr	vdpshv_findvdppos
00001312 E14B                       		lsl.w	#8,d3
00001314 E94B                       		lsl.w	#4,d3
00001316 4843                       		swap	d3
00001318 7800                       		moveq	#(1)-1,d4
0000131A 6000 0000                  		bra	vdpshv_showval
0000131E                            VDP_ShowVal_B:
0000131E 6100 0000                  		bsr	vdpshv_findvdppos
00001322 E14B                       		lsl.w	#8,d3
00001324 4843                       		swap	d3
00001326 7801                       		moveq	#(1*2)-1,d4
00001328 6000 0000                  		bra	vdpshv_showval
0000132C                            VDP_ShowVal_W:
0000132C 6100 0000                  		bsr	vdpshv_findvdppos
00001330 4843                       		swap	d3
00001332 7803                       		moveq	#(2*2)-1,d4
00001334 6000 0000                  		bra	vdpshv_showval
00001338                            VDP_ShowVal_L:
00001338 6100 0000                  		bsr	vdpshv_findvdppos
0000133C 7807                       		moveq	#(4*2)-1,d4
0000133E 6000 0000                  		bra	vdpshv_showval
00001342                            	
00001342                            ; DEC
00001342                            ; WARNING: semi-slow
00001342                            
00001342                            VDP_ShowValDec_Nibl:
00001342 6100 0000                  		bsr	vdpshv_findvdppos
00001346                            ; 		bsr	vdpshv_hextobcd
00001346 E14B                       		lsl.w	#8,d3
00001348 E94B                       		lsl.w	#4,d3
0000134A 4843                       		swap	d3
0000134C 7800                       		moveq	#(1)-1,d4
0000134E 6000 0000                  		bra	vdpshv_showval
00001352                            		
00001352                            VDP_ShowValDec_B:
00001352 6100 0000                  		bsr	vdpshv_findvdppos
00001356                            ; 		bsr	vdpshv_hextobcd
00001356 E14B                       		lsl.w	#8,d3
00001358 4843                       		swap	d3
0000135A 7801                       		moveq	#(1*2)-1,d4
0000135C 6000 0000                  		bra	vdpshv_showval
00001360                            VDP_ShowValDec_W:
00001360 6100 0000                  		bsr	vdpshv_findvdppos
00001364                            ; 		bsr	vdpshv_hextobcd
00001364 4843                       		swap	d3
00001366 7803                       		moveq	#(2*2)-1,d4
00001368 6000 0000                  		bra	vdpshv_showval
0000136C                            VDP_ShowValDec_L:
0000136C 6100 0000                  		bsr	vdpshv_findvdppos
00001370                            ; 		bsr	vdpshv_hextobcd
00001370 7807                       		moveq	#(4*2)-1,d4
00001372 6000 0000                  		bra	vdpshv_showval
00001376                            		
00001376                            ; -----------------------
00001376                            ; Uses: d4-d5
00001376                            ; -----------------------
00001376                            
00001376                            vdpshv_findvdppos:
00001376                            		;Check plane to use
00001376 3A00                       		move.w	d0,d5
00001378 7000                       		moveq	#0,d0
0000137A 1039 FFFF E904             		move.b	(RAM_VdpRegs+vdpReg_PattFG),d0
00001380 0805 0001                  		btst	#1,d5				;%10? (WD)
00001384 6700                       		beq.s	@FG
00001386 1039 FFFF E905             		move.b	(RAM_VdpRegs+vdpReg_PattWD),d0
0000138C                            @FG:
0000138C E148                       		lsl.w	#8,d0
0000138E E548                       		lsl.w	#2,d0
00001390 0805 0000                  		btst	#0,d5				;%01? (BG)
00001394 6700                       		beq.s	@FGWD
00001396 7000                       		moveq	#0,d0
00001398 1039 FFFF E906             		move.b	(RAM_VdpRegs+vdpReg_PattBG),d0
0000139E E148                       		lsl.w	#8,d0
000013A0 EB48                       		lsl.w	#5,d0
000013A2                            @FGWD:
000013A2                            
000013A2                            		;Start Y
000013A2 7800                       		moveq	#0,d4
000013A4 3801                          		move.w	d1,d4
000013A6 ED8C                         		lsl.l	#6,d4
000013A8 0805 0001                   		btst	#1,d5
000013AC 6700                        		beq.s	@def_fgbg
000013AE                             		
000013AE                             		;TODO: WD resolution check
000013AE                            ;    		move.b	(RAM_VdpRegs+vdpReg_HMode),d5
000013AE                            ;    		and.w	#%10000001,d5
000013AE                            ;    		bne.s	@Not128
000013AE E38C                           		lsl.l	#1,d4
000013B0 6000                       		bra.s	@Not128
000013B2                            @def_fgbg:
000013B2 0839 0000 FFFF E912         		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
000013BA 6700                        		beq.s	@Not40
000013BC E38C                         		lsl.l	#1,d4
000013BE                            @Not40:
000013BE 0839 0001 FFFF E912         		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
000013C6 6700                        		beq.s	@Not128
000013C8 E38C                           		lsl.l	#1,d4
000013CA                            @Not128:
000013CA D044                        		add.w	d4,d0			;+Y Start
000013CC 4841                       		swap	d1
000013CE E349                       		lsl.w	#1,d1
000013D0 D041                       		add.w	d1,d0			;+X Start
000013D2 6000 FF04                  		bra	VDP_VramToCmd
000013D6                            	
000013D6                            ; -----------------------
000013D6                            
000013D6                            vdpshv_showval:
000013D6 7200                       		moveq	#0,d1
000013D8 23C0 00C0 0004             		move.l	d0,($C00004)
000013DE                            @next:
000013DE E99B                       		rol.l	#4,d3
000013E0 1203                       		move.b	d3,d1
000013E2 0241 000F                  		and.w	#$F,d1
000013E6 0C41 000A                  		cmp.w	#$A,d1
000013EA 6500 0000                  		bcs	@lessF
000013EE 0641 0007                  		add.w	#7,d1
000013F2                            @lessF
000013F2 D242                       		add.w	d2,d1
000013F4 33C1 00C0 0000             		move.w	d1,($C00000)
000013FA 51CC FFE2                  		dbf	d4,@next
000013FE 4E75                       		rts
00001400                            	
00001400                            ; ; -----------------------
00001400                            ; ; Input:
00001400                            ; ; d3 - HEX
00001400                            ; ; 
00001400                            ; ; Output:
00001400                            ; ; d3 - BCD
00001400                            ; ; 
00001400                            ; ; Uses:
00001400                            ; ; d4-d5
00001400                            ; ; -----------------------
00001400                            ; 
00001400                            ; vdpshv_hextobcd:
00001400                            ; 		move.l	d3,d5
00001400                            ; 		moveq	#0,d3
00001400                            ; 		move.l	d5,d4
00001400                            ; 	
00001400                            ; 		move.w	d4,d1
00001400                            ; 		lsr.w	#8,d1
00001400                            ; 		and.w	#$FF,d1
00001400                            ; 		tst.w	d1
00001400                            ; 		beq	@part2
00001400                            ; 		sub.w	#1,d1
00001400                            ; 		add.w	d1,d1
00001400                            ; 		add.w	d1,d1
00001400                            ; 		move.l	@hideclist(pc,d1.w),d3
00001400                            ; 		bra	@part2
00001400                            ; 	
00001400                            ; ; -----------------------
00001400                            ; ; $X00+ array
00001400                            ; ; -----------------------
00001400                            ; 
00001400                            ; @hideclist:
00001400                            ; 		dc.l $256, $512, $768, $1024, $1280, $1536, $1792, $2048
00001400                            ; 		dc.l $2304, $2560, $2816, $3072, $3328, $3584, $3840, $4096
00001400                            ; 		dc.l $4352, $4608, $4864, $5120, $5376, $5632, $5888, $6144
00001400                            ; 		dc.l $6400, $6656, $6912, $7168, $7424, $7680, $7936, $8192
00001400                            ; 		dc.l $8448, $8704, $8960, $9216, $9472, $9728, $9984, $10240
00001400                            ; 		dc.l $10496, $10752, $11008, $11264, $11520, $11776, $12032, $12288
00001400                            ; 		dc.l $12544, $12800, $13056, $13312, $13568, $13824, $14080, $14336
00001400                            ; 		dc.l $14592, $14848, $15104, $15360, $15616, $15872, $16128, $16384
00001400                            ; 		dc.l $16640, $16896, $17152, $17408, $17664, $17920, $18176, $18432
00001400                            ; 		dc.l $18688, $18944, $19200, $19456, $19712, $19968, $20224, $20480
00001400                            ; 		dc.l $20736, $20992, $21248, $21504, $21760, $22016, $22272, $22528
00001400                            ; 		dc.l $22784, $23040, $23296, $23552, $23808, $24064, $24320, $24576
00001400                            ; 		dc.l $24832, $25088, $25344, $25600, $25856, $26112, $26368, $26624
00001400                            ; 		dc.l $26880, $27136, $27392, $27648, $27904, $28160, $28416, $28672
00001400                            ; 		dc.l $28928, $29184, $29440, $29696, $29952, $30208, $30464, $30720
00001400                            ; 		dc.l $30976, $31232, $31488, $31744, $32000, $32256, $32512, $32768
00001400                            ; 		dc.l $33024, $33280, $33536, $33792, $34048, $34304, $34560, $34816
00001400                            ; 		dc.l $35072, $35328, $35584, $35840, $36096, $36352, $36608, $36864
00001400                            ; 		dc.l $37120, $37376, $37632, $37888, $38144, $38400, $38656, $38912
00001400                            ; 		dc.l $39168, $39424, $39680, $39936, $40192, $40448, $40704, $40960
00001400                            ; 		dc.l $41216, $41472, $41728, $41984, $42240, $42496, $42752, $43008
00001400                            ; 		dc.l $43264, $43520, $43776, $44032, $44288, $44544, $44800, $45056
00001400                            ; 		dc.l $45312, $45568, $45824, $46080, $46336, $46592, $46848, $47104
00001400                            ; 		dc.l $47360, $47616, $47872, $48128, $48384, $48640, $48896, $49152
00001400                            ; 		dc.l $49408, $49664, $49920, $50176, $50432, $50688, $50944, $51200
00001400                            ; 		dc.l $51456, $51712, $51968, $52224, $52480, $52736, $52992, $53248
00001400                            ; 		dc.l $53504, $53760, $54016, $54272, $54528, $54784, $55040, $55296
00001400                            ; 		dc.l $55552, $55808, $56064, $56320, $56576, $56832, $57088, $57344
00001400                            ; 		dc.l $57600, $57856, $58112, $58368, $58624, $58880, $59136, $59392
00001400                            ; 		dc.l $59648, $59904, $60160, $60416, $60672, $60928, $61184, $61440
00001400                            ; 		dc.l $61696, $61952, $62208, $62464, $62720, $62976, $63232, $63488
00001400                            ; 		dc.l $63744, $64000, $64256, $64512, $64768, $65024, $65280, $65536
00001400                            ; 		
00001400                            ; @part2:
00001400                            ; 		and.l	#$FF,d4
00001400                            ; 		tst.w	d4
00001400                            ; 		beq.s	@final
00001400                            ; @lownibloop:
00001400                            ; 		sub.l	#1,d4
00001400                            ; 		bcs	@final
00001400                            ; 		add.l	#1,d3
00001400                            ; 		move.w	d3,d1
00001400                            ; 		and.w	#$F,d1
00001400                            ; 		cmp.w	#$A,d1
00001400                            ; 		blt.s	@nohex1
00001400                            ; 		add.l	#6,d3
00001400                            ; @nohex1:
00001400                            ; 		move.w	d3,d1
00001400                            ; 		and.w	#$F0,d1
00001400                            ; 		beq.s	@lownibloop
00001400                            ; 		cmp.w	#$A0,d1
00001400                            ; 		bcs.s	@nohex2
00001400                            ; 		add.l	#$60,d3
00001400                            ; @nohex2:
00001400                            ; 		move.l	d3,d1
00001400                            ; 		and.w	#$F00,d1
00001400                            ; 		beq.s	@lownibloop
00001400                            ; 		cmp.w	#$A00,d1
00001400                            ; 		bcs.s	@nohex3
00001400                            ; 		add.l	#$600,d3
00001400                            ; @nohex3:
00001400                            ; 		move.l	d3,d1
00001400                            ;  		and.l	#$F000,d1
00001400                            ;  		beq.s	@lownibloop
00001400                            ;  		cmp.l	#$A000,d1
00001400                            ;  		bcs.s	@nohex4
00001400                            ;  		add.l	#$6000,d3
00001400                            ; @nohex4:
00001400                            ; 		move.l	d3,d1
00001400                            ;  		and.l	#$F0000,d1
00001400                            ;  		beq.s	@lownibloop
00001400                            ;  		cmp.l	#$A0000,d1
00001400                            ;  		bcs.s	@nohex5
00001400                            ;  		add.l	#$60000,d3
00001400                            ; @nohex5:
00001400                            ; 
00001400                            ;  		bra	@lownibloop
00001400                            ; @final:
00001400                            ; 		rts
00001400                            ; 		
00001400                            ; ; -----------------------
00001400                            ; ; $X0 array
00001400                            ; ; -----------------------
00001400                            ; 
00001400                            ; @middeclist:
00001400                            ; 		dc.l $16
00001400                            ; 		dc.l $32
00001400                            ; 		dc.l $64
00001400                            ; 		dc.l $128
00001400                            		
00001400                            ; --------------------------------------------
00001400                            ; VDP_LoadMaps
00001400                            ; 
00001400                            ; Input:
00001400                            ; a0 - Pattern data
00001400                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
00001400                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
00001400                            ; d2 | LONG - XSize (WORD) | YSize (WORD)
00001400                            ; d3 | WORD - VRAM
00001400                            ; 
00001400                            ; Uses:
00001400                            ; d4-d6
00001400                            ; --------------------------------------------
00001400                            
00001400                            VDP_LoadMaps:
00001400                            		;Check plane to use
00001400 6100 FF74                  		bsr	vdpshv_findvdppos
00001404                            		
00001404 283C 0040 0000             		move.l	#$400000,d4
0000140A 0839 0000 FFFF E912        		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
00001412 6700                       		beq.s	@JpNot40
00001414 E38C                        		lsl.l	#1,d4
00001416                            @JpNot40:
00001416 0839 0001 FFFF E912        		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
0000141E 6700                       		beq.s	@Y_Loop
00001420 E38C                            		lsl.l	#1,d4
00001422                                 		
00001422                            @Y_Loop:
00001422 23C0 00C0 0004             		move.l	d0,($C00004).l		; Set VDP location from d0
00001428 4842                       		swap	d2
0000142A 3A02                       		move.w	d2,d5	  		; Move X-pos value to d3
0000142C 4842                       		swap	d2
0000142E                            @X_Loop:
0000142E 3C18                       		move.w	(a0)+,d6
00001430 DC43                                       add.w	d3,d6
00001432 33C6 00C0 0000                             move.w	d6,($C00000)		; Put data
00001438 51CD FFF4                  		dbf	d5,@X_Loop		; X-pos loop (from d1 to d3)
0000143C D084                       		add.l	d4,d0                   ; Next line
0000143E 51CA FFE2                  		dbf	d2,@Y_Loop		; Y-pos loop
00001442 4E75                       		rts
00001444                            
00001444                            ; --------------------------------------------
00001444                            ; VDP_LoadAsc
00001444                            ;
00001444                            ; Input:
00001444                            ; a0 - String
00001444                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
00001444                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
00001444                            ; d2 | VRAM
00001444                            ; 
00001444                            ; Uses:
00001444                            ; d3-d4
00001444                            ; --------------------------------------------
00001444                            
00001444                            VDP_LoadAsc:
00001444                            		;Check plane to use
00001444 6100 FF30                  		bsr	vdpshv_findvdppos
00001448                            		
00001448 283C 0040 0000             		move.l	#$400000,d4
0000144E 0839 0000 FFFF E912        		btst	#0,(RAM_VdpRegs+vdpReg_PlnSize)
00001456 6700                       		beq.s	@JpNot40
00001458 E38C                        		lsl.l	#1,d4
0000145A                            @JpNot40:
0000145A 0839 0001 FFFF E912        		btst	#1,(RAM_VdpRegs+vdpReg_PlnSize)
00001462 6700                       		beq.s	@Space
00001464 E38C                            		lsl.l	#1,d4
00001466                                 		
00001466                            @Reset:
00001466 23C0 00C0 0004             		move.l	d0,($C00004).l
0000146C                            @Next:
0000146C 7600                       		moveq	#0,d3
0000146E 1618                       		move.b	(a0)+,d3
00001470 0C03 000A                  		cmp.b	#$A,d3
00001474 6700                       		beq.s	@Space
00001476 4A03                       		tst.b	d3
00001478 6600                       		bne.s	@Char
0000147A 4E75                       		rts
0000147C                            @Char:
0000147C D642                       		add.w	d2,d3
0000147E 33C3 00C0 0000             		move.w	d3,($C00000).l
00001484 60E6                       		bra.s	@Next
00001486                            @Space:
00001486 D084                       		add.l	d4,d0                   ; Next line
00001488 60DC                       		bra.s	@Reset
0000148A                            @Exit:
0000148A 4E75                       		rts
0000148C                            
0000148C                            ; --------------------------------------------
0000148C                            ; Vdp_Init
0000148C                            ;
0000148C                            ; Set the default registers
0000148C                            ; --------------------------------------------
0000148C                            
0000148C                            Vdp_Init:
0000148C 41FA 0000                  		lea	Vdp_RegData(pc),a0
00001490 43F9 FFFF E902             		lea	(RAM_VdpRegs),a1
00001496 323C 8000                  		move.w	#$8000,d1
0000149A 7016                       		moveq	#$17-1,d0
0000149C                            @Loop:
0000149C 12D8                       		move.b	(a0)+,(a1)+
0000149E 51C8 FFFC                  		dbf	d0,@Loop
000014A2 4E75                       		rts
000014A4                            
000014A4                            ; --------------------------------------------
000014A4                            ; Vdp_Update
000014A4                            ;
000014A4                            ; Refresh VDP
000014A4                            ; --------------------------------------------
000014A4                            
000014A4                            Vdp_Update:
000014A4 41F9 FFFF E902             		lea	(RAM_VdpRegs),a0
000014AA 323C 8000                  		move.w	#$8000,d1
000014AE 7016                       		moveq	#$17-1,d0
000014B0                            @Loop:
000014B0 1218                       		move.b	(a0)+,d1
000014B2 33C1 00C0 0004             		move.w	d1,($C00004).l
000014B8 123C 0000                  		move.b	#0,d1
000014BC 0641 0100                  		add.w	#$100,d1
000014C0 51C8 FFEE                  		dbf	d0,@Loop
000014C4 4E75                       		rts
000014C6                            		
000014C6                            ; --------------------------------------------
000014C6                            ; VSync
000014C6                            ; --------------------------------------------
000014C6                            
000014C6                            VSync:
000014C6 08F9 0000 FFFF D890        		bset	#bitFrameWait,(RAM_VIntWait)
000014CE                            @StillOn:
000014CE 0839 0000 FFFF D890        		btst	#bitFrameWait,(RAM_VIntWait)
000014D6 66F6                       		bne.s	@StillOn
000014D8 4E75                       		rts
000014DA                            		
000014DA                            ; 		move.b	($C00005),d0
000014DA                            ; 		btst	#3,d0
000014DA                            ; 		beq.s	@StillOn
000014DA                            
000014DA                            ; -----------------------------------------
000014DA                            
000014DA                            Vdp_RegData:
000014DA 04                         		dc.b $04
000014DB 74                         		dc.b $74
000014DC 30                         		dc.b $30
000014DD 34                         		dc.b $34
000014DE 07                         		dc.b $07
000014DF 7C                         		dc.b $7C
000014E0 00                         		dc.b $00
000014E1 00                         		dc.b $00
000014E2 00                         		dc.b $00
000014E3 00                         		dc.b $00
000014E4 00                         		dc.b $00
000014E5 03                         		dc.b $03
000014E6 81                         		dc.b $81
000014E7 3F                         		dc.b $3F
000014E8 00                         		dc.b $00
000014E9 02                         		dc.b $02
000014EA 01                         		dc.b $01
000014EB 00                         		dc.b $00
000014EC 00                         		dc.b $00
000014ED 00                         		dc.b $00
000014EE 00                         		dc.b $00
000014EF 00                         		dc.b $00
000014F0 00                         		dc.b $00
000014F1 00                         		dc.b $00
000014F2                            		even
000014F2                            
000014F2                            ; --------------------------------------------
000014F2                            ; Vdp_RawAutoMap
000014F2                            ;
000014F2                            ; Input:
000014F2                            ; d0 | LONG - VDP Address
000014F2                            ; d1 | WORD - Width
000014F2                            ; d2 | WORD - Height
000014F2                            ; d3 | WORD - Start from this value
000014F2                            ; d4 | WORD - Horizontal size type (32,40,128)
000014F2                            ;
000014F2                            ; Output:
000014F2                            ; none
000014F2                            ;
000014F2                            ; Breaks:
000014F2                            ; d5
000014F2                            ; --------------------------------------------
000014F2                            		
000014F2                            Vdp_RawAutoMap:
000014F2 7A00                       		moveq	#0,d5
000014F4 DA43                       		add.w	d3,d5
000014F6 3605                       		move.w	d5,d3
000014F8                            
000014F8 1839 FFFF E912             		move.b	(RAM_VdpRegs+vdpReg_PlnSize),d4
000014FE 0244 0003                  		and.w	#%00000011,d4
00001502 E54C                       		lsl.w	#2,d4
00001504 4BFA 0000                  		lea	VDP_LineAddr(pc),a5
00001508 2835 4000                  		move.l	(a5,d4.w),d4		;Space
0000150C                            
0000150C                            @Loop_2:
0000150C 23C0 00C0 0004             		move.l	d0,($C00004)		;Set VDP location from d0
00001512 3A01                       		move.w	d1,d5	  		;Move X-pos value to d3
00001514                            @Loop:
00001514 33C3 00C0 0000             		move.w	d3,($C00000)		;Put data
0000151A 0643 0001                                  add.w	#1,d3
0000151E 51CD FFF4                  		dbf	d5,@Loop		;X-pos loop (from d1 to d3)
00001522 D084                       		add.l	d4,d0                   ;Next line
00001524 51CA FFE6                  		dbf	d2,@Loop_2		;Y-pos loop
00001528 4E75                       		rts
0000152A                            		
0000152A                            VDP_LineAddr:
0000152A 0040 0000                  		dc.l $400000
0000152E 0080 0000                  		dc.l $800000
00001532 0080 0000                  		dc.l $800000
00001536 0100 0000                  		dc.l $1000000
0000153A                            		even
0000153A                            		
0000153A                            		
0000153A                            		
0000153A                            		include	"engine/subs/fade.asm"
0000153A                            ; =====================================================
0000153A                            ; FadeIn/FadeOut
0000153A                            ; =====================================================
0000153A                            
0000153A                            ; ---------------------------------------
0000153A                            ; Variables
0000153A                            ; ---------------------------------------
0000153A                            
0000153A                            ; PalFadeHint		equ	$50
0000153A                            
0000153A =00000001                  ID_FadeOut		equ	$01
0000153A =00000002                  ID_FadeIn		equ	$02
0000153A =00000003                  ID_ToWhite		equ	$03
0000153A =00000004                  ID_FadeWhite		equ	$04
0000153A                            
0000153A                            ; ---------------------------------------
0000153A                            
0000153A =00000001                  PalFadeFlags		equ	1
0000153A =00000002                  PalFadeStart		equ	2  ;START(byte)|END(byte)|TIMER(word)
0000153A =00000003                  PalFadeEnd		equ	3
0000153A =00000004                  PalFadeTmr		equ	4
0000153A =00000008                  PalFadeSource		equ	8
0000153A                            
0000153A                            ; ---------------------------------------
0000153A                            
0000153A =00000007                  bitFinished		equ 	7
0000153A                            
0000153A                            ; =====================================================
0000153A                            ; Genesis palette
0000153A                            ; =====================================================
0000153A                            
0000153A                            PalFade:
0000153A                            ; 		if MARS
0000153A                            ; 		bsr	PalFade_Mars
0000153A                            ; 		endif
0000153A                            
0000153A 4DF9 FFFF E0E2             		lea	(RAM_PalFadeControl),a6
00001540 0816 0007                  		btst	#bitFinished,(a6)
00001544 6700                       		beq.s	@NotFinished
00001546 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
0000154C 6B00 0000                  		bmi	@Finished
00001550 4E75                       		rts
00001552                            @NotFinished:
00001552 7000                       		moveq	#0,d0
00001554 1016                       		move.b	(a6),d0
00001556 D040                       		add.w	d0,d0
00001558 323B 0000                  		move.w	@DoList(pc,d0.w),d1
0000155C 4EFB 1000                  		jmp	@DoList(pc,d1.w)
00001560                            
00001560                            @Finished:
00001560 3D6E 0004 0006              		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00001566 4216                       		clr.b	(a6)
00001568                            @Return:
00001568 4E75                       		rts
0000156A                            		
0000156A                            ; =====================================================
0000156A                            
0000156A                            @DoList:
0000156A FFFE                       		dc.w	@Return-@DoList
0000156C 0000                       		dc.w	@FadeOut-@DoList
0000156E 0000                       		dc.w	@FadeIn-@DoList
00001570 0000                       		dc.w	@ToWhite-@DoList
00001572 0000                       		dc.w	@FromWhite-@DoList
00001574                            		even
00001574                            
00001574                            ; =====================================================
00001574                            ; ---------------------------------------------------
00001574                            ; FadeOut
00001574                            ; ---------------------------------------------------
00001574                            
00001574                            @FadeOut:
00001574 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
0000157A 6A00 FFEC                  		bpl	@Return
0000157E 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00001584                            
00001584 4BF9 FFFF E882             		lea	(RAM_PalBuffer),a5
0000158A 49F9 FFFF F36A             		lea	(RAM_PalBufferHint),a4
00001590                            
00001590 362E 0002                  		move.w	PalFadeStart(a6),d3
00001594 3803                       		move.w	d3,d4
00001596 E04C                       		lsr.w	#8,d4
00001598 DAC4                       		adda	d4,a5
0000159A D8C4                       		adda	d4,a4
0000159C                            
0000159C 7C00                       		moveq	#0,d6
0000159E 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
000015A2 7400                       		moveq	#0,d2
000015A4                            @Next:
000015A4 3015                       		move.w	(a5),d0
000015A6 3200                       		move.w	d0,d1
000015A8 0241 000E                  		and.w	#$E,d1
000015AC 4A41                       		tst.w	d1
000015AE 6700                       		beq.s	@RedLast
000015B0 0400 0002                  		sub.b	#2,d0
000015B4                            @RedLast:
000015B4 3200                       		move.w	d0,d1
000015B6 E849                       		lsr.w	#4,d1
000015B8 0241 000E                  		and.w	#$E,d1
000015BC 4A41                       		tst.w	d1
000015BE 6700                       		beq.s	@GreenLast
000015C0 0440 0020                  		sub.w	#$20,d0
000015C4                            @GreenLast:
000015C4 3200                       		move.w	d0,d1
000015C6 E049                       		lsr.w	#8,d1
000015C8 0241 000E                  		and.w	#$E,d1
000015CC 4A41                       		tst.w	d1
000015CE 6700                       		beq.s	@BlueLast
000015D0 0440 0200                  		sub.w	#$200,d0
000015D4                            @BlueLast:
000015D4 4A40                       		tst.w	d0
000015D6 6600 0000                  		bne.w	@NotBlack
000015DA 0642 0001                  		add.w	#1,d2
000015DE                            @NotBlack:
000015DE 3AC0                       		move.w	d0,(a5)+
000015E0 38C0                       		move.w	d0,(a4)+
000015E2 51CE FFC0                  		dbf	d6,@Next
000015E6                            
000015E6 7800                       		moveq	#0,d4
000015E8 1803                       		move.b	d3,d4
000015EA B444                       		cmp.w	d4,d2
000015EC 6D00 FF7A                  		blt	@Return
000015F0                            
000015F0 08D6 0007                  		bset	#bitFinished,(a6)
000015F4 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
000015FA 4E75                       		rts
000015FC                            
000015FC                            ; =====================================================
000015FC                            ; ---------------------------------------------------
000015FC                            ; FadeIn
000015FC                            ; ---------------------------------------------------
000015FC                            
000015FC                            @FadeIn:
000015FC 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
00001602 6A00 FF64                  		bpl	@Return
00001606 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
0000160C                            
0000160C 4BF9 FFFF E882             		lea	(RAM_PalBuffer),a5
00001612 47F9 FFFF F36A             		lea	(RAM_PalBufferHint),a3
00001618 49F9 FFFF E0F2             		lea	(RAM_PalFadeBuff),a4
0000161E                            
0000161E 302E 0002                  		move.w	PalFadeStart(a6),d0
00001622 3800                       		move.w	d0,d4
00001624 E04C                       		lsr.w	#8,d4
00001626 DAC4                       		adda	d4,a5
00001628 D6C4                       		adda	d4,a3
0000162A                            
0000162A 7C00                       		moveq	#0,d6
0000162C 1C2E 0003                  		move.b	PalFadeStart+1(a6),d6
00001630 7A00                       		moveq	#0,d5
00001632                            @Next_2:
00001632 3015                       		move.w	(a5),d0
00001634 3214                       		move.w	(a4),d1
00001636 3400                       		move.w	d0,d2
00001638 3601                       		move.w	d1,d3
0000163A 0242 000E                  		and.w	#$E,d2
0000163E 0243 000E                  		and.w	#$E,d3
00001642 B443                       		cmp.w	d3,d2
00001644 6C00                       		bge.s	@RedFirst
00001646 0640 0002                  		add.w	#2,d0
0000164A                            @RedFirst:
0000164A                            
0000164A 3400                       		move.w	d0,d2
0000164C 3601                       		move.w	d1,d3
0000164E E84A                       		lsr.w	#4,d2
00001650 E84B                       		lsr.w	#4,d3
00001652 0242 000E                  		and.w	#$E,d2
00001656 0243 000E                  		and.w	#$E,d3
0000165A B443                       		cmp.w	d3,d2
0000165C 6C00                       		bge.s	@GreenFirst
0000165E 0640 0020                  		add.w	#$20,d0
00001662                            @GreenFirst:
00001662                            
00001662 3400                       		move.w	d0,d2
00001664 3601                       		move.w	d1,d3
00001666 E04A                       		lsr.w	#8,d2
00001668 E04B                       		lsr.w	#8,d3
0000166A 0242 000E                  		and.w	#$E,d2
0000166E 0243 000E                  		and.w	#$E,d3
00001672 B443                       		cmp.w	d3,d2
00001674 6C00                       		bge.s	@BlueFirst
00001676 0640 0200                  		add.w	#$200,d0
0000167A                            @BlueFirst:	
0000167A 3400                       		move.w	d0,d2
0000167C 3214                       		move.w	(a4),d1
0000167E B242                       		cmp.w	d2,d1
00001680 6600                       		bne.s	@NotEqual
00001682 0645 0001                  		add.w	#1,d5
00001686                            @NotEqual:
00001686 D8FC 0002                  		adda	#2,a4
0000168A 3AC0                       		move.w	d0,(a5)+
0000168C 36C0                       		move.w	d0,(a3)+
0000168E 51CE FFA2                  		dbf	d6,@Next_2
00001692                            
00001692 0445 0001                  		sub.w	#1,d5
00001696 3D45 0008                  		move.w	d5,PalFadeSource(a6)
0000169A                            
0000169A 7800                       		moveq	#0,d4
0000169C 7400                       		moveq	#0,d2
0000169E 142E 0003                  		move.b	PalFadeStart+1(a6),d2
000016A2 1805                       		move.b	d5,d4
000016A4 B444                       		cmp.w	d4,d2
000016A6 6E00 FEC0                  		bgt	@Return
000016AA                            		
000016AA 08D6 0007                  		bset	#bitFinished,(a6)
000016AE 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
000016B4 4E75                       		rts
000016B6                            
000016B6                            ; =====================================================
000016B6                            ; ---------------------------------------------------
000016B6                            ; ToWhite
000016B6                            ; ---------------------------------------------------
000016B6                            
000016B6                            @ToWhite:
000016B6 4BF9 FFFF E882             		lea	(RAM_PalBuffer),a5
000016BC 046E 0001 0006             		sub.w	#1,PalFadeTmr+2(a6)
000016C2 6A00 FEA4                  		bpl	@Return
000016C6 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
000016CC                            
000016CC 362E 0002                  		move.w	PalFadeStart(a6),d3
000016D0                            
000016D0 3C3C 003F                  		move.w	#$3F,d6
000016D4 7400                       		moveq	#0,d2
000016D6                            @NextW:
000016D6 3015                       		move.w	(a5),d0
000016D8 3200                       		move.w	d0,d1
000016DA 0241 000E                  		and.w	#$E,d1
000016DE 0C41 000E                  		cmp.w	#$E,d1
000016E2 6700                       		beq.s	@RedLastW
000016E4 0600 0002                  		add.b	#2,d0
000016E8                            @RedLastW:
000016E8 3200                       		move.w	d0,d1
000016EA E849                       		lsr.w	#4,d1
000016EC 0241 000E                  		and.w	#$E,d1
000016F0 0C41 000E                  		cmp.w	#$E,d1
000016F4 6700                       		beq.s	@GreenLastW
000016F6 0640 0020                  		add.w	#$20,d0
000016FA                            @GreenLastW:
000016FA 3200                       		move.w	d0,d1
000016FC E049                       		lsr.w	#8,d1
000016FE 0241 000E                  		and.w	#$E,d1
00001702 0C41 000E                  		cmp.w	#$E,d1
00001706 6700                       		beq.s	@BlueLastW
00001708 0640 0200                  		add.w	#$200,d0
0000170C                            @BlueLastW:
0000170C 0C40 0EEE                  		cmp.w	#$EEE,d0
00001710 6D00 0000                  		blt.w	@NotWhite
00001714 0642 0001                  		add.w	#1,d2
00001718                            @NotWhite:
00001718 3AC0                       		move.w	d0,(a5)+
0000171A 51CE FFBA                  		dbf	d6,@NextW
0000171E                            
0000171E 7800                       		moveq	#0,d4
00001720 1803                       		move.b	d3,d4
00001722 B444                       		cmp.w	d4,d2
00001724 6D00 FE42                  		blt	@Return
00001728                            		
00001728 08D6 0007                  		bset	#bitFinished,(a6)
0000172C 3D6E 0004 0006             		move.w	PalFadeTmr(a6),PalFadeTmr+2(a6)
00001732 4E75                       		rts
00001734                            
00001734                            ; =====================================================
00001734                            ; ---------------------------------------------------
00001734                            ; FromWhite
00001734                            ; ---------------------------------------------------
00001734                            
00001734                            @FromWhite:
00001734 08D6 0007                  		bset	#bitFinished,(a6)
00001738                            ; 		clr.b	(a6)
00001738 4E75                       		rts
0000173A                            
0000173A                            ; =====================================================
0000173A                            ; ---------------------------------------------------
0000173A                            ; Subs
0000173A                            ; ---------------------------------------------------
0000173A                            
0000173A                            ; =====================================================
0000173A                            ; MARS palette
0000173A                            ; =====================================================
0000173A                            		
0000173A                            		
0000173A                            ; =====================================================
0000173A                            ; ---------------------------------------
0000173A                            ; Subs
0000173A                            ; ---------------------------------------
0000173A                            
0000173A                            ; ---------------------------------------
0000173A                            ; PalFade_Set
0000173A                            ; 
0000173A                            ; Input:
0000173A                            ; d0 - Request type
0000173A                            ; d1 - Settings:
0000173A                            ;      $SSEETTTT   SS StartFrom
0000173A                            ;                  EE NumOfColors
0000173A                            ;                TTTT Timer
0000173A                            ; ---------------------------------------
0000173A                            
0000173A                            PalFade_Set:
0000173A 41F9 FFFF E0E2             		lea	(RAM_PalFadeControl),a0
00001740                            
00001740 2141 0002                  		move.l	d1,PalFadeStart(a0)
00001744 3168 0004 0006             		move.w	PalFadeTmr(a0),PalFadeTmr+2(a0)
0000174A 1080                       		move.b	d0,(a0)
0000174C 4E75                       		rts
0000174E                            
0000174E                            ; ---------------------------------------
0000174E                            ; PalFadeMars_Set
0000174E                            ; 
0000174E                            ; Input:
0000174E                            ; d0 - Request type
0000174E                            ; d1 - Settings:
0000174E                            ;      $SSEETTTT   SS StartFrom
0000174E                            ;                  EE NumOfColors
0000174E                            ;                TTTT Timer
0000174E                            ; ---------------------------------------
0000174E                            
0000174E                            PalFadeMars_Set:
0000174E 4E75                       		rts
00001750                            		
00001750                            ; ---------------------------------------
00001750                            ; PalFade_Wait
00001750                            ; 
00001750                            ; Wait until fade finishes
00001750                            ; ---------------------------------------
00001750                            
00001750                            ;TODO: its broken, temporal solution
00001750                            
00001750                            PalFade_Wait:
00001750                            		
00001750                            		;MD only
00001750 4A39 FFFF E0E2               		tst.b	(RAM_PalFadeControl)
00001756 66F8                         		bne.s	PalFade_Wait
00001758                             		
00001758                            
00001758 4E75                       		rts
0000175A                            
0000175A                            ; ---------------------------------------
0000175A                            ; PalFade_Wait_Flag
0000175A                            ; 
0000175A                            ; Wait until fade finishes
0000175A                            ; 
0000175A                            ; Output:
0000175A                            ; bmi - Busy
0000175A                            ; beq - Finished
0000175A                            ; ---------------------------------------
0000175A                            
0000175A                            PalFade_Wait_Flag:
0000175A 7CFF                        		moveq	#-1,d6
0000175C 4A39 FFFF E0E2             		tst.b	(RAM_PalFadeControl)
00001762 6600                       		bne.s	@no
00001764 7C00                       		moveq	#0,d6
00001766                            @no:
00001766 4A46                       		tst.w	d6
00001768 4E75                       		rts	
00001768 4E75                       		rts	
0000176A                            		include	"engine/subs/misc.asm"
0000176A                            ; ====================================================================
0000176A                            ; ---------------------------------------------
0000176A                            ; Mode cleanup
0000176A                            ; ---------------------------------------------
0000176A                            
0000176A                            Mode_Cleanup:
0000176A 4DF9 FFFF E882             		lea	(RAM_PalBuffer),a6
00001770 303C 003F                  		move.w	#$3F,d0
00001774                            @PalBuf:
00001774 425E                       		clr.w	(a6)+
00001776 51C8 FFFC                  		dbf	d0,@PalBuf
0000177A                            
0000177A 4DF9 FFFF E5B2             		lea	(RAM_VerBuffer),a6
00001780 303C 001F                  		move.w	#(($7F)/4),d0
00001784                            @VerBuf:
00001784 429E                       		clr.l	(a6)+
00001786 51C8 FFFC                  		dbf	d0,@VerBuf
0000178A                            
0000178A 4DF9 FFFF E602             		lea	(RAM_SprBuffer),a6
00001790 303C 007F                  		move.w	#$7F,d0
00001794                            @SprBuf:
00001794 429E                       		clr.l	(a6)+
00001796 51C8 FFFC                  		dbf	d0,@SprBuf
0000179A                            
0000179A 4DF9 FFFF E1F2             		lea	(RAM_HorBuffer),a6
000017A0 303C 00DF                  		move.w	#(($37F)/4),d0
000017A4                            @HorBuf:
000017A4 429E                       		clr.l	(a6)+
000017A6 51C8 FFFC                  		dbf	d0,@HorBuf
000017AA                            
000017AA 4E75                       		rts
000017AC                            
000017AC                            ; ====================================================================
000017AC                            ; ---------------------------------------------
000017AC                            ; Full fadein/fadeout
000017AC                            ; ---------------------------------------------
000017AC                            
000017AC                            Mode_FadeIn:
000017AC 7002                       		moveq	#ID_FadeIn,d0
000017AE 223C 003F 0001             		move.l	#$003F0001,d1
000017B4 6100 FF84                   		bsr	PalFade_Set
000017B8                            		
000017B8 6000 FF96                  		bra	PalFade_Wait
000017BC                            
000017BC                            Mode_FadeOut:
000017BC 7001                       		moveq	#ID_FadeOut,d0
000017BE 223C 003F 0001             		move.l	#$003F0001,d1
000017C4 6100 FF74                   		bsr	PalFade_Set
000017C8                            		
000017C8 6000 FF86                  		bra	PalFade_Wait
000017CC                            		
000017CC                            ; ====================================================================
000017CC                            ; ---------------------------------------------
000017CC                            ; Generic data loaders
000017CC                            ;
000017CC                            ; NonVDP:
000017CC                            ; a0 - Input
000017CC                            ; a1 - Output
000017CC                            ; d0 - Size
000017CC                            ; ---------------------------------------------
000017CC                            
000017CC                            LoadData_Byte:
000017CC 12D8                       		move.b	(a0)+,(a1)+
000017CE 51C8 FFFC                  		dbf	d0,LoadData_Byte
000017D2 4E75                       		rts
000017D4                            
000017D4                            LoadData_Word:
000017D4 32D8                       		move.w	(a0)+,(a1)+
000017D6 51C8 FFFC                  		dbf	d0,LoadData_Word
000017DA 4E75                       		rts
000017DC                            
000017DC                            LoadData_Long:
000017DC 22D8                       		move.l	(a0)+,(a1)+
000017DE 51C8 FFFC                  		dbf	d0,LoadData_Long
000017E2 4E75                       		rts
000017E4                            		
000017E4                            ; ====================================================================
000017E4                            ; ---------------------------------------------
000017E4                            ; RLE decompression
000017E4                            ; byte $FF is end-of-data
000017E4                            ;
000017E4                            ; a0 - Input
000017E4                            ; a1 - Output
000017E4                            ; ---------------------------------------------
000017E4                            
000017E4                            RLE_decompress:
000017E4 7000                       		moveq	#0,d0
000017E6 7200                       		moveq	#0,d1
000017E8 1018                       		move.b	(a0)+,d0
000017EA 0C00 00FF                  		cmp.b	#-1,d0
000017EE 6700 0000                  		beq	@Finish
000017F2 1218                       		move.b	(a0)+,d1
000017F4                            @CopyIt:
000017F4 12C1                       		move.b	d1,(a1)+
000017F6 51C8 FFFC                  		dbf	d0,@CopyIt
000017FA                            		
000017FA 60E8                       		bra.s	RLE_decompress
000017FC                            @Finish:
000017FC 4E75                       		rts
000017FE                                		
000017FE                            ; ====================================================================
000017FE                            ; ---------------------------------------------
000017FE                            ; CalcSine
000017FE                            ;
000017FE                            ; Input:
000017FE                            ; d0 | WORD
000017FE                            ;
000017FE                            ; Output:
000017FE                            ; d0 | WORD
000017FE                            ; d1 | WORD
000017FE                            ; ---------------------------------------------
000017FE                            
000017FE                            CalcSine:
000017FE 0240 00FF                  		and.w	#$FF,d0
00001802 D040                       		add.w	d0,d0
00001804 0640 0080                  		add.w	#$80,d0
00001808 323B 0000                  		move.w	Sine_Data(pc,d0.w),d1
0000180C 0440 0080                  		sub.w	#$80,d0
00001810 303B 0000                  		move.w	Sine_Data(pc,d0.w),d0
00001814 4E75                       		rts	
00001816                            
00001816                            Sine_Data:
00001816 0000 0006 000C 0012 0019+  		dc.w 0,	6, $C, $12, $19, $1F, $25, $2B,	$31, $38, $3E
0000182C 0044 004A 0050 0056 005C+  		dc.w $44, $4A, $50, $56, $5C, $61, $67,	$6D, $73, $78
00001840 007E 0083 0088 008E 0093+  		dc.w $7E, $83, $88, $8E, $93, $98, $9D,	$A2, $A7, $AB
00001854 00B0 00B5 00B9 00BD 00C1+  		dc.w $B0, $B5, $B9, $BD, $C1, $C5, $C9,	$CD, $D1, $D4
00001868 00D8 00DB 00DE 00E1 00E4+  		dc.w $D8, $DB, $DE, $E1, $E4, $E7, $EA,	$EC, $EE, $F1
0000187C 00F3 00F4 00F6 00F8 00F9+  		dc.w $F3, $F4, $F6, $F8, $F9, $FB, $FC,	$FD, $FE, $FE
00001890 00FF 00FF 00FF 0100 00FF+  		dc.w $FF, $FF, $FF, $100, $FF, $FF, $FF, $FE, $FE, $FD
000018A4 00FC 00FB 00F9 00F8 00F6+  		dc.w $FC, $FB, $F9, $F8, $F6, $F4, $F3,	$F1, $EE, $EC
000018B8 00EA 00E7 00E4 00E1 00DE+  		dc.w $EA, $E7, $E4, $E1, $DE, $DB, $D8,	$D4, $D1, $CD
000018CC 00C9 00C5 00C1 00BD 00B9+  		dc.w $C9, $C5, $C1, $BD, $B9, $B5, $B0,	$AB, $A7, $A2
000018E0 009D 0098 0093 008E 0088+  		dc.w $9D, $98, $93, $8E, $88, $83, $7E,	$78, $73, $6D
000018F4 0067 0061 005C 0056 0050+  		dc.w $67, $61, $5C, $56, $50, $4A, $44,	$3E, $38, $31
00001908 002B 0025 001F 0019 0012+  		dc.w $2B, $25, $1F, $19, $12, $C, 6, 0,	-6, -$C, -$12
0000191E FFE7 FFE1 FFDB FFD5 FFCF+  		dc.w -$19, -$1F, -$25, -$2B, -$31, -$38, -$3E, -$44, -$4A
00001930 FFB0 FFAA FFA4 FF9F FF99+  		dc.w -$50, -$56, -$5C, -$61, -$67, -$6D, -$75, -$78, -$7E
00001942 FF7D FF78 FF72 FF6D FF68+  		dc.w -$83, -$88, -$8E, -$93, -$98, -$9D, -$A2, -$A7, -$AB
00001954 FF50 FF4B FF47 FF43 FF3F+  		dc.w -$B0, -$B5, -$B9, -$BD, -$C1, -$C5, -$C9, -$CD, -$D1
00001966 FF2C FF28 FF25 FF22 FF1F+  		dc.w -$D4, -$D8, -$DB, -$DE, -$E1, -$E4, -$E7, -$EA, -$EC
00001978 FF12 FF0F FF0D FF0C FF0A+  		dc.w -$EE, -$F1, -$F3, -$F4, -$F6, -$F8, -$F9, -$FB, -$FC
0000198A FF03 FF02 FF02 FF01 FF01+  		dc.w -$FD, -$FE, -$FE, -$FF, -$FF, -$FF, -$100,	-$FF, -$FF
0000199C FF01 FF02 FF02 FF03 FF04+  		dc.w -$FF, -$FE, -$FE, -$FD, -$FC, -$FB, -$F9, -$F8, -$F6
000019AE FF0C FF0D FF0F FF12 FF14+  		dc.w -$F4, -$F3, -$F1, -$EE, -$EC, -$EA, -$E7, -$E4, -$E1
000019C0 FF22 FF25 FF28 FF2C FF2F+  		dc.w -$DE, -$DB, -$D8, -$D4, -$D1, -$CD, -$C9, -$C5, -$C1
000019D2 FF43 FF47 FF4B FF50 FF55+  		dc.w -$BD, -$B9, -$B5, -$B0, -$AB, -$A7, -$A2, -$9D, -$98
000019E4 FF6D FF72 FF78 FF7D FF82+  		dc.w -$93, -$8E, -$88, -$83, -$7E, -$78, -$75, -$6D, -$67
000019F6 FF9F FFA4 FFAA FFB0 FFB6+  		dc.w -$61, -$5C, -$56, -$50, -$4A, -$44, -$3E, -$38, -$31
00001A08 FFD5 FFDB FFE1 FFE7 FFEE+  		dc.w -$2B, -$25, -$1F, -$19, -$12, -$C,	-6, 0, 6, $C, $12
00001A1E 0019 001F 0025 002B 0031+  		dc.w $19, $1F, $25, $2B, $31, $38, $3E,	$44, $4A, $50
00001A32 0056 005C 0061 0067 006D+  		dc.w $56, $5C, $61, $67, $6D, $73, $78,	$7E, $83, $88
00001A46 008E 0093 0098 009D 00A2+  		dc.w $8E, $93, $98, $9D, $A2, $A7, $AB,	$B0, $B5, $B9
00001A5A 00BD 00C1 00C5 00C9 00CD+  		dc.w $BD, $C1, $C5, $C9, $CD, $D1, $D4,	$D8, $DB, $DE
00001A6E 00E1 00E4 00E7 00EA 00EC+  		dc.w $E1, $E4, $E7, $EA, $EC, $EE, $F1,	$F3, $F4, $F6
00001A82 00F8 00F9 00FB 00FC 00FD+  		dc.w $F8, $F9, $FB, $FC, $FD, $FE, $FE,	$FF, $FF, $FF
00001A96                            		even
00001A96                            		
00001A96                            ; ====================================================================
00001A96                            ; ---------------------------------------------
00001A96                            ; Sprites system
00001A96                            ; ---------------------------------------------
00001A96                            
00001A96                            ; TODO: talvez moverlo
00001A96                            
00001A96                            ; Start: $FFBDDA
00001A96                            ; End: $FFC05A
00001A96                            ; Size: $280 | $A0
00001A96                            
00001A96                            		rsreset
00001A96 =00000000                  sprite_free	rs.l	1
00001A96 =00000004                  sprite_link	rs.w	1
00001A96 =00000006                  sprite_used	rs.w	1
00001A96                            		
00001A96                            ; ---------------------------------------------
00001A96                            ; Sprites_Reset
00001A96                            ; ---------------------------------------------
00001A96                            
00001A96                            Sprites_Reset:
00001A96 4DF9 FFFF D8D2             		lea	(RAM_SprControl),a6
00001A9C 2A6E 0000                  		movea.l	sprite_free(a6),a5
00001AA0 BAFC E602                  		cmpa	#((RAM_SprBuffer)&$FFFF),a5
00001AA4 6D00                       		blt.s	@Full
00001AA6                            @NextEntry:
00001AA6                            ; 		tst.l	(a5)
00001AA6                            ; 		beq.s	@Full
00001AA6                            ; 		tst.l	4(a5)
00001AA6                            ; 		beq.s	@Full
00001AA6 BAFC E882                   		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
00001AAA 6E00                        		bgt.s	@Full
00001AAC 429D                        		clr.l	(a5)+
00001AAE 429D                         		clr.l	(a5)+
00001AB0 BAFC E882                    		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
00001AB4 6DF0                         		blt.s	@NextEntry
00001AB6                            @Full:
00001AB6 2D7C FFFF E602 0000        		move.l	#RAM_SprBuffer,sprite_free(a6)
00001ABE 3D7C 0001 0004             		move.w	#1,sprite_link(a6)
00001AC4                            @Return:
00001AC4 4E75                       		rts
00001AC6                            		
00001AC6                            ; ====================================================================
00001AC6                            ; ---------------------------------------------
00001AC6                            ; SRAM
00001AC6                            ; ---------------------------------------------
00001AC6                            
00001AC6                            SRAM_Init:
00001AC6 13FC 0003 00A1 30F1        		move.b	#%11,($A130F1)		;read+write
00001ACE 41F9 0020 0000             		lea	($200000),a0
00001AD4 0108 0001                  		movep.w	1(a0),d0
00001AD8 0C80 0000 4745             		cmp.l	#"GE",d0
00001ADE 6700                       		beq.s	@exit
00001AE0 43FA 0000                  		lea	@SramHead(pc),a1
00001AE4 7006                       		moveq	#7-1,d0
00001AE6                            @header:
00001AE6 1019                       		move.b	(a1)+,d0
00001AE8 1140 0001                  		move.b	d0,1(a0)
00001AEC D0FC 0002                  		adda	#2,a0
00001AF0 51C8 FFF4                  		dbf	d0,@header
00001AF4                            @exit:
00001AF4 13FC 0000 00A1 30F1        		move.b	#0,($A130F1)
00001AFC 4E75                       		rts
00001AFE                            
00001AFE                            ; ---------------------------------------------
00001AFE                            
00001AFE 4745 4E59 5341 5645 00     @SramHead:	dc.b "GENYSAVE",0
00001B08 00                         		even
00001B08                            		
00001B08                            		
00001B08                            		include	"engine/subs/pads.asm"
00001B08                            ; ====================================================================
00001B08                            ; Joypads
00001B08                            ; ====================================================================
00001B08                            
00001B08                            		rsreset
00001B08 =00000000                  CtrlID		rs.b	1
00001B08 =00000001                  FightPad	rs.b	1		;only TRUE $01 or FALSE $00
00001B08 =00000002                  ExOnHold	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
00001B08 =00000003                  OnHold		rs.b	1		;SACBRLDU
00001B08 =00000004                  ExOnPress	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
00001B08 =00000005                  OnPress		rs.b	1		;SACBRLDU
00001B08 =00000006                  MouseX		rs.w	1		;TODO
00001B08 =00000008                  MouseY		rs.w	1
00001B08 =00000010                  Port2		equ	$10
00001B08                            
00001B08                            
00001B08 =00000001                  JoyUp		equ	%00000001
00001B08 =00000002                  JoyDown		equ	%00000010
00001B08 =00000004                  JoyLeft		equ	%00000100
00001B08 =00000008                  JoyRight	equ	%00001000
00001B08 =00000010                  JoyB		equ	%00010000
00001B08 =00000020                  JoyC		equ	%00100000
00001B08 =00000040                  JoyA		equ	%01000000
00001B08 =00000080                  JoyStart	equ	%10000000
00001B08 =00000000                  bitJoyUp	equ	0
00001B08 =00000001                  bitJoyDown	equ	1
00001B08 =00000002                  bitJoyLeft	equ	2
00001B08 =00000003                  bitJoyRight	equ	3
00001B08 =00000004                  bitJoyB		equ	4
00001B08 =00000005                  bitJoyC		equ	5
00001B08 =00000006                  bitJoyA		equ	6
00001B08 =00000007                  bitJoyStart	equ	7
00001B08                            
00001B08 =00000001                  JoyZ		equ	%00000001
00001B08 =00000002                  JoyY		equ	%00000010
00001B08 =00000004                  JoyX		equ	%00000100
00001B08 =00000008                  JoyMode		equ	%00001000
00001B08 =00000000                  bitJoyZ		equ	0
00001B08 =00000001                  bitJoyY		equ	1
00001B08 =00000002                  bitJoyX		equ	2
00001B08 =00000003                  bitJoyMode	equ	3
00001B08                            
00001B08                            ; --------------------------------------------
00001B08                            ; Pads_Init
00001B08                            ; --------------------------------------------
00001B08                            
00001B08                            Pads_Init:
00001B08 33FC 0100 00A1 1100        		move.w	#$100,($A11100)
00001B10 33FC 0100 00A1 1200        		move.w	#$100,($A11200)
00001B18                            @WaitZ80:
00001B18 0839 0000 00A1 1100        		btst	#0,($A11100)
00001B20 66F6                        		bne.s	@WaitZ80
00001B22                             
00001B22 7240                       		moveq	#$40,d1
00001B24 13C1 00A1 0009             		move.b	d1,($A10009).l
00001B2A 13C1 00A1 000B             		move.b	d1,($A1000B).l
00001B30 13C1 00A1 000D             		move.b	d1,($A1000D).l
00001B36                            
00001B36 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00001B3E 4E75                       		rts
00001B40                            
00001B40                            ; --------------------------------------------
00001B40                            ; Pads_Read
00001B40                            ; --------------------------------------------
00001B40                            
00001B40                            Pads_Read:
00001B40 33FC 0100 00A1 1100        		move.w	#$100,($A11100)
00001B48                            ; 		move.w	#$100,($A11200)
00001B48                            @WaitZ80:
00001B48 0839 0000 00A1 1100        		btst	#0,($A11100)
00001B50 66F6                        		bne.s	@WaitZ80
00001B52                             		
00001B52 4BF9 FFFF D892             		lea	(RAM_Joypads),a5
00001B58 7000                       		moveq	#0,d0
00001B5A 6100                       		bsr.s	@DoIt
00001B5C 4BF9 FFFF D8A2             		lea	(RAM_Joypads+Port2),a5
00001B62 7001                       		moveq	#1,d0
00001B64 6100                       		bsr.s	@DoIt
00001B66                            
00001B66 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00001B6E 4E75                       		rts
00001B70                            
00001B70                            ; ---------------------------------------
00001B70                            
00001B70                            @DoIt:
00001B70 4DF9 00A1 0003             		lea	($A10003).l,a6
00001B76 E348                       		lsl.w	#1,d0
00001B78 DCC0                       		add.w	d0,a6			;Add result to port
00001B7A 6100 0000                  		bsr	@FindJoypad
00001B7E 1A80                       		move.b	d0,(a5)
00001B80                            
00001B80 0C00 000F                                  cmp.b	#$F,d0
00001B84 6700                                       beq.s	@End
00001B86 0C00 000D                  		cmp.b	#$D,d0
00001B8A 6700                                       beq.s	@Controller
00001B8C 0C00 0007                    		cmp.b	#7,d0			;Multitap
00001B90 6700                                       beq.s	@End
00001B92 0C00 0003                  		cmp.b	#3,d0
00001B96 6700 0000                                  beq	@Mouse
00001B9A                            
00001B9A                            @End:
00001B9A 4E75                       		rts
00001B9C                            
00001B9C                            ; ------------------------------------
00001B9C                            ; Controller
00001B9C                            ; ------------------------------------
00001B9C                            
00001B9C                            @Controller:
00001B9C 1D7C 0040 0006             		move.b	#$40,6(a6)
00001BA2 4E71                       		nop
00001BA4 4E71                       		nop
00001BA6 1CBC 0040                  		move.b	#$40,(a6)		; Show CB|RLDU
00001BAA 4E71                       		nop
00001BAC 4E71                       		nop
00001BAE 1CBC 0000                  		move.b	#$00,(a6)		; Show SA|RLDU
00001BB2 4E71                       		nop
00001BB4 4E71                       		nop
00001BB6 1CBC 0040                  		move.b	#$40,(a6)		; Show CB|RLDU
00001BBA 4E71                       		nop
00001BBC 4E71                       		nop
00001BBE 1CBC 0000                  		move.b	#$00,(a6)		; Show SA|RLDU
00001BC2 4E71                       		nop
00001BC4 4E71                       		nop
00001BC6 1CBC 0040                  		move.b	#$40,(a6)		; "Okay OKAY!, I have more buttons"
00001BCA 4E71                       		nop
00001BCC 4E71                       		nop
00001BCE 1016                       		move.b	(a6),d0
00001BD0 1CBC 0000                   		move.b	#$00,(a6)		; "Heres my ID"
00001BD4 4E71                         		nop
00001BD6 4E71                         		nop
00001BD8 1216                        		move.b	(a6),d1
00001BDA 1CBC 0040                   		move.b	#$40,(a6)
00001BDE 4E71                        		nop
00001BE0 4E71                        		nop
00001BE2                            		
00001BE2 7400                       		moveq	#0,d2
00001BE4 0241 000F                  		and.w	#$F,d1
00001BE8 0C41 000F                  		cmp.w	#$F,d1
00001BEC 6600                       		bne.s	@Original
00001BEE                            		
00001BEE 7401                       		moveq	#1,d2
00001BF0 7200                        		moveq	#0,d1
00001BF2 122D 0002                   		move.b	ExOnHold(a5),d1
00001BF6 4601                       		not.b	d1
00001BF8 B101                        		eor.b	d0,d1
00001BFA C200                        		and.b	d0,d1
00001BFC 0241 000F                   		and.w	#$F,d1
00001C00 1B41 0004                   		move.b	d1,ExOnPress(a5)
00001C04 4600                        		not.b	d0
00001C06 0240 000F                   		and.w	#$F,d0
00001C0A 1B40 0002                   		move.b	d0,ExOnHold(a5)
00001C0E                             		
00001C0E                            @Original:	
00001C0E 1B42 0001                  		move.b	d2,FightPad(a5)
00001C12                            	
00001C12 1CBC 0000                  		move.b	#0,(a6)
00001C16 4E71                       		nop
00001C18 4E71                       		nop
00001C1A 1016                       		move.b	(a6),d0
00001C1C E508                       		lsl.b	#2,d0
00001C1E 0200 00C0                  		and.b	#$C0,d0	
00001C22 1CBC 0040                  		move.b	#$40,(a6)
00001C26 4E71                       		nop
00001C28 4E71                       		nop
00001C2A 1216                       		move.b	(a6),d1
00001C2C 0201 003F                  		and.b	#$3F,d1
00001C30 8001                       		or.b	d1,d0
00001C32 4600                       		not.b	d0
00001C34 122D 0003                  		move.b	OnHold(a5),d1
00001C38 B101                       		eor.b	d0,d1
00001C3A 1B40 0003                  		move.b	d0,OnHold(a5)
00001C3E C200                       		and.b	d0,d1
00001C40 1B41 0005                  		move.b	d1,OnPress(a5)
00001C44 4E75                       		rts
00001C46                            
00001C46                            ; ; ------------------------------------
00001C46                            ; ; Multitap
00001C46                            ; ; ------------------------------------
00001C46                            ; 
00001C46                            ; @Multitap:
00001C46                            ; 		bra	@End
00001C46                            
00001C46                            ; ------------------------------------
00001C46                            ; Sega Mega Mouse
00001C46                            ;
00001C46                            ; in: d1 - port number
00001C46                            ; out: d0 - status
00001C46                            ;      d2
00001C46                            ; ------------------------------------
00001C46                            
00001C46                            @Mouse:
00001C46 7200                       		moveq	#0,d1
00001C48 6100 0000                  		bsr	@ReadIt
00001C4C                            		
00001C4C 2002                       		move.l	d2,d0
00001C4E 4840                       		swap	d0
00001C50 0240 00FF                  		and.w	#$FF,d0
00001C54 122D 0003                  		move.b	OnHold(a5),d1
00001C58 B101                       		eor.b	d0,d1
00001C5A 1B40 0003                  		move.b	d0,OnHold(a5)
00001C5E C200                        		and.b	d0,d1
00001C60 1B41 0005                  		move.b	d1,OnPress(a5)
00001C64                            		
00001C64                            		;TODO
00001C64 3002                       		move.w	d2,d0
00001C66 0240 00FF                  		and.w	#$FF,d0
00001C6A 4880                       		ext.w	d0
00001C6C 4440                       		neg.w	d0
00001C6E 3B40 0008                   		move.w	d0,MouseY(a5)
00001C72                             		
00001C72 E04A                        		lsr.w	#8,d2
00001C74 0242 00FF                   		and.w	#$FF,d2
00001C78 4882                       		ext.w	d2
00001C7A 3B42 0006                   		move.w	d2,MouseX(a5)
00001C7E 6000 FF1A                   		bra	@End
00001C82                            
00001C82                            ; ------------------------------------
00001C82                            
00001C82                            @ReadIt:
00001C82 48E7 5902                  		movem.l	d1/d3/d4/d7/a6,-(sp)
00001C86                            
00001C86 7000                       		moveq	#0,d0			;Error flag
00001C88 0C41 0002                  		cmp.w	#2,d1			;Control ID < 2?
00001C8C 6200 0000                  		bhi	@Error
00001C90 D241                       		add.w	d1,d1
00001C92                            	;	lea	($A10003),a6
00001C92                            @Connect:
00001C92 1D7C 0060 0006             		move.b	#$60,6(a6)
00001C98 4E71                                       nop
00001C9A 4E71                                       nop
00001C9C 1CBC 0060                                  move.b	#$60,(a6)		;TH,TR=11 (END DATA)
00001CA0 7400                                       moveq	#0,d2
00001CA2 7600                                       moveq	#0,d3
00001CA4                            @NotReady:
00001CA4 0816 0004                   		btst	#4,(a6)
00001CA8 67FA                        		beq.s	@NotReady
00001CAA 1816                        		move.b	(a6),d4			;d4.b = ? 1 1 1 | 0 0 0
00001CAC 0204 000F                   		and.b	#$F,d4
00001CB0 4A04                        		tst.b	d4
00001CB2 6600 0000                   		bne	@Error			;No mouse
00001CB6 1CBC 0020                   		move.b	#$20,(a6)		;Select t1 m1 1 1
00001CBA 3E3C 00FE                   		move.w	#$FE,d7
00001CBE                            @lp1:
00001CBE 0816 0004                  		btst.b	#4,(a6)
00001CC2 6600                       		bne.s	@Mouse_10
00001CC4 51CF FFF8                  		dbra	d7,@lp1
00001CC8 6000 0000                  		bra	@Error
00001CCC                            		
00001CCC                            @Mouse_10:
00001CCC 1016                       		move.b	(a6),d0			;d0 = xxxx|xxxx|xxxx|t1 m1 1 1
00001CCE E148                       		lsl.w	#8,d0			;d0 = xxxx|t1 m1 1 1|0000|0000
00001CD0 1CBC 0000                  		move.b	#0,(a6)
00001CD4 4E71                       		nop
00001CD6                            @lp2:
00001CD6 0816 0004                  		btst	#4,(a6)
00001CDA 6700                       		beq.s	@Mouse_20
00001CDC 51CF FFF8                  		dbra	d7,@lp2
00001CE0 6000 0000                  		bra	@Error
00001CE4                            		
00001CE4                            @Mouse_20:
00001CE4 1616                       		move.b	(a6),d3
00001CE6 1CBC 0020                  		move.b	#$20,(a6)
00001CEA E14B                       		lsl.w	#8,d3
00001CEC                            @lp3:
00001CEC 0816 0004                  		btst	#4,(a6)
00001CF0 6600                       		bne.s	@Mouse_30
00001CF2 51CF FFF8                  		dbra	d7,@lp3
00001CF6 6000 0000                  		bra	@Error
00001CFA                            		
00001CFA                            @Mouse_30:
00001CFA 1616                       		move.b	(a6),d3
00001CFC E90B                       		lsl.b	#4,d3
00001CFE E84B                       		lsr.w	#4,d3
00001D00 1CBC 0000                  		move.b	#0,(a6)
00001D04 8043                       		or.w	d3,d0
00001D06 7600                       		moveq	#0,d3
00001D08                            @lp4:
00001D08 0816 0004                  		btst	#4,(a6)
00001D0C 6700                                       beq.s	@Mouse_40
00001D0E 51CF FFF8                                  dbra	d7,@lp4
00001D12 6000 0000                                  bra	@Error
00001D16                            
00001D16                            @Mouse_40:
00001D16 1416                       		move.b	(a6),d2
00001D18 1CBC 0020                  		move.b	#$20,(a6)
00001D1C E14A                       		lsl.w	#8,d2
00001D1E                            @lp5:
00001D1E 0816 0004                  		btst	#4,(a6)
00001D22 6600                       		bne.s	@Mouse_50
00001D24 51CF FFF8                  		dbra	d7,@lp5
00001D28 6000 0000                  		bra	@Error
00001D2C                            		
00001D2C                            @Mouse_50:
00001D2C 1416                       		move.b	(a6),d2
00001D2E 1CBC 0000                  		move.b	#0,(a6)
00001D32 E90A                       		lsl.b	#4,d2
00001D34 E94A                       		lsl.w	#4,d2
00001D36                            @lp6:
00001D36 0816 0004                  		btst	#4,(a6)
00001D3A 6700                       		beq.s	@Mouse_60
00001D3C 51CF FFF8                  		dbra	d7,@lp6
00001D40 6000 0000                  		bra	@Error
00001D44                            
00001D44                            @Mouse_60:
00001D44 1416                       		move.b	(a6),d2
00001D46 1CBC 0020                  		move.b	#$20,(a6)
00001D4A E90A                       		lsl.b	#4,d2
00001D4C E98A                       		lsl.l	#4,d2
00001D4E                            @lp7:
00001D4E 0816 0004                  		btst	#4,(a6)
00001D52 6600                       		bne.s	@Mouse_70
00001D54 51CF FFF8                  		dbra	d7,@lp7
00001D58 6000                       		bra.s	@Error
00001D5A                            
00001D5A                            @Mouse_70:
00001D5A 1416                       		move.b	(a6),d2
00001D5C 1CBC 0000                  		move.b	#0,(a6)
00001D60 E90A                       		lsl.b	#4,d2
00001D62 E98A                       		lsl.l	#4,d2
00001D64                            @lp8:
00001D64 0816 0004                  		btst	#4,(a6)
00001D68 6700                       		beq.s	@Mouse_80
00001D6A 51CF 0000                  		dbra	d7,@Mouse_80
00001D6E 6000                       		bra.s	@Error
00001D70                            
00001D70                            @Mouse_80:
00001D70 1416                       		move.b	(a6),d2
00001D72 1CBC 0020                  		move.b	#$20,(a6)
00001D76 E90A                       		lsl.b	#4,d2
00001D78 E98A                       		lsl.l	#4,d2
00001D7A                            @lp9:
00001D7A 0816 0004                  		btst	#4,(a6)
00001D7E 6700                       		beq.s	@Mouse_90
00001D80 51CF FFF8                  		dbra	d7,@lp9
00001D84 6000                       		bra.s	@Error
00001D86                            
00001D86                            @Mouse_90:
00001D86 1416                       		move.b	(a6),d2
00001D88 1CBC 0060                  		move.b	#$60,(a6)
00001D8C E90A                       		lsl.b	#4,d2
00001D8E E88A                       		lsr.l	#4,d2
00001D90                            @lp10:
00001D90 0816 0004                  		btst	#4,(a6)
00001D94 67FA                       		beq.s	@lp10
00001D96 0082 0000 0000             		or.l	#0,d2
00001D9C                            @Exit:
00001D9C 33FC 0000 00A1 1100        		move.w	#0,($A11100)
00001DA4 4CDF 409A                  		movem.l	(sp)+,d1/d3/d4/d7/a6
00001DA8 4E75                       		rts
00001DAA                            
00001DAA                            @Error:
00001DAA 1CBC 0060                  		move.b	#$60,(a6)
00001DAE 4E71                       		nop
00001DB0 4E71                       		nop
00001DB2                            @erlp:
00001DB2 1CBC 0004                  		move.b	#4,(a6)
00001DB6 67FA                       		beq.s	@erlp
00001DB8 0082 8000 0000             		or.l	#$80000000,d2
00001DBE 7000                       		moveq	#0,d0
00001DC0 33FC 0000 00A1 1100        		move.w	#0,($A11100)
00001DC8 4CDF 409A                  		movem.l	(sp)+,d1/d3/d4/d7/a6
00001DCC 4E75                       		rts
00001DCE                            
00001DCE                            ; ------------------------------------
00001DCE                            ; d0.w
00001DCE                            ; $0F - Nothing
00001DCE                            ; $0D - Controller
00001DCE                            ; $07 - Multitap
00001DCE                            ; $03 - Mouse
00001DCE                            ;
00001DCE                            ; d1.l
00001DCE                            ; $00xx00yy - Key presses
00001DCE                            ; ------------------------------------
00001DCE                            
00001DCE                            @FindJoypad:
00001DCE 7000                       		moveq	#0,d0
00001DD0 1CBC 0070                  		move.b	#$70,(a6)
00001DD4 6100                       		bsr.s	@GetPress
00001DD6 4841                       		swap	d1
00001DD8 1CBC 0030                  		move.b	#$30,(a6)
00001DDC D040                       		add.w	d0,d0
00001DDE                            
00001DDE                            @GetPress:
00001DDE 1216                       		move.b	(a6),d1
00001DE0 1401                       		move.b	d1,d2
00001DE2 0202 000C                  		and.b	#$C,d2
00001DE6 6700                       		beq.s	@Nope1
00001DE8 5240                       		addq.w	#1,d0
00001DEA                            
00001DEA                            @Nope1:
00001DEA D040                       		add.w	d0,d0
00001DEC 1601                       		move.b	d1,d3
00001DEE 0243 0003                  		and.w	#3,d3
00001DF2 6700                       		beq.s	@Nope2
00001DF4 5240                       		addq.w	#1,d0
00001DF6                            
00001DF6                            @Nope2:
00001DF6 4E75                       		rts
00001DF8                            		
00001DF8                            		
00001DF8                            		include	"engine/subs/dma.asm"
00001DF8                            ; =====================================================================================
00001DF8                            ; DMA
00001DF8                            ; =====================================================================================
00001DF8                            
00001DF8                            ; -----------------------------------
00001DF8                            ; Read
00001DF8                            ; -----------------------------------
00001DF8                            
00001DF8                            ; ROM data
00001DF8                            ; Size
00001DF8                            ; VRAM Destiantion
00001DF8                            
00001DF8                            DMA_Read:
00001DF8 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
00001E00                            @WaitZ80:
00001E00 0839 0000 00A1 1100        		btst	#0,($A11100).l
00001E08 66F6                       		bne.s	@WaitZ80
00001E0A                            		
00001E0A 4DF9 FFFF DCE2              		lea	(RAM_DMA_Buffer),a6
00001E10                             		
00001E10 381E                         		move.w	(a6)+,d4
00001E12 4A44                         		tst.w	d4
00001E14 6700 0000                    		beq	@FinishList
00001E18 0444 0001                    		sub.w	#1,d4
00001E1C                            @NextEntry:
00001E1C 2C1E                        		move.l	(a6)+,d6			;ROM address
00001E1E E28E                         		lsr.l	#1,d6
00001E20 3A3C 9500                    		move.w	#$9500,d5
00001E24 1A06                        		move.b	d6,d5
00001E26 33C5 00C0 0004              		move.w	d5,($C00004).l
00001E2C 2A3C 9700 9600               		move.l	#$97009600,d5			;ROM Address (XXXX00)
00001E32 E08E                        		lsr.l	#8,d6
00001E34 1A06                        		move.b	d6,d5
00001E36 4845                        		swap	d5
00001E38 E08E                        		lsr.l	#8,d6
00001E3A 1A06                        		move.b	d6,d5
00001E3C 23C5 00C0 0004              		move.l	d5,($C00004).l
00001E42                             		
00001E42 2A3C 9400 9300              		move.l	#$94009300,d5			;Size
00001E48 3C1E                        		move.w	(a6)+,d6
00001E4A 1A06                        		move.b	d6,d5
00001E4C 4845                        		swap	d5
00001E4E E04E                        		lsr.w	#8,d6
00001E50 1A06                        		move.b	d6,d5
00001E52 23C5 00C0 0004              		move.l	d5,($C00004).l
00001E58                             		
00001E58 3C1E                        		move.w	(a6)+,d6			;VRAM Destiantion
00001E5A 0246 07FF                   		and.w	#$7FF,d6
00001E5E EB4E                        		lsl.w	#5,d6				;x20
00001E60 0286 0000 FFE0              		and.l	#$FFE0,d6
00001E66 E58E                        		lsl.l	#2,d6
00001E68 E44E                        		lsr.w	#2,d6
00001E6A 4846                        		swap	d6
00001E6C 0086 4000 0080              		or.l	#$40000080,d6
00001E72 23C6 00C0 0004              		move.l	d6,($C00004)
00001E78 51CC FFA2                   		dbf	d4,@NextEntry
00001E7C                            @FinishList:
00001E7C 4279 FFFF DCE2             		clr.w	(RAM_DMA_Buffer)
00001E82 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00001E8A 4E75                        		rts
00001E8C                            
00001E8C                            ; -----------------------------------
00001E8C                            ; Set new entry to the list
00001E8C                            ; 
00001E8C                            ; Input:
00001E8C                            ; d0 - ROM Address
00001E8C                            ; d1 - Size
00001E8C                            ; d2 - VRAM
00001E8C                            ; 
00001E8C                            ; Uses:
00001E8C                            ; a2/d3
00001E8C                            ; -----------------------------------
00001E8C                            
00001E8C                            DMA_Set:
00001E8C 45F9 FFFF DCE2             		lea	(RAM_DMA_Buffer),a2
00001E92 0C52 0040                  		cmp.w	#64,(a2)
00001E96 6C00                       		bge.s	@Return
00001E98 3612                       		move.w	(a2),d3
00001E9A E74B                       		lsl.w	#3,d3			;Size: 8
00001E9C D4C3                       		adda 	d3,a2
00001E9E D4FC 0002                  		adda	#2,a2
00001EA2                            
00001EA2 24C0                       		move.l	d0,(a2)+		;ROM Address
00001EA4 34C1                       		move.w	d1,(a2)+
00001EA6 34C2                       		move.w	d2,(a2)+
00001EA8 0679 0001 FFFF DCE2        		add.w	#1,(RAM_DMA_Buffer)
00001EB0                            @Return:
00001EB0 4E75                       		rts
00001EB2                            
00001EB2                            ; -----------------------------------
00001EB2                            ; Quick set
00001EB2                            ; 
00001EB2                            ; External
00001EB2                            ; 
00001EB2                            ; d0 - Destiantion
00001EB2                            ; d1 - Source
00001EB2                            ; d2 - Size
00001EB2                            ; -----------------------------------
00001EB2                            
00001EB2                            DMA_QuickSet:
00001EB2 48E7 0060                  		movem.l	a1-a2,-(sp)
00001EB6 2241                       		move.l	d1,a1
00001EB8 5481                       		addq.l	#2,d1
00001EBA E281                       		asr.l	#1,d1
00001EBC 45F9 00C0 0004             		lea	($C00004).l,a2
00001EC2 34BC 8F02                  		move.w	#$8F02,(a2)
00001EC6                            ; 		move.w	#$8164,d3
00001EC6                            ; 		bset	#4,d3
00001EC6                            ; 		move.w	d3,(a2)
00001EC6 263C 0094 0000             		move.l	#$940000,d3
00001ECC 3602                       		move.w	d2,d3
00001ECE E18B                       		lsl.l	#8,d3
00001ED0 363C 9300                  		move.w	#$9300,d3
00001ED4 1602                       		move.b	d2,d3
00001ED6 2483                       		move.l	d3,(a2)
00001ED8 263C 0096 0000             		move.l	#$960000,d3
00001EDE 3601                       		move.w	d1,d3
00001EE0 E18B                       		lsl.l	#8,d3
00001EE2 363C 9500                  		move.w	#$9500,d3
00001EE6 1601                       		move.b	d1,d3
00001EE8 2483                       		move.l	d3,(a2)
00001EEA 4841                       		swap	d1
00001EEC 363C 9700                  		move.w	#$9700,d3
00001EF0 1601                       		move.b	d1,d3
00001EF2 3483                       		move.w	d3,(a2)
00001EF4 0080 4000 0080             		or.l	#$40000080,d0
00001EFA 4840                       		swap	d0
00001EFC 3480                       		move.w	d0,(a2)
00001EFE 4840                       		swap	d0
00001F00 3F00                       		move.w	d0,-(sp)
00001F02 349F                       		move.w	(sp)+,(a2)
00001F04                            ; 		move.w	#$8164,(a2)
00001F04 0240 FF7F                  		and.w	#$FF7F,d0
00001F08 2480                       		move.l	d0,(a2)
00001F0A 2551 FFFC                  		move.l	(a1),-4(a2)
00001F0E 34BC 8F02                  		move.w	#$8F02,(a2)
00001F12 4CDF 0600                  		movem.l	(sp)+,a1-a2
00001F16 4E75                       		rts
00001F18                            		
00001F18                            		
00001F18                                            include	"engine/ints.asm"
00001F18                            ; ====================================================================
00001F18                            ; -------------------------------------------------
00001F18                            ; VBlank
00001F18                            ; -------------------------------------------------
00001F18                            
00001F18                            MD_Vint:
00001F18 4AB9 FFFF D882             		tst.l	(RAM_VIntAddr)
00001F1E 6700                       		beq.s	@NoVIntEx
00001F20                            		
00001F20 48E7 FFFE                  		movem.l	a0-a6/d0-d7,-(sp)
00001F24 4EB9 FFFF D880             		jsr	(RAM_VIntJumpTo)
00001F2A 4CDF 7FFF                  		movem.l	(sp)+,a0-a6/d0-d7
00001F2E                            @NoVIntEx:
00001F2E 52B9 FFFF D88C             		addq.l	#1,(RAM_FrameCount)
00001F34 08F9 0001 FFFF D890        		bset	#1,(RAM_VIntWait)
00001F3C 08B9 0000 FFFF D890        		bclr	#bitFrameWait,(RAM_VIntWait)
00001F44 4E73                       		rte
00001F46                            
00001F46                            ; ====================================================================
00001F46                            ; -------------------------------------------------
00001F46                            ; HBlank
00001F46                            ; -------------------------------------------------
00001F46                            
00001F46                            MD_Hint:		
00001F46 4EB9 FFFF D886             		jsr	(RAM_HIntJumpTo)
00001F4C 4E73                       		rte
00001F4E                            		
00001F4E                            ; ====================================================================
00001F4E                            ; -------------------------------------------------
00001F4E                            ; Separate routines
00001F4E                            ; -------------------------------------------------
00001F4E                            
00001F4E                            VInt_Default:
00001F4E 6100 F5EA                  		bsr	PalFade
00001F52 6100 0000                  		bsr	SMEG_Upd
00001F56 6100 FBE8                  		bsr	Pads_Read
00001F5A                            ;  		bsr	DMA_Read
00001F5A                             	
00001F5A                            ; -------------------------------------------------
00001F5A                            
00001F5A                            Dma_Visual:
00001F5A                            ; 		move.w	#$100,($A11100)
00001F5A                            ; @WaitZ80:
00001F5A                            ; 		btst	#0,($A11100)
00001F5A                            ;  		bne.s	@WaitZ80
00001F5A                             		
00001F5A                            ; -----------
00001F5A                             
00001F5A 4DF9 00C0 0004             		lea	($C00004),a6
00001F60                            		
00001F60                            ; -----------
00001F60                            ; Palette
00001F60                            ; -----------
00001F60 2CBC 9340 9400              		move.l	#$9400+((($80)&$FF00)>>9)|(($9300+((($80)&$FF)>>1))<<16),(a6)
00001F66 2CBC 9541 96F4              		move.l	#$9600+(((RAM_PalBuffer>>1)&$FF00)>>8)|(($9500+((RAM_PalBuffer>>1)&$FF))<<16),(a6)
00001F6C 3CBC 977F                  		move.w	#$9700+((((RAM_PalBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00001F70 3CBC C000                  		move.w	#$C000,(a6)
00001F74 3F3C 0080                  		move.w	#$0000|$80,-(sp)
00001F78 3C9F                       		move.w	(sp)+,(a6)
00001F7A                            ; -----------
00001F7A                            ; Sprites
00001F7A                            ; -----------
00001F7A 2CBC 9401 9340              		move.l	#(($9400|(((($280)>>1)&$FF00)>>8))<<16)|($9300|((($280)>>1)&$FF)),(a6)
00001F80 2CBC 9501 96F3              		move.l	#$9600+(((RAM_SprBuffer>>1)&$FF00)>>8)|(($9500+((RAM_SprBuffer>>1)&$FF))<<16),(a6)
00001F86 3CBC 977F                  		move.w	#$9700+((((RAM_SprBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00001F8A 3CBC 7800                  		move.w	#$7800,(a6)
00001F8E 3F3C 0083                  		move.w	#$0003|$80,-(sp)
00001F92 3C9F                       		move.w	(sp)+,(a6)
00001F94                            ; -----------	
00001F94                            ; Horizontal
00001F94                            ; -----------
00001F94 2CBC 9401 93E0              		move.l	#(($9400|(((((240*4))>>1)&$FF00)>>8))<<16)|($9300|((((240*4))>>1)&$FF)),(a6)
00001F9A 2CBC 95F9 96F0              		move.l	#$9600+(((RAM_HorBuffer>>1)&$FF00)>>8)|(($9500+((RAM_HorBuffer>>1)&$FF))<<16),(a6)
00001FA0 3CBC 977F                  		move.w	#$9700+((((RAM_HorBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00001FA4 3CBC 7C00                  		move.w	#$7C00,(a6)
00001FA8 3F3C 0083                  		move.w	#$0003|$80,-(sp)
00001FAC 3C9F                       		move.w	(sp)+,(a6)
00001FAE                            	
00001FAE                            ; -----------
00001FAE                            ; Vertical
00001FAE                            ; -----------
00001FAE                            
00001FAE                            ; TODO checar bien esto
00001FAE                            
00001FAE 2CBC 9400 9328              		move.l	#(($9400|((((($50))>>1)&$FF00)>>8))<<16)|($9300|(((($50))>>1)&$FF)),(a6)
00001FB4 2CBC 95D9 96F2              		move.l	#$9600+(((RAM_VerBuffer>>1)&$FF00)>>8)|(($9500+((RAM_VerBuffer>>1)&$FF))<<16),(a6)
00001FBA 3CBC 977F                  		move.w	#$9700+((((RAM_VerBuffer>>1)&$FF0000)>>16)&$7F),(a6)
00001FBE 3CBC 4000                  		move.w	#$4000,(a6)
00001FC2 3F3C 0090                  		move.w	#$0010|$80,-(sp)
00001FC6 3C9F                       		move.w	(sp)+,(a6)
00001FC8                            
00001FC8                            ; 		move.w	#0,($A11100).l
00001FC8                            		
00001FC8                            ; 		lea	(RAM_PalBuffer),a0
00001FC8                            ;  		move.l	#$C0000000,($C00004).l
00001FC8                            ;  		move.w	#$3F,d0
00001FC8                            ; @PalBuf:
00001FC8                            ; 		move.w	(a0)+,($C00000).l
00001FC8                            ;  		dbf	d0,@PalBuf
00001FC8                            ; 
00001FC8                            ; 		lea	(RAM_SprBuffer),a0
00001FC8                            ; 		move.l	#$78000003,($C00004).l
00001FC8                            ; 		move.w	#$9F,d0
00001FC8                            ; @SprBuf:
00001FC8                            ; 		move.l	(a0)+,($C00000).l
00001FC8                            ; 		dbf	d0,@SprBuf
00001FC8                            ; 		
00001FC8                            ; 		lea	(RAM_VerBuffer),a0
00001FC8                            ; 		move.l	#$40000010,($C00004).l
00001FC8                            ; 		move.w	#$F,d0
00001FC8                            ; @VerBuf:
00001FC8                            ; 		move.l	(a0)+,($C00000).l
00001FC8                            ; 		dbf	d0,@VerBuf
00001FC8                            ; 
00001FC8                            ; 		lea	(RAM_HorBuffer),a0
00001FC8                            ; 		move.l	#$7C000003,($C00004).l
00001FC8                            ; 		move.w	#224-1,d0
00001FC8                            ; @HorBuf:
00001FC8                            ; 		move.l	(a0)+,($C00000).l
00001FC8                            ; 		dbf	d0,@HorBuf
00001FC8                            
00001FC8 4E75                       		rts
00001FCA                            
00001FCA                            ; -------------------------------------------------
00001FCA                            
00001FCA                            Hint_Default:
00001FCA 4E75                       		rts
00001FCA 4E75                       		rts
00001FCC                                            
00001FCC                            ; ====================================================================
00001FCC                            ; ---------------------------------------------
00001FCC                            ; Code | Modes
00001FCC                            ; ---------------------------------------------
00001FCC                            
00001FCC                            ; 		include	"engine/modes/level/code.asm"
00001FCC                            		include	"engine/modes/title/code.asm"
00001FCC                            ; =================================================================
00001FCC                            ; Title
00001FCC                            ; =================================================================
00001FCC                            
00001FCC                            ; =================================================================
00001FCC                            ; ------------------------------------------------
00001FCC                            ; Includes
00001FCC                            ; ------------------------------------------------
00001FCC                            
00001FCC                            ; =================================================================
00001FCC                            ; ------------------------------------------------
00001FCC                            ; Variables
00001FCC                            ; ------------------------------------------------
00001FCC                            
00001FCC                            ; =================================================================
00001FCC                            ; ------------------------------------------------
00001FCC                            ; RAM (for RAM_ModeBuffer)
00001FCC                            ; ------------------------------------------------
00001FCC                            
00001FCC                            		rsreset
00001FCC =00000000                  TanValue	rs.w	1
00001FCC =00000002                  SpeedVal	rs.w	1
00001FCC =00000004                  StrchVal	rs.w	1
00001FCC =00000006                  WaveVal		rs.w	1
00001FCC =00000008                  Timer1		rs.w	1
00001FCC =0000000A                  TmpVal_Rot	rs.w	1
00001FCC =0000000C                  TmpVal_Zoom	rs.w	1
00001FCC =0000000E                  PickSong	rs.w	1
00001FCC =00000010                  PickLevel	rs.w	1
00001FCC =00000012                  StrchVer	rs.w	1
00001FCC =00000014                  WavePitch	rs.w	1
00001FCC                            
00001FCC =00000016                  StampX		rs.w	1
00001FCC =00000018                  StampY		rs.w	1
00001FCC =0000001A                  StampXD		rs.w	1
00001FCC =0000001C                  StampYD		rs.w	1
00001FCC =0000001E                  ModelZ		rs.w	1
00001FCC                            
00001FCC                            ; =================================================================
00001FCC                            ; ------------------------------------------------
00001FCC                            ; Init
00001FCC                            ; ------------------------------------------------
00001FCC                            
00001FCC                            mode_Title:
00001FCC 6100 F7EE                  		bsr	Mode_FadeOut
00001FD0                            
00001FD0 46FC 2700                  		move.w	#$2700,sr
00001FD4                            		
00001FD4                            ; -----------------------------------
00001FD4                            ; Cleanup
00001FD4                            ; -----------------------------------
00001FD4                            
00001FD4 6100 F262                  		bsr	Vdp_ClearPlanes
00001FD8 6100 F790                  		bsr	Mode_Cleanup
00001FDC                            		
00001FDC 23FC 0000 1F4E FFFF D882   		move.l	#VInt_Default,(RAM_VIntAddr)
00001FE6 23FC 0000 1FCA FFFF D888   		move.l	#Hint_Default,(RAM_HIntAddr)
00001FF0 41F9 FFFF E902             		lea	(RAM_VdpRegs),a0
00001FF6 117C 0000 000A                 		move.b	#0,vdpReg_HVal(a0)
00001FFC 117C 0081 000C             		move.b	#vdp_H40,vdpReg_HMode(a0)
00002002 117C 0001 0010             		move.b	#1,vdpReg_PlnSize(a0)
00002008 117C 0003 000B             		move.b	#3,vdpReg_Scroll(a0)
0000200E 4228 0012                  		clr.b	vdpReg_WindowY(a0)
00002012                            ; 		if SEGACD=0
00002012                            ; 		if MARS=0
00002012                            ;        		bset	#bit_vdpHint,(a0)
00002012                            ; 		endif
00002012                            ; 		endif
00002012 6100 F490                   		bsr	Vdp_Update
00002016                            
00002016                            ; -----------------------------------
00002016                            ; MD ONLY: show sample picture
00002016                            ; -----------------------------------
00002016                            
00002016 41F9 0000 0000              		lea	(Map_Title),a0
0000201C 7001                        		moveq	#1,d0
0000201E 223C 0000 0000              		move.l	#($0000<<16)|$0000,d1
00002024 243C 0027 001B               		move.l	#((((320)/8)-1)<<16)|(((224)/8)-1),d2
0000202A 363C 0001                   		move.w	#1,d3
0000202E 6100 F3D0                   		bsr	VDP_LoadMaps
00002032 41F9 0000 0000             		lea	(Art_Title),a0
00002038 303C 0001                  		move.w	#1,d0
0000203C 3218                       		move.w	(a0)+,d1
0000203E 6100 F280                  		bsr	VDP_SendData_L
00002042 43F9 FFFF E0F2               		lea	(RAM_PalFadeBuff),a1
00002048 41F9 0000 0000             		lea	(Pal_Title),a0
0000204E 303C 000F                    		move.w	#$F,d0
00002052 6100 F780                    		bsr	LoadData_Word
00002056                            
00002056                            ; -----------------------------------
00002056                            ; Init features	
00002056                            ; -----------------------------------
00002056                              		
00002056 41F9 0000 0000               		lea	(Art_TempFont),a0
0000205C 303C 0580                     		move.w	#$580,d0
00002060 323C 0000                     		move.w	#((Art_TempFont_End-Art_TempFont)/4)-1,d1
00002064 6100 F25A                     		bsr	VDP_SendData_L
00002068                               		
00002068 43F9 FFFF 6880             		lea	(RAM_ModeBuffer),a1
0000206E 337C 0003 0002             		move.w	#3,SpeedVal(a1)
00002074 337C 0004 0004             		move.w	#4,StrchVal(a1)
0000207A 337C 0006 0006             		move.w	#6,WaveVal(a1)
00002080 4269 0010                  		clr.w	PickLevel(a1)
00002084                            		
00002084 33FC 00EE FFFF E136         		move.w	#$0EE,(RAM_PalFadeBuff+$44)
0000208C 33FC 0E00 FFFF E156         		move.w	#$E00,(RAM_PalFadeBuff+$64)
00002094                            ; 		bsr	ScrewBG
00002094                            		
00002094 203C 0000 0000             		move.l	#TestSong_4,d0
0000209A 323C 0001                  		move.w	#2-1,d1
0000209E 6100 0000                  		bsr	SMEG_LoadSong
000020A2                            		
000020A2 6100 0000                   		bsr	LevelNames
000020A6                             		
000020A6                            ; -----------------------------------
000020A6                            
000020A6 33FC FF00 FFFF 6892        		move.w	#$FF00,(RAM_ModeBuffer+StrchVer)
000020AE 4239 FFFF 688E                		clr.b	(RAM_ModeBuffer+PickSong)
000020B4 46FC 2000                  		move.w	#$2000,sr
000020B8 6100 F6F2                   		bsr	Mode_FadeIn
000020BC                            		
000020BC                            ; =================================================================
000020BC                            ; ------------------------------------------------
000020BC                            ; Loop
000020BC                            ; ------------------------------------------------
000020BC                            
000020BC                            Title_Loop:
000020BC 6100 F408                  		bsr	VSync
000020C0                            ; 		bsr	ScrewBG
000020C0                            		
000020C0 43F9 FFFF 6880             		lea	(RAM_ModeBuffer),a1
000020C6                            		
000020C6                            ; ------------------------------------------
000020C6                            ; MD Controls
000020C6                            ; ------------------------------------------
000020C6                            
000020C6                            ; 		else
000020C6                            		
000020C6                            ;    		btst	#bitJoyDown,(RAM_Joypads+OnPress)
000020C6                            ;    		beq.s	@dontscrl_down2
000020C6                            ; 		cmp.w	#$3C-12,WavePitch(a1)
000020C6                            ; 		beq.s	@dontscrl_up2
000020C6                            ; 		sub.w 	#1,WavePitch(a1)
000020C6                            ; 		move.w	WavePitch(a1),d0
000020C6                            ; 		bsr	Z80_SetSmplNote
000020C6                            ;  		bsr	LevelNames
000020C6                            ; @dontscrl_down2:
000020C6                            ; 		btst	#bitJoyUp,(RAM_Joypads+OnPress)
000020C6                            ; 		beq.s	@dontscrl_up2
000020C6                            ; 		cmp.w	#$3C+10,WavePitch(a1)
000020C6                            ; 		beq.s	@dontscrl_up2
000020C6                            ; 		add.w 	#1,WavePitch(a1)
000020C6                            ; 		move.w	WavePitch(a1),d0
000020C6                            ; 		bsr	Z80_SetSmplNote
000020C6 6100 0000                    		bsr	LevelNames
000020CA                            ; @dontscrl_up2:
000020CA                            
000020CA 0839 0004 FFFF D897        		btst	#bitJoyB,(RAM_Joypads+OnPress)
000020D2 6700                       		beq.s	@NotVdpHor
000020D4 0879 0000 FFFF E90E        		bchg	#0,(RAM_VdpRegs+vdpReg_HMode)
000020DC 0879 0007 FFFF E90E        		bchg	#7,(RAM_VdpRegs+vdpReg_HMode)
000020E4 6100 F3BE                  		bsr	Vdp_Update
000020E8                            @NotVdpHor:
000020E8                            
000020E8                            ;  		moveq	#0,d0
000020E8                            ;  		move.l	#($0000<<16)|$0000,d1
000020E8                            ;   		move.l	#$560+"0",d2
000020E8                            ;  		move.w	StrchVer(a1),d3
000020E8                            ;  		bsr	Vdp_ShowVal_W
000020E8                            		
000020E8                            ; ------------------------------------------
000020E8                            
000020E8                            ; 		endif
000020E8                            		
000020E8                            ; 		btst	#bitJoyStart,(RAM_Joypads+OnPress)
000020E8                            ; 		beq.s	@NotStart
000020E8                            ; 		
000020E8                            ; ; 		if MARS=0
000020E8                            ; ; 		if SegaCD=0
000020E8                            ; ; 		jmp	MD_AddrError
000020E8                            ; ; 		endif
000020E8                            ; ; 		endif
000020E8                            ; 		
000020E8                            ; 		bra	Title_LoadLevel
000020E8                            ; @NotStart:
000020E8 6000 FFD2                  		bra	Title_Loop
000020EC                                            
000020EC                            ; =================================================================
000020EC                            ; ------------------------------------------------
000020EC                            ; Hblank
000020EC                            ; ------------------------------------------------
000020EC                            	
000020EC                            HInt_Title:
000020EC 48E7 C000                  		movem.l	d0-d1,-(sp)
000020F0                            		
000020F0 23FC 4000 0010 00C0 0004   		move.l	#$40000010,($C00004).l
000020FA 33FC 0000 00C0 0000        		move.w	#0,($C00000).l
00002102 2039 FFFF E5B2             		move.l	(RAM_VerBuffer),d0
00002108 4840                       		swap	d0
0000210A 4880                       		ext.w	d0
0000210C 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
00002112 E249                          		lsr.w	#1,d1
00002114 9041                        		sub.w	d1,d0
00002116 33C0 00C0 0000             		move.w	d0,($C00000).l
0000211C                            		
0000211C 7200                        		moveq	#0,d1
0000211E 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
00002124 E189                         		lsl.l	#8,d1
00002126 D3B9 FFFF E5B2              		add.l	d1,(RAM_VerBuffer)
0000212C                            		
0000212C 4CDF 0003                  		movem.l	(sp)+,d0-d1
00002130                            @holdon:
00002130 4E75                       		rts
00002132                            		
00002132                            ; =================================================================
00002132                            ; ------------------------------------------------
00002132                            ; VBlank
00002132                            ; ------------------------------------------------
00002132                            
00002132                            Vint_Title:
00002132 23FC 4000 0010 00C0 0004   		move.l	#$40000010,($C00004).l
0000213C 23FC 0000 0000 00C0 0000   		move.l	#0,($C00000).l
00002146 2039 FFFF E5B2             		move.l	(RAM_VerBuffer),d0
0000214C 4840                       		swap	d0
0000214E 4880                       		ext.w	d0
00002150 3239 FFFF 6892               		move.w	(RAM_ModeBuffer+StrchVer),d1
00002156 E249                          		lsr.w	#1,d1
00002158 9041                        		sub.w	d1,d0
0000215A 33C0 00C0 0000             		move.w	d0,($C00000).l
00002160 42B9 FFFF E5B2             		clr.l	(RAM_VerBuffer)
00002166                            
00002166 6100 0000                  		bsr	SMEG_Upd
0000216A 6100 F3CE                  		bsr	PalFade
0000216E 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
00002176                            @WaitZ80:
00002176 0839 0000 00A1 1100        		btst	#0,($A11100).l
0000217E 66F6                       		bne.s	@WaitZ80
00002180 6100 F9BE                  		bsr	Pads_Read
00002184 6100 FC72                   		bsr	DMA_Read
00002188 33FC 0000 00A1 1100         		move.w	#0,($A11100).l
00002190                            
00002190 6000 FDC8                   		bra	Dma_Visual
00002194 4E75                       		rts
00002196                            		
00002196                            ; =================================================================
00002196                            ; ------------------------------------------------
00002196                            ; Subs
00002196                            ; ------------------------------------------------
00002196                            
00002196                            ; ---------------------------
00002196                            ; Screw the bg
00002196                            ; ---------------------------
00002196                            
00002196                            ScrewBG:
00002196 7000                       		moveq	#0,d0
00002198 3029 0000                  		move.w	TanValue(a1),d0
0000219C 6100 F660                  		bsr	CalcSine
000021A0 3229 0006                  		move.w	WaveVal(a1),d1
000021A4 E260                         		asr.w	d1,d0
000021A6                             		
000021A6 41F9 FFFF E1F2             		lea	(RAM_HorBuffer),a0
000021AC 3C3C 00DF                  		move.w	#(224)-1,d6
000021B0                            		
000021B0 3629 0000                  		move.w	TanValue(a1),d3
000021B4 3803                       		move.w	d3,d4
000021B6 0644 0080                  		add.w	#$80,d4
000021BA 7A00                       		moveq	#0,d5
000021BC                            		
000021BC                            @next_line:
000021BC                            ; 		move.w	d0,d2
000021BC                            ; 		
000021BC                            ; 		move.w	d5,(a0)
000021BC                            ; 		move.w	d4,d0
000021BC                            ; 		bsr	CalcSine
000021BC                            ; 		move.w	d0,d5
000021BC                            ;  		asr.w	#5,d5
000021BC                            ;  		
000021BC                            ;  		move.w	d2,d0
000021BC                             		
000021BC 3140 0002                  		move.w	d0,2(a0)
000021C0 3003                       		move.w	d3,d0
000021C2 6100 F63A                  		bsr	CalcSine
000021C6 3229 0006                  		move.w	WaveVal(a1),d1
000021CA E260                        		asr.w	d1,d0
000021CC                            
000021CC D669 0004                  		add.w	StrchVal(a1),d3
000021D0 0644 0001                  		add.w	#1,d4
000021D4                            		
000021D4 D0FC 0004                  		adda	#4,a0
000021D8 51CE FFE2                  		dbf	d6,@next_line
000021DC                            		
000021DC 3029 0002                  		move.w	SpeedVal(a1),d0
000021E0 D169 0000                  		add.w	d0,TanValue(a1)
000021E4                            		
000021E4                            ; 		lea	(RAM_VerBuffer),a0
000021E4                            ; 		moveq	#0,d1
000021E4                            ; 		move.w	Timer1(a1),d1
000021E4                            ; ; 		swap	d1
000021E4                            ; 		clr.l	(a0)+
000021E4                            ; 		move.w	d1,d0
000021E4                            ; 		lsr.w	#2,d0
000021E4                            ; 		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+		
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		
000021E4                            ; 		move.w	d1,d0
000021E4                            ; 		lsr.w	#3,d0	
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		
000021E4                            ; 		move.w	d1,d0
000021E4                            ; 		lsr.w	#2,d0	
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		
000021E4                            ; 		move.w	d1,d0
000021E4                            ; 		lsr.w	#4,d0	
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  	
000021E4                            ; 		move.w	d1,d0
000021E4                            ; 		lsr.w	#3,d0	
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  	
000021E4                            ; 		move.w	d1,d0
000021E4                            ; 		lsr.w	#2,d0	
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                            ;  		move.l	d0,(a0)+
000021E4                             		
000021E4 0669 0001 0008             		add.w	#1,Timer1(a1)
000021EA 4E75                       		rts
000021EC                            
000021EC                            ; ---------------------------
000021EC                            ; Show the level names
000021EC                            ; ---------------------------
000021EC                            
000021EC                            LevelNames:
000021EC 49F9 0000 0000             		lea	(RAM_SMEG_Chnls_BGM),a4
000021F2 383C C112                  		move.w	#$C000+($80*2)+($02*9),d4
000021F6 7605                        		moveq	#6-1,d3
000021F8 6100 0000                  		bsr	@channels
000021FC                            
000021FC 383C C612                  		move.w	#$C000+($80*12)+($02*9),d4
00002200 7603                        		moveq	#4-1,d3
00002202 6100 0000                  		bsr	@channels
00002206                            
00002206 383C CA92                  		move.w	#$C000+($80*21)+($02*9),d4
0000220A 7603                        		moveq	#4-1,d3
0000220C 6100 0000                  		bsr	@channels
00002210 383C CAAE                  		move.w	#$C000+($80*21)+($02*23),d4
00002214 7603                        		moveq	#4-1,d3
00002216 6100 0000                  		bsr	@channels
0000221A                            		
0000221A 4E75                       		rts
0000221C                            		
0000221C                            @channels:
0000221C                            
0000221C                            @next_y:
0000221C 3004                       		move.w	d4,d0
0000221E 6100 F0B8                  		bsr	VDP_VramToCmd
00002222 23C0 00C0 0004             		move.l	d0,($C00004).l
00002228 45FA 0000                  		lea	LevelNamesAsc(pc),a2
0000222C                            		
0000222C 7A00                       		moveq	#0,d5
0000222E 1A2C 0000                    		move.b	chn_note(a4),d5
00002232 4A05                         		tst.b	d5
00002234 6B00                         		bmi.s	@next_x
00002236 0245 007F                    		and.w	#$7F,d5
0000223A E54D                         		lsl.w	#2,d5
0000223C 45FA 0000                  		lea	LevelNamesAsc+4(pc),a2
00002240 D4C5                          		adda	d5,a2
00002242                            @next_x:
00002242 303C 4000                   		move.w	#$4000,d0
00002246 0C2C 0000 0000              		cmp.b	#FM_6,chn_id(a4)
0000224C 6700                        		beq.s	@same
0000224E 0C2C 0000 0000              		cmp.b	#NOISE,chn_id(a4)
00002254 6700                        		beq.s	@same
00002256 303C 6000                   		move.w	#$6000,d0
0000225A                            @same:
0000225A 7400                       		moveq	#0,d2
0000225C 141A                       		move.b	(a2)+,d2
0000225E 6700                       		beq.s	@jump
00002260 0642 0560                  		add.w	#$560,d2
00002264 D440                       		add.w	d0,d2
00002266 33C2 00C0 0000             		move.w	d2,($C00000).l
0000226C 60D4                       		bra.s	@next_x
0000226E                            @jump:
0000226E 142C 0000                  		move.b	Chn_Inst(a4),d2
00002272 6100 0000                  		bsr	@MiniVal
00002276 142C 0000                  		move.b	Chn_Vol(a4),d2
0000227A 6100 0000                  		bsr	@MiniVal
0000227E 142C 0000                  		move.b	Chn_Panning(a4),d2
00002282 6100 0000                  		bsr	@MiniVal		
00002286                            		
00002286 0645 0001                  		add.w	#1,d5
0000228A 0644 0080                  		add.w	#($80*1),d4
0000228E D8FC 0000                  		adda	#sizeof_chn,a4
00002292 51CB FF88                   		dbf	d3,@next_y
00002296 4E75                       		rts
00002298                            
00002298                            @MiniVal:
00002298 0242 00FF                  		and.w	#$FF,d2
0000229C 33FC 0000 00C0 0000        		move.w	#0,($C00000).l
000022A4 3202                       		move.w	d2,d1
000022A6 E849                       		lsr.w	#4,d1
000022A8 0241 000F                  		and.w	#$F,d1
000022AC 0C41 000A                  		cmp.w	#$A,d1
000022B0 6D00                       		blt.s	@lowAl
000022B2 0641 0007                  		add.w	#7,d1
000022B6                            @lowAl:
000022B6 0641 0590                  		add.w	#$560+"0",d1
000022BA D240                       		add.w	d0,d1
000022BC 33C1 00C0 0000             		move.w	d1,($C00000).l
000022C2                            
000022C2 3202                       		move.w	d2,d1
000022C4 0241 000F                  		and.w	#$F,d1
000022C8 0C41 000A                  		cmp.w	#$A,d1
000022CC 6D00                       		blt.s	@lowAr
000022CE 0641 0007                  		add.w	#7,d1
000022D2                            @lowAr:
000022D2 0641 0590                  		add.w	#$560+"0",d1
000022D6 D240                       		add.w	d0,d1
000022D8 33C1 00C0 0000             		move.w	d1,($C00000).l
000022DE 4E75                       		rts
000022E0                            		
000022E0                            ; ---------------------------
000022E0                            ; Load level
000022E0                            ; ---------------------------
000022E0                            
000022E0                            Title_LoadLevel:
000022E0 33E9 0010 FFFF 6800        		move.w	PickLevel(a1),(RAM_SharedBuffer)
000022E8                            		
000022E8                            		
000022E8 6100 F4D2                  		bsr	Mode_FadeOut
000022EC 13FC 0001 FFFF D891         		move.b	#1,(RAM_GameMode)
000022F4 4E75                       		rts
000022F6                            	
000022F6                            ; ---------------------------
000022F6                            ; SEGA CD: transfer stamp
000022F6                            ; data
000022F6                            ; ---------------------------
000022F6                            
000022F6                            ShowStamps:
000022F6 4E75                       		rts
000022F8                            	
000022F8                            ; -------------------
000022F8                            
000022F8                            Stamps_AutoMap:
000022F8 741F                       		moveq	#$1F,d2
000022FA                            @NextLine:
000022FA 2800                       		move.l	d0,d4
000022FC 3A01                       		move.w	d1,d5
000022FE 363C 001B                  		move.w	#((256*224)>>$B)-1,d3
00002302                            @Next:
00002302 23C4 00C0 0004             		move.l	d4,($C00004).l
00002308 33C5 00C0 0000             		move.w	d5,($C00000).l
0000230E 0684 0080 0000             		add.l	#$800000,d4
00002314 0645 0001                  		add.w	#$0001,d5
00002318 51CB FFE8                  		dbf	d3,@Next
0000231C                            		
0000231C 0641 001C                  		add.w	#((256*224)>>$B),d1
00002320 0680 0002 0000             		add.l	#$20000,d0
00002326 51CA FFD2                  		dbf	d2,@NextLine
0000232A 4E75                       		rts
0000232C                            		
0000232C                            ; ------------------------------------------------
0000232C                            ; Render MARS Stuff
0000232C                            ; ------------------------------------------------
0000232C                            
0000232C                            MARS_ModelRender:
0000232C                            
0000232C                            ; -----------------------------------
0000232C                            
0000232C 4E75                       		rts
0000232E                            		
0000232E                            ; =================================================================
0000232E                            ; ------------------------------------------------
0000232E                            ; Data
0000232E                            ; ------------------------------------------------
0000232E                            		
0000232E                            LevelNamesAsc:
0000232E 3D3D 3D00                  		dc.b "===",0
00002332                            		
00002332 3D3D 3D00                  		dc.b "===",0
00002336 4323 3000                  		dc.b "C#0",0
0000233A 442D 3000                  		dc.b "D-0",0
0000233E 4423 3000                  		dc.b "D#0",0
00002342 452D 3000                  		dc.b "E-0",0
00002346 462D 3000                  		dc.b "F-0",0
0000234A 4623 3000                  		dc.b "F#0",0
0000234E 472D 3000                  		dc.b "G-0",0
00002352 4723 3000                  		dc.b "G#0",0
00002356 412D 3000                  		dc.b "A-0",0
0000235A 4123 3000                  		dc.b "A#0",0		
0000235E 422D 3000                  		dc.b "B-0",0
00002362                            		
00002362 432D 3100                  		dc.b "C-1",0
00002366 4323 3100                  		dc.b "C#1",0
0000236A 442D 3100                  		dc.b "D-1",0
0000236E 4423 3100                  		dc.b "D#1",0
00002372 452D 3100                  		dc.b "E-1",0
00002376 462D 3100                  		dc.b "F-1",0
0000237A 4623 3100                  		dc.b "F#1",0
0000237E 472D 3100                  		dc.b "G-1",0
00002382 4723 3100                  		dc.b "G#1",0
00002386 412D 3100                  		dc.b "A-1",0
0000238A 4123 3100                  		dc.b "A#1",0		
0000238E 422D 3100                  		dc.b "B-1",0
00002392                            		
00002392 432D 3200                  		dc.b "C-2",0
00002396 4323 3200                  		dc.b "C#2",0
0000239A 442D 3200                  		dc.b "D-2",0
0000239E 4423 3200                  		dc.b "D#2",0
000023A2 452D 3200                  		dc.b "E-2",0
000023A6 462D 3200                  		dc.b "F-2",0
000023AA 4623 3200                  		dc.b "F#2",0
000023AE 472D 3200                  		dc.b "G-2",0
000023B2 4723 3200                  		dc.b "G#2",0
000023B6 412D 3200                  		dc.b "A-2",0
000023BA 4123 3200                  		dc.b "A#2",0		
000023BE 422D 3200                  		dc.b "B-2",0
000023C2                            		
000023C2 432D 3300                  		dc.b "C-3",0
000023C6 4323 3300                  		dc.b "C#3",0
000023CA 442D 3300                  		dc.b "D-3",0
000023CE 4423 3300                  		dc.b "D#3",0
000023D2 452D 3300                  		dc.b "E-3",0
000023D6 462D 3300                  		dc.b "F-3",0
000023DA 4623 3300                  		dc.b "F#3",0
000023DE 472D 3300                  		dc.b "G-3",0
000023E2 4723 3300                  		dc.b "G#3",0
000023E6 412D 3300                  		dc.b "A-3",0
000023EA 4123 3300                  		dc.b "A#3",0		
000023EE 422D 3300                  		dc.b "B-3",0
000023F2                            		
000023F2 432D 3400                  		dc.b "C-4",0
000023F6 4323 3400                  		dc.b "C#4",0
000023FA 442D 3400                  		dc.b "D-4",0
000023FE 4423 3400                  		dc.b "D#4",0
00002402 452D 3400                  		dc.b "E-4",0
00002406 462D 3400                  		dc.b "F-4",0
0000240A 4623 3400                  		dc.b "F#4",0
0000240E 472D 3400                  		dc.b "G-4",0
00002412 4723 3400                  		dc.b "G#4",0
00002416 412D 3400                  		dc.b "A-4",0
0000241A 4123 3400                  		dc.b "A#4",0		
0000241E 422D 3400                  		dc.b "B-4",0
00002422                            		
00002422 432D 3500                  		dc.b "C-5",0
00002426 4323 3500                  		dc.b "C#5",0
0000242A 442D 3500                  		dc.b "D-5",0
0000242E 4423 3500                  		dc.b "D#5",0
00002432 452D 3500                  		dc.b "E-5",0
00002436 462D 3500                  		dc.b "F-5",0
0000243A 4623 3500                  		dc.b "F#5",0
0000243E 472D 3500                  		dc.b "G-5",0
00002442 4723 3500                  		dc.b "G#5",0
00002446 412D 3500                  		dc.b "A-5",0
0000244A 4123 3500                  		dc.b "A#5",0		
0000244E 422D 3500                  		dc.b "B-5",0
00002452                            
00002452 432D 3600                  		dc.b "C-6",0
00002456 4323 3600                  		dc.b "C#6",0
0000245A 442D 3600                  		dc.b "D-6",0
0000245E 4423 3600                  		dc.b "D#6",0
00002462 452D 3600                  		dc.b "E-6",0
00002466 462D 3600                  		dc.b "F-6",0
0000246A 4623 3600                  		dc.b "F#6",0
0000246E 472D 3600                  		dc.b "G-6",0
00002472 4723 3600                  		dc.b "G#6",0
00002476 412D 3600                  		dc.b "A-6",0
0000247A 4123 3600                  		dc.b "A#6",0		
0000247E 422D 3600                  		dc.b "B-6",0
00002482                            
00002482 432D 3700                  		dc.b "C-7",0
00002486 4323 3700                  		dc.b "C#7",0
0000248A 442D 3700                  		dc.b "D-7",0
0000248E 4423 3700                  		dc.b "D#7",0
00002492 452D 3700                  		dc.b "E-7",0
00002496 462D 3700                  		dc.b "F-7",0
0000249A 4623 3700                  		dc.b "F#7",0
0000249E 472D 3700                  		dc.b "G-7",0
000024A2 4723 3700                  		dc.b "G#7",0
000024A6 412D 3700                  		dc.b "A-7",0
000024AA 4123 3700                  		dc.b "A#7",0		
000024AE 422D 3700                  		dc.b "B-7",0
000024B2                            
000024B2 432D 3800                  		dc.b "C-8",0
000024B6 4323 3800                  		dc.b "C#8",0
000024BA 442D 3800                  		dc.b "D-8",0
000024BE 4423 3800                  		dc.b "D#8",0
000024C2 452D 3800                  		dc.b "E-8",0
000024C6 462D 3800                  		dc.b "F-8",0
000024CA 4623 3800                  		dc.b "F#8",0
000024CE 472D 3800                  		dc.b "G-8",0
000024D2 4723 3800                  		dc.b "G#8",0
000024D6 412D 3800                  		dc.b "A-8",0
000024DA 4123 3800                  		dc.b "A#8",0		
000024DE 422D 3800                  		dc.b "B-8",0
000024E2                            		
000024E2                            		even
000024E2                            		
000024E2                            		
000024E2                            		
000024E2                            ; ---------------------------------------------
000024E2                            ; Code | Sound
000024E2                            ; ---------------------------------------------
000024E2                            
000024E2                            		include	"engine/sound/code.asm"
000024E2                            ; ================================================================
000024E2                            ; SMEG
000024E2                            ; Sound and Music Engine for Genesis (also SegaCD* and 32X**)
000024E2                            ;
000024E2                            ; (C)2013-2016 GF64
000024E2                            ; 
000024E2                            ; Reads patterns from a ImpulseTracker file (.it)
000024E2                            ;
000024E2                            ; Ticks:
000024E2                            ; 150 - NTSC
000024E2                            ; 120 - PAL
000024E2                            ;
000024E2                            ; uses assembler settings:
000024E2                            ; SegaCD     - for building to SegaCD (All the driver must be aligned
000024E2                            ;              to WordRAM or PRG-RAM)
000024E2                            ; MARS       - for building to 32x (CODE and
000024E2                            ;              DATA(Music/Sfx/Voices/Z80 samples) must be aligned to
000024E2                            ;              the 32x standards, uses bank 0 only,
000024E2                            ;              PWM Samples can be anywhere in ROM)
000024E2                            ; SMEG_Z80   - Use Z80, set to 0 while running from PRGRAM
000024E2                            ;                 
000024E2                            ; Limtations:
000024E2                            ; (Driver) - Effects: only volume and panning (Xxx) works
000024E2                            ; 
000024E2                            ; (SegaCD) - You cant use Z80 samples if your program is running
000024E2                            ;            on PRG-RAM (Z80 cant access RAM), if your program is
000024E2                            ;            running on WORD-RAM, set the permission to
000024E2                            ;            MainCPU (2M Mode) (not recommended)
000024E2                            ;            
000024E2                            ; * requires respective SubCPU code
000024E2                            ; ** requires respective SH2 code
000024E2                            ; ================================================================
000024E2                            
000024E2                            			rsreset
000024E2 =00000000                  DrvStatus		rs.b 1		;Byte
000024E2 =00000001                  DrvSettings		rs.b 1		;Byte
000024E2 =00000002                  PatternEnd		rs.b 1		;Byte
000024E2 =00000003                  PatternLoop		rs.b 1		;Byte
000024E2 =00000004                  AddrBackup		rs.l 1		;Long
000024E2 =00000008                  SongRequest		rs.l 1 		;Long
000024E2 =0000000C                  SongStart		rs.l 1		;Long
000024E2 =00000010                  SongRead		rs.l 1		;Long
000024E2 =00000014                  SongVoices		rs.l 1		;Long
000024E2 =00000018                  SongSampl		rs.l 1		;Long
000024E2 =0000001C                  SongPcmSamp		rs.l 1		;Long
000024E2 =00000020                  TicksRequest		rs.w 1		;Word
000024E2 =00000022                  TicksRead		rs.w 1		;Word
000024E2 =00000024                  TicksSet		rs.w 1		;Word
000024E2 =00000026                  TempoRead 		rs.w 1		;Word
000024E2 =00000028                  PattSize		rs.w 1		;Word
000024E2 =0000002A                  PattRead		rs.w 1		;Word
000024E2 =0000002C                  CdOnlyFlags		rs.w 1		;Word
000024E2 =0000002E                  CurrPattern		rs.b 1		;Byte
000024E2 =0000002F                  PcmChnOnOff		rs.b 1		;Byte
000024E2 =00000030                  PsgLast			rs.b 1		;Byte
000024E2 =00000031                  DrvSettingsBGM		rs.b 1		;Byte
000024E2 =00000032                  LastPattChn		rs.b 1		;Byte
000024E2 =00000033                  Psg_Vibrato		rs.b 1		;Byte
000024E2 =00000034                  Psg_AutoVol		rs.b 1		;Byte
000024E2 =00000036                  sizeof_SndBuff		rs.l 0
000024E2                            
000024E2                            ; --------------------------------------------
000024E2                            ; Channel settings
000024E2                            ; --------------------------------------------
000024E2                            
000024E2                            			rsreset
000024E2 =00000000                  Chn_Freq		rs.w 1		;Word
000024E2 =00000002                  Chn_Effect		rs.w 1		;Word
000024E2 =00000004                  Chn_Portam		rs.w 1		;Word
000024E2 =00000006                  Chn_Type		rs.b 1		;Byte
000024E2 =00000007                  Chn_ID			rs.b 1		;Byte
000024E2 =00000008                  Chn_Inst		rs.b 1		;Byte
000024E2 =00000009                  Chn_Vol			rs.b 1		;Byte
000024E2 =0000000A                  Chn_DefVol		rs.b 1		;Byte
000024E2 =0000000B                  Chn_Note		rs.b 1		;Byte
000024E2 =0000000C                  Chn_Panning		rs.b 1		;Byte
000024E2 =0000000D                  Chn_FM_Key		rs.b 1		;Byte
000024E2 =0000000E                  Chn_PCM_Pitch		rs.b 1		;Byte
000024E2 =0000000F                  Chn_PSG_Vibrato		rs.b 1		;Byte
000024E2 =00000010                  sizeof_Chn		rs.l 0
000024E2                             
000024E2                            ; --------------------------------------------
000024E2                            ; Bits
000024E2                            ; --------------------------------------------
000024E2                            
000024E2 =00000000                  bitPriority		equ	0
000024E2 =00000001                  bitSfxOn		equ	1
000024E2 =00000002                  bitDisabled		equ	2
000024E2                            
000024E2                            ;Status
000024E2 =00000000                  bitDacOn		equ	0
000024E2 =00000001                  bitDacNote		equ	1
000024E2 =00000002                  bitTone3		equ	2
000024E2 =00000003                  bitSpecial3		equ	3
000024E2                            
000024E2                            ; --------------------------------------------
000024E2                            ; Channel IDs
000024E2                            ; --------------------------------------------
000024E2                            
000024E2 =00000000                  FM_1			equ	$00
000024E2 =00000001                  FM_2			equ	$01
000024E2 =00000002                  FM_3			equ	$02
000024E2 =00000004                  FM_4			equ	$04
000024E2 =00000005                  FM_5			equ	$05
000024E2 =00000006                  FM_6			equ	$06
000024E2 =00000080                  PSG_1			equ	$80
000024E2 =000000A0                  PSG_2			equ	$A0
000024E2 =000000C0                  PSG_3			equ	$C0
000024E2 =000000E0                  NOISE			equ	$E0
000024E2 =00000010                  PCM_1			equ	$10
000024E2 =00000011                  PCM_2			equ	$11
000024E2 =00000012                  PCM_3			equ	$12
000024E2 =00000013                  PCM_4			equ	$13
000024E2 =00000014                  PCM_5			equ	$14
000024E2 =00000015                  PCM_6			equ	$15
000024E2 =00000016                  PCM_7			equ	$16
000024E2 =00000017                  PCM_8			equ	$17
000024E2 =00000012                  MaxChannels		equ	18
000024E2                            
000024E2                            ; --------------------------------------------
000024E2                            ; .IT request ($80+) format
000024E2                            ; --------------------------------------------
000024E2                            
000024E2 =00000000                  bitNote			equ	0
000024E2 =00000001                  bitInst			equ	1
000024E2 =00000002                  bitVolume		equ	2
000024E2 =00000003                  bitEffect		equ	3
000024E2 =00000004                  bitSameNote		equ	4
000024E2 =00000005                  bitSameInst		equ	5
000024E2 =00000006                  bitSameVol		equ	6
000024E2 =00000007                  bitSameEffect		equ	7
000024E2                            
000024E2                            ; --------------------------------------------
000024E2                            ; RAM
000024E2                            ; 
000024E2                            ; MAX: $400
000024E2                            ; --------------------------------------------
000024E2                            
000024E2                            			rsset RAM_SndDriver
000024E2 =FFFFD8E2                  RAM_SMEG_Buffer		rs.b sizeof_SndBuff
000024E2 =FFFFD918                  RAM_SMEG_SfxBuff	rs.b sizeof_SndBuff
000024E2 =FFFFD94E                  RAM_SMEG_PrioList	rs.b MaxChannels
000024E2 =FFFFD960                  RAM_SMEG_Chnls_BGM	rs.b $10*MaxChannels
000024E2 =FFFFDA80                  RAM_SMEG_Chnls_SFX	rs.b $10*MaxChannels
000024E2                            			
000024E2 =FFFFDBA0                  sizeof_SMEG		rs.l 0
000024E2                            ;     			inform 0,"SMEG Used: %h",sizeof_SMEG-RAM_SndDriver
000024E2                            			
000024E2                            ; ================================================================
000024E2                            ; -------------------------------------------
000024E2                            ; Macros
000024E2                            ; -------------------------------------------
000024E2                            
000024E2                            Z80_OFF		macro
000024E2                            		move.w	#$100,($A11100).l
000024E2                            @WaitZ80\@:
000024E2                            		btst	#0,($A11100).l
000024E2                            		bne.s	@WaitZ80\@
000024E2                            		endm
000024E2                            
000024E2                            ; -----------------------------------------
000024E2                            
000024E2                            Z80_ON		macro
000024E2                            		move.b	#$2A,($A04000).l
000024E2                            		move.w	#0,($A11100).l
000024E2                            		endm
000024E2                            
000024E2                            ; -----------------------------------------
000024E2                            
000024E2                            PCM_Entry	macro	cd_side,mars_side,loop,pitch
000024E2                            		
000024E2                            cdsize_size	= strlen(\cd_side)
000024E2                            
000024E2                            		if SegaCD
000024E2                            		  if cdsize_size>$C
000024E2                            		    inform 2,"(SMEG) CD FILENAME TOO LONG"
000024E2                            		  elseif cdsize_size=$C
000024E2                            		    dc.b \cd_side
000024E2                            		  elseif cdsize_size<$C
000024E2                            		    dc.b \cd_side
000024E2                            		    rept $C-cdsize_size
000024E2                            		      dc.b 0
000024E2                            		    endr
000024E2                            		  elseif cdsize_size<=0
000024E2                            		    inform 2,"(SMEG) YOU FORGOT THE CD FILENAME"
000024E2                            		  endif
000024E2                            		  
000024E2                            		elseif MARS
000024E2                            		  dc.l mars_side
000024E2                            		endif
000024E2                            		
000024E2                            		dc.w loop
000024E2                            		dc.w pitch
000024E2                            		endm
000024E2                            
000024E2                            ; 		inform 0,"%h",RAM_SMEG_PcmList
000024E2                            
000024E2                            ; ================================================================
000024E2                            ; -------------------------------------------
000024E2                            ; External Calls
000024E2                            ; -------------------------------------------
000024E2                            
000024E2                            ;SegaPCM
000024E2 =00000020                  CdTask_LoadPcm		equ	$20
000024E2 =00000021                  CdTask_SetAddr		equ	$21
000024E2 =00000022                  CdTask_SetFreq		equ	$22
000024E2 =00000023                  CdTask_SetPan		equ	$23
000024E2 =00000024                  CdTask_SetEnv		equ	$24
000024E2 =00000025                  CdTask_SetOnOff		equ	$25
000024E2 =00000026                  CdTask_ClearAllPcm	equ	$26
000024E2                            
000024E2                            ;MARS
000024E2 =00000001                  marscall_Play		equ	1
000024E2 =00000002                  marscall_Stop		equ	2
000024E2 =00000003                  marscall_SetSmpl	equ	3
000024E2 =00000004                  marscall_SetVol		equ	4
000024E2 =00000005                  marscall_SetEntry	equ	5
000024E2                            	
000024E2                            ; ================================================================
000024E2                            ; -------------------------------------------
000024E2                            ; Init
000024E2                            ; -------------------------------------------
000024E2                            
000024E2                            SMEG_Init:
000024E2 41F9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a0
000024E8 303C 02FF                  		move.w	#$2FF,d0
000024EC                            @ClrAll:
000024EC 4298                       		clr.l	(a0)+
000024EE 51C8 FFFC                  		dbf	d0,@ClrAll
000024F2                            
000024F2                            ; -------------------------------------------
000024F2                            ; Z80
000024F2                            ; -------------------------------------------
000024F2                            
000024F2                            SMEG_Z80_Init:
000024F2 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
000024FA 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
00002502                            @WaitZ80:
00002502 0839 0000 00A1 1100        		btst	#0,($A11100).l
0000250A 66F6                       		bne.s	@WaitZ80
0000250C                            
0000250C 41F9 00A0 0000             		lea	($A00000).l,a0
00002512 303C 1FFF                  		move.w	#$1FFF,d0
00002516                            @cleanup:
00002516 4218                       		clr.b	(a0)+
00002518 51C8 FFFC                  		dbf	d0,@cleanup
0000251C                            		
0000251C 41FA 0000                  		lea	Z80_Driver(pc),a0
00002520 43F9 00A0 0000             		lea	($A00000).l,a1
00002526 323C 0000                  		move.w	#Z80_DriverEnd-Z80_Driver,d1
0000252A                            @ToZ80:
0000252A 12D8                       		move.b	(a0)+,(a1)+
0000252C 51C9 FFFC                  		dbf	d1,@ToZ80
00002530                            
00002530                            ; -----------------------------------
00002530                            
00002530 33FC 0000 00A1 1200        		move.w	#0,($A11200).l
00002538 4E71                       		nop
0000253A 4E71                       		nop
0000253C 4E71                       		nop
0000253E 4E71                       		nop
00002540 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
00002548 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00002550                            ; 		rts
00002550                            		
00002550                            ; -------------------------------------------
00002550                            ; Stop ALL Sound
00002550                            ; -------------------------------------------
00002550                            
00002550                            SMEG_StopSnd:
00002550 103C 002B                  		move.b	#$2B,d0
00002554 123C 0000                  		move.b	#$00,d1
00002558 33FC 0100 00A1 1100 0839+  		Z80_OFF
0000256A 13FC 0000 00A0 01ED        		move.b	#0,($A001E0+$D)
00002572 6100 0000                  		bsr	FM_RegWrite_1
00002576 13FC 002A 00A0 4000 33FC+  		Z80_ON
00002586                            		
00002586 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
0000258C 08D6 0002                  		bset	#bitDisabled,(a6)
00002590                            	
00002590 6100 0000                  		bsr	SMEG_FM_Reset
00002594 6100 0000                   		bsr	SMEG_PSG_Reset
00002598 6000 0000                  		bra	SMEG_PCM_Reset
0000259C                            		
0000259C                            ; -------------------------------------------
0000259C                            ; Play Song
0000259C                            ; -------------------------------------------
0000259C                            
0000259C                            SMEG_PlaySong:
0000259C 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
000025A2 0896 0002                  		bclr	#bitDisabled,(a6)
000025A6 4E75                       		rts
000025A8                            		
000025A8                            ; -------------------------------------------
000025A8                            ; Load SFX
000025A8                            ;
000025A8                            ; d0 - StartOfSong
000025A8                            ; d1 - Ticks
000025A8                            ; -------------------------------------------
000025A8                            
000025A8                            SMEG_LoadSfx:
000025A8 23C0 FFFF D920             		move.l	d0,(RAM_SMEG_SfxBuff+SongRequest)
000025AE 33C1 FFFF D938             		move.w	d1,(RAM_SMEG_SfxBuff+TicksRequest)
000025B4 4E75                       		rts
000025B6                            
000025B6                            ; -------------------------------------------
000025B6                            ; Load Song
000025B6                            ;
000025B6                            ; d0 - StartOfSong
000025B6                            ; d1 - Ticks
000025B6                            ; -------------------------------------------
000025B6                            
000025B6                            SMEG_LoadSong:
000025B6 23C0 FFFF D8EA             		move.l	d0,(RAM_SMEG_Buffer+SongRequest)
000025BC 33C1 FFFF D902             		move.w	d1,(RAM_SMEG_Buffer+TicksRequest)
000025C2 4E75                       		rts
000025C4                            		
000025C4                            ; ================================================================
000025C4                            ; -------------------------------------------
000025C4                            ; Run
000025C4                            ; -------------------------------------------
000025C4                            
000025C4                            SMEG_Upd:
000025C4 4DF9 FFFF D8E2             		lea	(RAM_SMEG_Buffer),a6
000025CA 6100 0000                  		bsr	@RequestSong
000025CE 08D6 0000                  		bset	#bitPriority,(a6)
000025D2 6100 0000                                  bsr	@ReadRow
000025D6                                            
000025D6 4DF9 FFFF D918              		lea	(RAM_SMEG_SfxBuff),a6
000025DC 6100 0000                   		bsr	@RequestSfx
000025E0 0816 0001                                  btst	#bitSfxOn,(a6)				;Want to play SFX?
000025E4 6700                                       beq.s	@Wait
000025E6 0896 0000                  		bclr	#bitPriority,(a6)
000025EA 6100 0000                  		bsr	@ReadRow
000025EE                            @Wait:
000025EE 4E75                       		rts
000025F0                            
000025F0                            ; -------------------------------------------
000025F0                            ; Request song
000025F0                            ; -------------------------------------------
000025F0                            	
000025F0                            @RequestSong:
000025F0 4AAE 0008                  		tst.l	SongRequest(a6)
000025F4 6700                       		beq.s	@Same
000025F6 08D6 0002                  		bset	#bitDisabled,(a6)
000025FA 6100 FF54                   		bsr	SMEG_StopSnd			;d0-d1 are gone
000025FE 4AAE 0008                   		tst.l	SongRequest(a6)
00002602 6B00                        		bmi.s	@Same
00002604                             		
00002604 422E 002E                  		clr.b	CurrPattern(a6)
00002608 422E 0002                  		clr.b	PatternEnd(a6)
0000260C 426E 0028                  		clr.w	PattSize(a6)
00002610 426E 002A                  		clr.w	PattRead(a6)
00002614 4BF9 FFFF D960             		lea	(RAM_SMEG_Chnls_BGM),a5
0000261A 422E 002F                  		clr.b	PcmChnOnOff(a6)
0000261E 422E 0000                                  clr.b	DrvStatus(a6)
00002622 6100 0000                  		bsr	SMEG_Load_SetChnls
00002626 6100 0000                  		bsr	SMEG_Load_FixBgm
0000262A 6100 0000                   		bsr	SMEG_Load_SetExtChnls
0000262E 0896 0002                  		bclr	#bitDisabled,(a6)
00002632                            
00002632 426E 0020                  		clr.w	TicksRequest(a6)
00002636 42AE 0008                  		clr.l	SongRequest(a6)
0000263A                            @Same:
0000263A 4E75                       		rts
0000263C                            		
0000263C                            ; -------------------------------------------
0000263C                            ; Request sfx
0000263C                            ; -------------------------------------------
0000263C                            
0000263C                            @RequestSfx:
0000263C 4AAE 0008                  		tst.l	SongRequest(a6)
00002640 67F8                       		beq.s	@Same
00002642 6BF6                       		bmi.s	@Same
00002644                            		
00002644 08D6 0002                  		bset	#bitDisabled,(a6)
00002648 422E 002E                  		clr.b	CurrPattern(a6)
0000264C 422E 0002                  		clr.b	PatternEnd(a6)
00002650 426E 0028                  		clr.w	PattSize(a6)
00002654 426E 002A                  		clr.w	PattRead(a6)
00002658                            		
00002658 422E 002F                  		clr.b	PcmChnOnOff(a6)
0000265C 422E 0000                                  clr.b	DrvStatus(a6)
00002660 08D6 0001                                  bset	#bitSfxOn,(a6)
00002664 4BF9 FFFF DA80             		lea	(RAM_SMEG_Chnls_SFX),a5
0000266A 6100 0000                  		bsr	SMEG_Load_SetChnls
0000266E 0896 0002                  		bclr	#bitDisabled,(a6)
00002672                            		
00002672 426E 0020                  		clr.w	TicksRequest(a6)
00002676 42AE 0008                  		clr.l	SongRequest(a6)
0000267A 4E75                       		rts
0000267C                            		
0000267C                            ; -------------------------------------------
0000267C                            ; Read row
0000267C                            ; -------------------------------------------
0000267C                            
0000267C                            @ReadRow:
0000267C 0816 0002                  		btst	#bitDisabled,(a6)
00002680 6600 FF6C                  		bne	@Wait
00002684                            
00002684 046E 0001 0022             		sub.w	#1,TicksRead(a6)
0000268A 6A00 FF62                  		bpl	@Wait
0000268E 3D6E 0024 0022              		move.w	TicksSet(a6),TicksRead(a6)
00002694                            
00002694                            @NewRow:
00002694 286E 0010                                  movea.l	SongRead(a6),a4
00002698                            
00002698                            ; --------------------------------
00002698                            ; New pattern
00002698                            ; --------------------------------
00002698                            
00002698                            @Next:
00002698 7A00                       		moveq	#0,d5
0000269A 7C00                       		moveq	#0,d6
0000269C 3C2E 0028                   		move.w	PattSize(a6),d6
000026A0 0446 0001                    		sub.w	#1,d6
000026A4 3A2E 002A                    		move.w	PattRead(a6),d5
000026A8 BC85                        		cmp.l	d5,d6
000026AA 6400                        		bcc.s	@NoNextRow
000026AC                             		
000026AC 426E 002A                  		clr.w	PattRead(a6)
000026B0 7A00                       		moveq	#0,d5
000026B2 7C00                       		moveq	#0,d6
000026B4 1C2E 0002                  		move.b	PatternEnd(a6),d6
000026B8 1A2E 002E                  		move.b	CurrPattern(a6),d5
000026BC BC45                       		cmp.w	d5,d6
000026BE 6E00                       		bgt.s	@NotEnd
000026C0                            		
000026C0 286E 000C                  		movea.l	SongStart(a6),a4
000026C4 1D5C 0029                  		move.b	(a4)+,PattSize+1(a6)
000026C8 1D5C 0028                   		move.b	(a4)+,PattSize(a6)
000026CC D8FC 0006                   		adda	#6,a4
000026D0 2D4C 0010                  		move.l	a4,SongRead(a6)
000026D4 1D6E 0003 002E             		move.b	PatternLoop(a6),CurrPattern(a6)
000026DA 426E 0022                  		clr.w	TicksRead(a6)
000026DE 4E75                       		rts
000026E0                            
000026E0                            ; --------------------------------
000026E0                            
000026E0                            @NotEnd:
000026E0 062E 0001 002E             		add.b	#1,CurrPattern(a6)
000026E6 7000                       		moveq	#0,d0
000026E8 102E 002E                  		move.b	CurrPattern(a6),d0
000026EC B02E 0003                  		cmp.b	PatternLoop(a6),d0
000026F0 6600                       		bne.s	@DontSaveLoop
000026F2 2D4C 000C                  		move.l	a4,SongStart(a6)
000026F6                            @DontSaveLoop:
000026F6 7200                       		moveq	#0,d1
000026F8 121C                       		move.b	(a4)+,d1
000026FA 141C                       		move.b	(a4)+,d2
000026FC E14A                       		lsl.w	#8,d2
000026FE 8242                       		or	d2,d1
00002700 3D41 0028                  		move.w	d1,PattSize(a6)
00002704 D8FC 0006                  		adda	#6,a4
00002708                            		
00002708                            ; --------------------------------
00002708                            ; Current pattern
00002708                            ; --------------------------------
00002708                            
00002708                            @NoNextRow:
00002708 7C00                       		moveq	#0,d6
0000270A 7000                       		moveq	#0,d0
0000270C 101C                       		move.b	(a4)+,d0
0000270E                            
0000270E 4A40                       		tst.w	d0
00002710 6600                       		bne.s	@ValidNote
00002712                            
00002712 066E 0001 002A             		add.w	#1,PattRead(a6)
00002718 2D4C 0010                  		move.l	a4,SongRead(a6)
0000271C 4E75                       		rts
0000271E                            
0000271E                            @ValidNote:
0000271E 4A00                       		tst.b	d0
00002720 6A00                       		bpl.s	@Not80
00002722 066E 0001 002A             		add.w	#1,PattRead(a6)
00002728 0880 0007                  		bclr	#7,d0
0000272C 1C1C                       		move.b	(a4)+,d6
0000272E                            @Not80:
0000272E 066E 0001 002A             		add.w	#1,PattRead(a6)
00002734 0440 0001                  		sub.w	#1,d0
00002738 1D40 0032                  		move.b	d0,LastPattChn(a6)
0000273C                            
0000273C 4BF9 FFFF D960             		lea 	(RAM_SMEG_Chnls_BGM),a5
00002742 0816 0000                  		btst 	#bitPriority,(a6)
00002746 6600                       		bne.s	@MusicPrio
00002748 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
0000274E 4BF9 FFFF DA80             		lea 	(RAM_SMEG_Chnls_SFX),a5
00002754 08F3 0000 0000              		bset	#0,(a3,d0.w)
0000275A                            @MusicPrio:
0000275A C0FC 0010                  		mulu.w	#sizeof_Chn,d0
0000275E DAC0                       		adda	d0,a5
00002760                            		
00002760 4A46                       		tst.w	d6
00002762 6700                       		beq.s	@NotRest
00002764 422D 0006                  		clr.b	Chn_Type(a5)
00002768 1B46 0006                  		move.b	d6,Chn_Type(a5)
0000276C                            
0000276C                            @NotRest:
0000276C                            
0000276C                            ; -------------
0000276C                            ; Note
0000276C                            ; -------------
0000276C                            
0000276C 082D 0004 0006             		btst	#bitSameNote,Chn_Type(a5)
00002772 6600                       		bne.s	@PlayOnly
00002774 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
0000277A 6700                       		beq.s	@NoNote
0000277C                            
0000277C 1B5C 000B                                  move.b	(a4)+,Chn_Note(a5)
00002780 066E 0001 002A             		add.w	#1,PattRead(a6)
00002786                            
00002786                            @PlayOnly:
00002786 6100 0000                  		bsr	SMEG_ChannelRest
0000278A                            @NoNote:
0000278A                            
0000278A                            ; -------------
0000278A                            ; Instrument
0000278A                            ; -------------
0000278A                            
0000278A 082D 0005 0006              		btst	#bitSameInst,Chn_Type(a5)
00002790 6600                       		bne.s	@SameInst
00002792 082D 0001 0006             		btst	#bitInst,Chn_Type(a5)
00002798 6700                       		beq.s	@NoInst
0000279A                            
0000279A 1B5C 0008                  		move.b	(a4)+,Chn_Inst(a5)
0000279E 066E 0001 002A             		add.w	#1,PattRead(a6)
000027A4                            
000027A4                            @SameInst:
000027A4 6100 0000                  		bsr	SMEG_SetVoice
000027A8                            @NoInst:
000027A8                            
000027A8                            ; -------------
000027A8                            ; Volume
000027A8                            ; -------------
000027A8                            
000027A8 082D 0006 0006              		btst	#bitSameVol,Chn_Type(a5)
000027AE 6600                        		bne.s	@SameVol
000027B0 082D 0002 0006             		btst	#bitVolume,Chn_Type(a5)
000027B6 6700                       		beq.s	@NoVolume
000027B8                            
000027B8 426D 0004                  		clr.w	Chn_Portam(a5)
000027BC 426D 0002                  		clr.w	Chn_Effect(a5)
000027C0 7000                                       moveq	#0,d0
000027C2 101C                       		move.b	(a4)+,d0
000027C4 066E 0001 002A             		add.w	#1,PattRead(a6)
000027CA 0440 0040                  		sub.w	#64,d0
000027CE 4440                       		neg.w	d0
000027D0 1B40 0009                                  move.b	d0,Chn_Vol(a5)
000027D4                            
000027D4                            @SameVol:
000027D4 6100 0000                  		bsr	@ChnVolume
000027D8                            @NoVolume:
000027D8                            
000027D8                            ; -------------
000027D8                            ; Effect
000027D8                            ; -------------
000027D8                            
000027D8 082D 0007 0006              		btst	#bitSameEffect,Chn_Type(a5)
000027DE 6600                        		bne.s	@SameEffect
000027E0 082D 0003 0006             		btst	#bitEffect,Chn_Type(a5)
000027E6 6700                       		beq.s	@NoEffect
000027E8                            
000027E8 1B5C 0002                  		move.b	(a4)+,Chn_Effect(a5)
000027EC 066E 0001 002A             		add.w	#1,PattRead(a6)
000027F2 1B5C 0003                  		move.b	(a4)+,Chn_Effect+1(a5)
000027F6 066E 0001 002A             		add.w	#1,PattRead(a6)
000027FC                            @SameEffect:
000027FC 6100 0000                  		bsr	@ChannelEffects
00002800                            @NoEffect:
00002800                            
00002800                            ; --------------
00002800                            ; Play the note
00002800                            ; --------------
00002800                            
00002800 082D 0004 0006              		btst	#bitSameNote,Chn_Type(a5)
00002806 6600                        		bne.s	@SameNote
00002808 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
0000280E 6700 FE88                  		beq	@Next
00002812                            @SameNote:
00002812 6100 0000                  		bsr	@ChannelPlay
00002816 6000 FE80                  		bra	@Next
0000281A                            
0000281A                            ; ================================================================
0000281A                            ; -------------------------------
0000281A                            ; Set Freq
0000281A                            ; -------------------------------
0000281A                            
0000281A                            @NoteFreq:
0000281A 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00002820 6700 0000                  		beq	@ResetFreq
00002824                            		
00002824 0C40 00FF                  		cmp.w	#$FF,d0
00002828 6700                       		beq.s	@ResetFreq
0000282A 0C40 00FE                  		cmp.w	#$FE,d0
0000282E 6700                       		beq.s	@ResetFreq
00002830                            		
00002830 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00002836 6C00 0000                  		bge	@PCM_Freq
0000283A                            		
0000283A 4A2D 0007                  		tst.b	Chn_ID(a5)
0000283E 6B00 0000                  		bmi	@PSG_Freq
00002842 0C2D 0006 0007                             cmp.b	#FM_6,Chn_ID(a5)
00002848 6600                                       bne.s	@NoChk6
0000284A 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00002850 6600 0000                  		bne	@DAC_Set
00002854                            
00002854                            @NoChk6:
00002854 7200                                       moveq	#0,d1
00002856 1200                                       move.b	d0,d1
00002858 7400                                       moveq	#0,d2
0000285A E349                       		lsl.w	#1,d1
0000285C 3B7B 1000 0000             		move.w	@Freq_FM(pc,d1.w),Chn_Freq(a5)
00002862 4E75                       		rts
00002864                            
00002864                            @ResetFreq:
00002864 0816 0000                    		btst	#bitPriority,(a6)
00002868 6700                         		beq.s	@SfxMode
0000286A 7200                        		moveq	#0,d1
0000286C 122E 0032                   		move.b	LastPattChn(a6),d1
00002870 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00002876 08B3 0000 1000              		bclr	#0,(a3,d1.w)
0000287C                            @SfxMode:
0000287C 426D 0000                  		clr.w	Chn_Freq(a5)
00002880 4E75                       		rts
00002882                            		
00002882                            ; -------------------------------
00002882                            ; FM Frequencies
00002882                            ; -------------------------------
00002882                            
00002882                            @Freq_FM:
00002882                            ; 		dc.w $269	;NULL
00002882 028D                       		dc.w $28d	;C-0 $00
00002884 02B4                       		dc.w $2b4
00002886 02DD                       		dc.w $2dd
00002888 0309                       		dc.w $309
0000288A 0337                       		dc.w $337
0000288C 0368                       		dc.w $368
0000288E 039C                       		dc.w $39c
00002890 03D3                       		dc.w $3d3
00002892 040D                       		dc.w $40d
00002894 044B                       		dc.w $44b
00002896 048C                       		dc.w $48c
00002898 0269                       		dc.w $269
0000289A 028D                       		dc.w $28d	;C-1 $0C
0000289C 02B4                       		dc.w $2b4
0000289E 02DD                       		dc.w $2dd
000028A0 0309                       		dc.w $309
000028A2 0337                       		dc.w $337
000028A4 0368                       		dc.w $368
000028A6 039C                       		dc.w $39c
000028A8 03D3                       		dc.w $3d3
000028AA 040D                       		dc.w $40d
000028AC 044B                       		dc.w $44b
000028AE 048C                       		dc.w $48c
000028B0 0A69                       		dc.w $a69
000028B2 0A8D                       		dc.w $a8d	;C-2 $18
000028B4 0AB4                       		dc.w $ab4
000028B6 0ADD                       		dc.w $add
000028B8 0B09                       		dc.w $b09
000028BA 0B37                       		dc.w $b37
000028BC 0B68                       		dc.w $b68
000028BE 0B9C                       		dc.w $b9c
000028C0 0BD3                       		dc.w $bd3
000028C2 0C0D                       		dc.w $c0d
000028C4 0C4B                       		dc.w $c4b
000028C6 0C8C                       		dc.w $c8c
000028C8 1269                       		dc.w $1269
000028CA 128D                       		dc.w $128d	;C-3 $24
000028CC 12B4                       		dc.w $12b4
000028CE 12DD                       		dc.w $12dd
000028D0 1309                       		dc.w $1309
000028D2 1337                       		dc.w $1337
000028D4 1368                       		dc.w $1368
000028D6 139C                       		dc.w $139c
000028D8 13D3                       		dc.w $13d3
000028DA 140D                       		dc.w $140d
000028DC 144B                       		dc.w $144b
000028DE 148C                       		dc.w $148c
000028E0 1A69                       		dc.w $1a69
000028E2 1A8D                       		dc.w $1a8d	;C-4 $30
000028E4 1AB4                       		dc.w $1ab4
000028E6 1ADD                       		dc.w $1add
000028E8 1B09                       		dc.w $1b09
000028EA 1B37                       		dc.w $1b37
000028EC 1B68                       		dc.w $1b68
000028EE 1B9C                       		dc.w $1b9c
000028F0 1BD3                       		dc.w $1bd3
000028F2 1C0D                       		dc.w $1c0d
000028F4 1C4B                       		dc.w $1c4b
000028F6 1C8C                       		dc.w $1c8c
000028F8 2269                       		dc.w $2269
000028FA 228D                       		dc.w $228d	;C-5 $3C
000028FC 22B4                       		dc.w $22b4
000028FE 22DD                       		dc.w $22dd
00002900 2309                       		dc.w $2309
00002902 2337                       		dc.w $2337
00002904 2368                       		dc.w $2368
00002906 239C                       		dc.w $239c
00002908 23D3                       		dc.w $23d3
0000290A 240D                       		dc.w $240d
0000290C 244B                       		dc.w $244b
0000290E 248C                       		dc.w $248c
00002910 2A69                       		dc.w $2a69
00002912 2A8D                       		dc.w $2a8d	;C-6 $48
00002914 2AB4                       		dc.w $2ab4
00002916 2ADD                       		dc.w $2add
00002918 2B09                       		dc.w $2b09
0000291A 2B37                       		dc.w $2b37
0000291C 2B68                       		dc.w $2b68
0000291E 2B9C                       		dc.w $2b9c
00002920 2BD3                       		dc.w $2bd3
00002922 2C0D                       		dc.w $2c0d
00002924 2C4B                       		dc.w $2c4b
00002926 2C8C                       		dc.w $2c8c
00002928 3269                       		dc.w $3269	;C-7 $54
0000292A 328D                       		dc.w $328d
0000292C 32B4                       		dc.w $32b4
0000292E 32DD                       		dc.w $32dd
00002930 3309                       		dc.w $3309
00002932 3337                       		dc.w $3337
00002934 3368                       		dc.w $3368
00002936 339C                       		dc.w $339c
00002938 33D3                       		dc.w $33d3
0000293A 340D                       		dc.w $340d
0000293C 344B                       		dc.w $344b
0000293E 348C                       		dc.w $348c
00002940                            		even
00002940                            		
00002940                            ; -------------------------------
00002940                            ; PSG Freq
00002940                            ; -------------------------------
00002940                            
00002940                            @PSG_Freq:
00002940 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
00002946 6600                       		bne.s	@NormalPSG
00002948 3B7C 0001 0000             		move.w	#1,Chn_Freq(a5)
0000294E 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
00002954 6700 0000                  		beq	@Disabled
00002958                            @NormalPSG:
00002958 7200                                       moveq	#0,d1
0000295A 1200                                       move.b	d0,d1
0000295C E349                       		lsl.w	#1,d1
0000295E 343B 1000                  		move.w	@Notes_PSG(pc,d1.w),d2
00002962 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
00002968 6600                       		bne.s	@NotNoiseFix
0000296A 343B 1000                  		move.w	(@Notes_PSG+(12*2))(pc,d1.w),d2		
0000296E                            @NotNoiseFix:
0000296E 3B42 0000                   		move.w	d2,Chn_Freq(a5)
00002972 046D 0001 0000             		sub.w	#1,Chn_Freq(a5)
00002978 4E75                       		rts
0000297A                            
0000297A                            ; -------------------------------
0000297A                            ; PSG Frequencies
0000297A                            ; -------------------------------
0000297A                            
0000297A                            @Notes_PSG:
0000297A 0000                       		dc.w 0		;C-0 $0
0000297C 0000                       		dc.w 0
0000297E 0000                       		dc.w 0
00002980 0000                       		dc.w 0
00002982 0000                       		dc.w 0
00002984 0000                       		dc.w 0
00002986 0000                       		dc.w 0
00002988 0000                       		dc.w 0
0000298A 0000                       		dc.w 0
0000298C 0000                       		dc.w 0
0000298E 0000                       		dc.w 0
00002990 0000                       		dc.w 0
00002992                            		
00002992 0000                       		dc.w 0		;C-1 $C
00002994 0000                       		dc.w 0
00002996 0000                       		dc.w 0
00002998 0000                       		dc.w 0
0000299A 0000                       		dc.w 0
0000299C 0000                       		dc.w 0
0000299E 0000                       		dc.w 0
000029A0 0000                       		dc.w 0
000029A2 0000                       		dc.w 0
000029A4 0000                       		dc.w 0
000029A6 0000                       		dc.w 0
000029A8 0000                       		dc.w 0
000029AA                            		
000029AA 0000                       		dc.w 0		;C-2 $18
000029AC 0000                       		dc.w 0
000029AE 0000                       		dc.w 0
000029B0 0000                       		dc.w 0
000029B2 0000                       		dc.w 0
000029B4 0000                       		dc.w 0
000029B6 0000                       		dc.w 0
000029B8 0000                       		dc.w 0
000029BA 0000                       		dc.w 0
000029BC 0000                       		dc.w 0
000029BE 0000                       		dc.w 0
000029C0 0000                       		dc.w 0
000029C2                            
000029C2 0000                       		dc.w 0		;C-3 $24
000029C4 0000                       		dc.w 0
000029C6 0000                       		dc.w 0
000029C8 0000                       		dc.w 0
000029CA 0000                       		dc.w 0
000029CC 0000                       		dc.w 0
000029CE 0000                       		dc.w 0
000029D0 0000                       		dc.w 0
000029D2 0000                       		dc.w 0
000029D4 03F8                       		dc.w $3F8
000029D6 03BF                                       dc.w $3BF
000029D8 0389                                       dc.w $389
000029DA                                            
000029DA 0356                       		dc.w $356	;C-4 $30
000029DC 0326                                       dc.w $326
000029DE 02F9                                       dc.w $2F9
000029E0 02CE                                       dc.w $2CE
000029E2 02A5                                       dc.w $2A5
000029E4 0280                                       dc.w $280
000029E6 025C                                       dc.w $25C
000029E8 023A                                       dc.w $23A
000029EA 021A                                       dc.w $21A
000029EC 01FB                       		dc.w $1FB
000029EE 01DF                                       dc.w $1DF
000029F0 01C4                                       dc.w $1C4
000029F2                                            
000029F2 01AB                                       dc.w $1AB	;C-5 $3C
000029F4 0193                                       dc.w $193
000029F6 017D                                       dc.w $17D
000029F8 0167                                       dc.w $167
000029FA 0153                                       dc.w $153
000029FC 0140                                       dc.w $140
000029FE 012E                       		dc.w $12E
00002A00 011D                                       dc.w $11D
00002A02 010D                                       dc.w $10D
00002A04 00FE                                       dc.w $FE
00002A06 00EF                                       dc.w $EF
00002A08 00E2                                       dc.w $E2
00002A0A                                            
00002A0A 00D6                                       dc.w $D6	;C-6 $48
00002A0C 00C9                                       dc.w $C9
00002A0E 00BE                                       dc.w $BE
00002A10 00B4                                       dc.w $B4
00002A12 00A9                       		dc.w $A9
00002A14 00A0                                       dc.w $A0
00002A16 0097                                       dc.w $97
00002A18 008F                                       dc.w $8F
00002A1A 0087                                       dc.w $87
00002A1C 007F                                       dc.w $7F
00002A1E 0078                                       dc.w $78
00002A20 0071                                       dc.w $71
00002A22                                            
00002A22 006B                                       dc.w $6B	;C-7 $54
00002A24 0065                                       dc.w $65
00002A26 005F                       		dc.w $5F
00002A28 005A                                       dc.w $5A
00002A2A 0055                                       dc.w $55
00002A2C 0050                                       dc.w $50
00002A2E 004B                                       dc.w $4B
00002A30 0047                                       dc.w $47
00002A32 0043                                       dc.w $43
00002A34 0040                                       dc.w $40
00002A36 003C                                       dc.w $3C
00002A38 0039                                       dc.w $39
00002A3A                                            
00002A3A 0036                       		dc.w $36	;C-8 $60
00002A3C 0033                                       dc.w $33
00002A3E 0030                                       dc.w $30
00002A40 002D                                       dc.w $2D
00002A42 002B                                       dc.w $2B
00002A44 0028                                       dc.w $28
00002A46 0026                                       dc.w $26
00002A48 0024                                       dc.w $24
00002A4A 0022                                       dc.w $22
00002A4C 0020                                       dc.w $20
00002A4E 001F                       		dc.w $1F
00002A50 001D                                       dc.w $1D
00002A52                                            
00002A52 001B                                       dc.w $1B	;C-9 $6C
00002A54 001A                                       dc.w $1A
00002A56 0018                                       dc.w $18
00002A58 0017                                       dc.w $17
00002A5A 0016                                       dc.w $16
00002A5C 0015                                       dc.w $15
00002A5E 0013                                       dc.w $13
00002A60 0012                                       dc.w $12
00002A62 0011                       		dc.w $11
00002A64 0010                        		dc.w $10 ;Custom...
00002A66 0009                        		dc.w $9
00002A68 0008                        		dc.w $8
00002A6A                            
00002A6A                            		even
00002A6A                            		
00002A6A                            ; -------------------------------
00002A6A                            ; Set DAC
00002A6A                            ; -------------------------------
00002A6A                            
00002A6A                            @DAC_Set:
00002A6A 426D 0000                  		clr.w	Chn_Freq(a5)
00002A6E 1B40 0000                                  move.b	d0,Chn_Freq(a5)
00002A72 4E75                                       rts
00002A74                            
00002A74                            ; -------------------------------
00002A74                            ; Set PCM/PWM
00002A74                            ; -------------------------------
00002A74                            
00002A74                            @PCM_Freq:
00002A74 4E75                       		rts
00002A76                            
00002A76                            ; -------------------------------
00002A76                            ; PCM Frequencies
00002A76                            ; -------------------------------
00002A76                            
00002A76                            		
00002A76                            ; ================================================================
00002A76                            ; -------------------------------
00002A76                            ; Set Volume
00002A76                            ; -------------------------------
00002A76                            
00002A76                            @ChnVolume:
00002A76 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00002A7C 6700 0000                  		beq	@Return
00002A80                            
00002A80 0816 0000                  		btst	#bitPriority,(a6)
00002A84 6700                       		beq.s	@SFX_Mode
00002A86 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00002A8E 6700                       		beq.s	@SFX_Mode
00002A90 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00002A96 7200                        		moveq	#0,d1
00002A98 122E 0032                   		move.b	LastPattChn(a6),d1
00002A9C 0833 0000 1000             		btst	#0,(a3,d1.w)
00002AA2 6600 0000                  		bne	@Return
00002AA6                            @SFX_Mode:
00002AA6                            
00002AA6 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00002AAC 6C00 0000                  		bge	@ChnVol_PCM
00002AB0 4A2D 0007                  		tst.b	Chn_ID(a5)
00002AB4 6B00 0000                  		bmi	@ChnVol_PSG
00002AB8                            
00002AB8 266E 0014                  		movea.l	SongVoices(a6),a3
00002ABC 7000                       		moveq	#0,d0
00002ABE 102D 0008                  		move.b	Chn_Inst(a5),d0
00002AC2                            @FindNext:
00002AC2 4A53                       		tst.w	(a3)
00002AC4 6B00 0000                  		bmi	@Return
00002AC8 7200                       		moveq	#0,d1
00002ACA 322B 0002                  		move.w	2(a3),d1
00002ACE B053                       		cmp.w	(a3),d0
00002AD0 6700                       		beq.s	@Found
00002AD2 D6FC 0008                   		adda.w	#8,a3
00002AD6 60EA                       		bra.s	@FindNext
00002AD8                            
00002AD8                            @Found:
00002AD8 D6FC 0004                  		adda.w	#4,a3
00002ADC 2653                       		movea.l	(a3),a3
00002ADE 4A41                       		tst.w	d1
00002AE0 6700                       		beq.s	@Nothing
00002AE2                            @FindNext2:
00002AE2 D6FC 0019                  		adda	#$19,a3
00002AE6 51C9 FFFA                  		dbf	d1,@FindNext2
00002AEA                            @Nothing:
00002AEA D6FC 0018                  		adda	#$18,a3
00002AEE                            
00002AEE 103C 0028                  		move.b	#$28,d0
00002AF2 7200                       		moveq	#0,d1
00002AF4 D22D 0007                  		add.b	Chn_ID(a5),d1
00002AF8 33FC 0100 00A1 1100 0839+  		Z80_OFF
00002B0A 6100 0000                  		bsr	FM_RegWrite_1
00002B0E                            
00002B0E 2D4C 0004                  		move.l	a4,AddrBackup(a6)
00002B12 49FA 0000                  		lea	SMEG_RegSetVol-1(pc),a4
00002B16 7C01                       		moveq	#1,d6
00002B18                            @TryNext:
00002B18 7200                       		moveq	#0,d1
00002B1A 1213                       		move.b	(a3),d1
00002B1C D22D 000A                  		add.b	Chn_DefVol(a5),d1
00002B20 D22D 0009                  		add.b	Chn_Vol(a5),d1
00002B24                            
00002B24 7600                                       moveq	#0,d3
00002B26 162D 0007                                  move.b	Chn_ID(a5),d3
00002B2A 7000                                       moveq	#0,d0
00002B2C 1014                                       move.b	(a4),d0
00002B2E 0C00 004C                                  cmp.b	#$4C,d0
00002B32 6700                       		beq.s	@Is4C
00002B34 4A13                       		tst.b	(a3)
00002B36 6600                       		bne.s	@FM_Return
00002B38                            
00002B38                            @Is4C:
00002B38 98FC 0002                                  suba	#2,a4
00002B3C 96FC 0002                                  suba	#2,a3
00002B40                            
00002B40 0C2D 0004 0007                             cmp.b	#FM_4,Chn_ID(a5)
00002B46 6C00                                       bge.s	@FM456
00002B48 D003                       		add.b	d3,d0
00002B4A                            
00002B4A 6100 0000                  		bsr	FM_RegWrite_1
00002B4E 51CE FFC8                  		dbf	d6,@TryNext
00002B52 6000                       		bra.s	@FM_Return
00002B54                            
00002B54                            @FM456:
00002B54 0443 0004                  		sub.w	#4,d3
00002B58 D003                       		add.b	d3,d0
00002B5A 6100 0000                  		bsr	FM_RegWrite_2
00002B5E 51CE FFB8                  		dbf	d6,@TryNext
00002B62                            
00002B62                            @FM_Return:
00002B62 13FC 002A 00A0 4000 33FC+  		Z80_ON
00002B72 286E 0004                  		move.l	AddrBackup(a6),a4
00002B76                            @Return:
00002B76 4E75                       		rts
00002B78                            
00002B78                            ; -------------------------------
00002B78                            
00002B78                            @ChnVol_PSG:
00002B78 7200                       		moveq	#0,d1
00002B7A 122D 0009                  		move.b	Chn_Vol(a5),d1
00002B7E 303C 000F                  		move.w	#$F,d0
00002B82 4A41                       		tst.w	d1
00002B84 6700                       		beq.s	@DontFix
00002B86                            
00002B86 0441 0040                  		sub.w	#64,d1
00002B8A 4441                       		neg.w	d1
00002B8C E449                       		lsr.w	#2,d1
00002B8E 3001                       		move.w	d1,d0
00002B90                            
00002B90                            	;	move.b	Chn_DefVol(a5),d3
00002B90                            	;	lsr.w	#2,d3
00002B90                            	;	add.w	d3,d0
00002B90                            	;	moveq	#$F,d0
00002B90                            	;	sub.w	d2,d0
00002B90                            	;	cmp.w	#$F,d0
00002B90                            	;	beq.s	@DontFix
00002B90                            	;	sub.w	#1,d0
00002B90                            	
00002B90                            @DontFix:
00002B90 7200                       		moveq	#0,d1
00002B92 122D 0007                  		move.b	Chn_ID(a5),d1
00002B96 0881 0007                  		bclr	#7,d1
00002B9A EA49                       		lsr.w	#5,d1
00002B9C                            		
00002B9C 0200 000F                  		and.b	#$F,d0
00002BA0 0201 0003                  		and.b	#$3,d1
00002BA4 7400                       		moveq	#0,d2
00002BA6 143C 000F                  		move.b	#$F,d2
00002BAA 9400                       		sub.b	d0,d2
00002BAC 0002 0090                  		or.b	#%10010000,d2
00002BB0 EB09                       		lsl.b	#5,d1
00002BB2 8401                       		or.b	d1,d2
00002BB4 13C2 00C0 0011             		move.b	d2,($C00011).l	;$90+channel<<5+($f-vol)
00002BBA 4E75                       		rts
00002BBC                            
00002BBC                            ; -------------------------------
00002BBC                            
00002BBC                            @ChnVol_PCM:
00002BBC 4E75                       		rts
00002BBE                            		
00002BBE                            ; ================================================================
00002BBE                            ; -------------------------------
00002BBE                            ; Channel effect
00002BBE                            ; -------------------------------
00002BBE                            
00002BBE                            @ChannelEffects:
00002BBE 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00002BC4 6700 0000                  		beq	@Null
00002BC8                            		
00002BC8 0816 0000                  		btst	#bitPriority,(a6)
00002BCC 6700                       		beq.s	@SFX_ModeEff
00002BCE 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00002BD6 6700                       		beq.s	@SFX_ModeEff
00002BD8 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00002BDE 7200                        		moveq	#0,d1
00002BE0 122E 0032                   		move.b	LastPattChn(a6),d1
00002BE4 0833 0000 1000             		btst	#0,(a3,d1.w)
00002BEA 6600 FF8A                  		bne	@Return
00002BEE                            @SFX_ModeEff:
00002BEE                            
00002BEE 7000                       		moveq	#0,d0
00002BF0 102D 0002                  		move.b	Chn_Effect(a5),d0
00002BF4 D040                       		add.w	d0,d0
00002BF6 323B 0000                  		move.w	@EffectList(pc,d0.w),d1
00002BFA 4EFB 1000                  		jmp	@EffectList(pc,d1.w)
00002BFE                            		
00002BFE                            ; -------------------------------
00002BFE                            
00002BFE 0000                       @EffectList:	dc.w	@Null-@EffectList
00002C00 0000                       		dc.w	@Flag_A-@EffectList
00002C02 0000                       		dc.w	@Null-@EffectList
00002C04 0000                       		dc.w	@Null-@EffectList
00002C06 0000                       		dc.w	@Flag_D-@EffectList
00002C08 0000                       		dc.w	@Flag_E-@EffectList
00002C0A 0000                       		dc.w	@Flag_F-@EffectList
00002C0C 0000                       		dc.w	@Null-@EffectList
00002C0E 0000                       		dc.w	@Null-@EffectList
00002C10 0000                       		dc.w	@Null-@EffectList
00002C12 0000                       		dc.w	@Null-@EffectList
00002C14 0000                       		dc.w	@Null-@EffectList
00002C16 0000                       		dc.w	@Null-@EffectList
00002C18 0000                       		dc.w	@Flag_M-@EffectList
00002C1A 0000                       		dc.w	@Null-@EffectList
00002C1C 0000                       		dc.w	@Null-@EffectList
00002C1E 0000                       		dc.w	@Null-@EffectList
00002C20 0000                       		dc.w	@Null-@EffectList
00002C22 0000                       		dc.w	@Null-@EffectList
00002C24 0000                       		dc.w	@Null-@EffectList
00002C26 0000                       		dc.w	@Null-@EffectList
00002C28 0000                       		dc.w	@Null-@EffectList
00002C2A 0000                       		dc.w	@Null-@EffectList
00002C2C 0000                       		dc.w	@Null-@EffectList
00002C2E 0000                       		dc.w	@Flag_X-@EffectList
00002C30 0000                       		dc.w	@Null-@EffectList
00002C32 0000                       		dc.w	@Flag_Z-@EffectList
00002C34                            		even
00002C34                            
00002C34                            ; -------------------------------
00002C34                            ; Null effect
00002C34                            ; -------------------------------
00002C34                            
00002C34                            @Null:
00002C34 4E75                       		rts
00002C36                            
00002C36                            ; -------------------------------
00002C36                            ; Flag A - Set Tick rate
00002C36                            ; -------------------------------
00002C36                            
00002C36                            @Flag_A:
00002C36 7000                       		moveq	#0,d0
00002C38 426E 0024                  		clr.w	TicksSet(a6)
00002C3C 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00002C40 0440 0001                  		sub.w	#1,d0
00002C44 1D40 0025                  		move.b	d0,TicksSet+1(a6)
00002C48 4E75                       		rts
00002C4A                            
00002C4A                            ; -------------------------------
00002C4A                            ; Flag D - Volume slide
00002C4A                            ; -------------------------------
00002C4A                            
00002C4A                            @Flag_D:
00002C4A 7000                       		moveq	#0,d0
00002C4C 7200                       		moveq	#0,d1
00002C4E 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00002C52 4A2D 0007                  		tst.b	Chn_ID(a5)
00002C56 6A00 0000                  		bpl	@NotPSG
00002C5A E948                       		lsl.w	#4,d0
00002C5C                            @NotPSG:
00002C5C 122D 0009                  		move.b	Chn_Vol(a5),d1
00002C60 D200                       		add.b	d0,d1
00002C62 1B41 0009                  		move.b	d1,Chn_Vol(a5)
00002C66 6000 FE0E                  		bra	@ChnVolume
00002C6A                            
00002C6A                            ; -------------------------------
00002C6A                            ; Flag E - Portametro down
00002C6A                            ; -------------------------------
00002C6A                            
00002C6A                            @Flag_E:
00002C6A 7000                       		moveq	#0,d0
00002C6C 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00002C70 422D 0004                  		clr.b	Chn_Portam(a5)
00002C74 D12D 0005                  		add.b	d0,Chn_Portam+1(a5)
00002C78 4E75                       		rts
00002C7A                            
00002C7A                            ; -------------------------------
00002C7A                            ; Flag F - Portametro up
00002C7A                            ; -------------------------------
00002C7A                            
00002C7A                            @Flag_F:
00002C7A 7000                       		moveq	#0,d0
00002C7C 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00002C80 422D 0005                  		clr.b	Chn_Portam+1(a5)
00002C84 D12D 0004                  		add.b	d0,Chn_Portam(a5)
00002C88 4E75                       		rts
00002C8A                            
00002C8A                            ; -------------------------------
00002C8A                            ; Flag M - Set Channel Volume
00002C8A                            ; -------------------------------
00002C8A                            
00002C8A                            @Flag_M:
00002C8A 7000                       		moveq	#0,d0
00002C8C 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00002C90                            	;	tst.b	Chn_ID(a5)
00002C90                            	;	bpl	@NotPSG_H
00002C90                            
00002C90 4440                       		neg.w	d0
00002C92 0440 00D0                  		sub.w	#$D0,d0
00002C96                            ;@NotPSG_H:
00002C96 1B40 000A                  		move.b	d0,Chn_DefVol(a5)
00002C9A 6000 FDDA                  		bra	@ChnVolume
00002C9E                            
00002C9E                            ; -------------------------------
00002C9E                            ; Flag X - Stereo
00002C9E                            ; -------------------------------
00002C9E                            
00002C9E                            @Flag_X:
00002C9E 4A2D 0007                  		tst.b	Chn_ID(a5)
00002CA2 6B90                       		bmi.s	@Null
00002CA4 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00002CAA 6C00 0000                  		bge	@PCM_Pan
00002CAE                            		
00002CAE 7000                       		moveq	#0,d0
00002CB0 303C 00C0                  		move.w	#$C0,d0
00002CB4 0C2D 0080 0003                             cmp.b	#$80,Chn_Effect+1(a5)
00002CBA 6700                                       beq.s	@SetPan
00002CBC 4A2D 0003                  		tst.b	Chn_Effect+1(a5)
00002CC0 6B00                       		bmi.s	@Right
00002CC2 6A00                       		bpl.s	@Left
00002CC4                            @SetPan:
00002CC4 1B40 000C                  		move.b	d0,Chn_Panning(a5)
00002CC8 4E75                       		rts
00002CCA                            @Left:
00002CCA 303C 0080                  		move.w	#$80,d0
00002CCE 60F4                       		bra.s	@SetPan
00002CD0                            @Right:
00002CD0 303C 0040                  		move.w	#$40,d0
00002CD4 60EE                       		bra.s	@SetPan
00002CD6                            
00002CD6                            ; -------------------------------
00002CD6                            ; PCM Panning
00002CD6                            ; -------------------------------
00002CD6                            
00002CD6                            @PCM_Pan:
00002CD6 4E75                       		rts
00002CD8                            
00002CD8                            ; ======================================================
00002CD8                            ; -------------------------------
00002CD8                            ; Flag Z
00002CD8                            ; -------------------------------
00002CD8                            
00002CD8                            @Flag_Z:
00002CD8 7000                       		moveq	#0,d0
00002CDA 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00002CDE E848                       		lsr.w	#4,d0
00002CE0 D040                       		add.w	d0,d0
00002CE2 323B 0000                  		move.w	@HashList(pc,d0.w),d1
00002CE6 102D 0003                  		move.b	Chn_Effect+1(a5),d0		;d0 - $0-$F argument
00002CEA 0200 000F                  		and.b	#$F,d0
00002CEE 4EFB 1000                  		jmp	@HashList(pc,d1.w)
00002CF2                            
00002CF2 0000                       @HashList:	dc.w	@DacStatus-@HashList		;$00 - Status
00002CF4 0000                       		dc.w	@FM_Key-@HashList		;$10 - FM Keys ON/OFF
00002CF6 FF42                       		dc.w	@Null-@HashList			;$20
00002CF8 FF42                       		dc.w	@Null-@HashList			;$30
00002CFA 0000                       		dc.w	@PSG-@HashList			;$40 - PSG Settings
00002CFC FF42                       		dc.w	@Null-@HashList			;$50
00002CFE FF42                       		dc.w	@Null-@HashList			;$60
00002D00 FF42                       		dc.w	@Null-@HashList			;$70
00002D02 FF42                       		dc.w	@Null-@HashList			;$80
00002D04 FF42                       		dc.w	@Null-@HashList			;$90
00002D06 FF42                       		dc.w	@Null-@HashList			;$A0
00002D08 FF42                       		dc.w	@Null-@HashList			;$B0
00002D0A FF42                       		dc.w	@Null-@HashList			;$C0
00002D0C FF42                       		dc.w	@Null-@HashList			;$D0
00002D0E FF42                       		dc.w	@Null-@HashList			;$E0
00002D10 0000                       		dc.w	@FixSfx-@HashList		;$F0 - Finish SFX flag (SFX only)
00002D12                            		even
00002D12                            
00002D12                            ; -------------------------------
00002D12                            
00002D12                            @DacStatus:
00002D12 0240 0003                  		and.w	#3,d0
00002D16 1D40 0001                  		move.b	d0,DrvSettings(a6)
00002D1A                            		
00002D1A 1200                       		move.b	d0,d1
00002D1C 0241 0001                  		and.w	#1,d1
00002D20 EF49                       		lsl.w	#7,d1
00002D22 702B                       		moveq	#$2B,d0
00002D24 33FC 0100 00A1 1100 0839+  		Z80_OFF
00002D36 6100 0000                  		bsr	FM_RegWrite_1
00002D3A 13FC 002A 00A0 4000 33FC+  		Z80_ON
00002D4A                            		
00002D4A 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00002D50 6700 FE24                  		beq	@Return
00002D54 6000 0000                  		bra	SMEG_SetVoice_DAC
00002D58                            
00002D58                            ; -------------------------------
00002D58                            
00002D58                            @FM_Key:
00002D58 0240 000F                  		and.w	#$F,d0
00002D5C 1B40 000D                  		move.b	d0,Chn_FM_Key(a5)
00002D60 4E75                       		rts
00002D62                            
00002D62                            ; -------------------------------
00002D62                            
00002D62                            @PSG:
00002D62 08EE 0002 0001             		bset	#bitTone3,DrvSettings(a6)
00002D68 0C00 0003                  		cmp.b	#3,d0
00002D6C 6700                       		beq.s	@Tone3
00002D6E 0C00 0007                  		cmp.b	#7,d0
00002D72 6700                       		beq.s	@Tone3
00002D74 08AE 0002 0001             		bclr	#bitTone3,DrvSettings(a6)
00002D7A                            @Tone3:
00002D7A 0816 0000                    		btst	#bitPriority,(a6)
00002D7E 6700                         		beq.s	@IsPsg
00002D80 47F9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a3
00002D86 176B 0001 0031             		move.b	DrvSettings(a3),DrvSettingsBGM(a3)
00002D8C 1740 0030                  		move.b	d0,PsgLast(a3)
00002D90                            @IsPsg:
00002D90 0640 00E0                  		add.w	#$E0,d0
00002D94 6000 0000                  		bra	@PutPSG
00002D98                            
00002D98                            ; -------------------------------
00002D98                            
00002D98                            @FixSfx:
00002D98 0816 0000                     		btst	#bitPriority,(a6)
00002D9C 6600 FDD8                    		bne	@Return
00002DA0                            		
00002DA0 47F9 FFFF D8E2              		lea	(RAM_SMEG_Buffer),a3
00002DA6 176B 0031 0001              		move.b	DrvSettingsBGM(a3),DrvSettings(a3)
00002DAC 7000                       		moveq 	#0,d0
00002DAE 102B 0030                   		move.b	PsgLast(a3),d0
00002DB2 0640 00E0                  		add.w	#$E0,d0
00002DB6 6100 0000                  		bsr	@PutPSG
00002DBA                            
00002DBA 7000                        		moveq	#0,d0
00002DBC 102E 0032                   		move.b	LastPattChn(a6),d0
00002DC0 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00002DC6 08B3 0000 0000              		bclr	#0,(a3,d0.w)
00002DCC                             		
00002DCC 0896 0001                    		bclr	#bitSfxOn,(a6)				;SFX finished playing
00002DD0 4E75                       		rts
00002DD2                            		
00002DD2                            ; -------------------------------
00002DD2                            
00002DD2                            @PutPSG:
00002DD2 13C0 00C0 0011             		move.b	d0,($C00011)
00002DD8 4E75                       		rts
00002DDA                            		
00002DDA                            ; ================================================================
00002DDA                            ; -------------------------------
00002DDA                            ; Channel play
00002DDA                            ; -------------------------------
00002DDA                            
00002DDA                            @ChannelPlay:	
00002DDA 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00002DE0 6700 0000                  		beq	@Disabled
00002DE4                            		
00002DE4 0816 0000                  		btst	#bitPriority,(a6)
00002DE8 6700                       		beq.s	@SFX_ModePlay
00002DEA 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00002DF2 6700                       		beq.s	@SFX_ModePlay
00002DF4 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00002DFA 7200                        		moveq	#0,d1
00002DFC 122E 0032                   		move.b	LastPattChn(a6),d1
00002E00 0833 0000 1000             		btst	#0,(a3,d1.w)
00002E06 6600 FD6E                  		bne	@Return
00002E0A                            @SFX_ModePlay:
00002E0A                            
00002E0A 7000                                       moveq	#0,d0
00002E0C 102D 000B                  		move.b	Chn_Note(a5),d0
00002E10 4A2D 0004                  		tst.b	Chn_Portam(a5)
00002E14 6700                       		beq.s	@NoUp
00002E16 D02D 0004                  		add.b	Chn_Portam(a5),d0
00002E1A 6000                       		bra.s	@NoDown
00002E1C                            @NoUp:
00002E1C 4A2D 0005                  		tst.b	Chn_Portam+1(a5)
00002E20 6700                       		beq.s	@NoDown
00002E22 902D 0005                  		sub.b	Chn_Portam+1(a5),d0
00002E26                            @NoDown:
00002E26 6100 F9F2                  		bsr	@NoteFreq
00002E2A                            
00002E2A                            @Continue:
00002E2A 382D 0000                  		move.w	Chn_Freq(a5),d4
00002E2E 6700 0000                  		beq	SMEG_ChannelRest
00002E32 4A44                       		tst.w	d4
00002E34 6B00 0000                  		bmi	SMEG_ChannelRest
00002E38                            
00002E38 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00002E3E 6C00 0000                  		bge	@ChannelPlay_PCM
00002E42 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
00002E48 6600 0000                                  bne	@NoChk6_play
00002E4C 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00002E52 6600 0000                  		bne	@ChannelPlay_DAC
00002E56                            
00002E56                            @NoChk6_play:
00002E56 4A2D 0007                  		tst.b	Chn_ID(a5)
00002E5A 6B00 0000                  		bmi	@ChannelPlay_PSG
00002E5E                            		
00002E5E 6100 0000                  		bsr	SMEG_FM_SetPan
00002E62                            
00002E62 7028                       		moveq	#$28,d0
00002E64 7200                       		moveq	#0,d1
00002E66 D22D 0007                  		add.b	Chn_ID(a5),d1
00002E6A 33FC 0100 00A1 1100 0839+   		Z80_OFF
00002E7C 6100 0000                  		bsr	FM_RegWrite_1
00002E80                            
00002E80 7A00                       		moveq	#0,d5
00002E82 1A2D 0007                  		move.b	Chn_ID(a5),d5
00002E86 0C05 0004                  		cmp.b	#4,d5
00002E8A 6D00                       		blt.s	@FirstFM
00002E8C 0405 0004                  		sub.b	#4,d5
00002E90                            @FirstFM:
00002E90 303C 00A4                  		move.w	#$A4,d0
00002E94 D005                       		add.b	d5,d0
00002E96 7200                       		moveq	#0,d1
00002E98 E15C                       		rol.w	#8,d4
00002E9A 1204                       		move.b	d4,d1
00002E9C 6100 0000                  		bsr	SMEG_FM_FindWrite
00002EA0 303C 00A0                  		move.w	#$A0,d0
00002EA4 D005                       		add.b	d5,d0
00002EA6 7200                       		moveq	#0,d1
00002EA8 E15C                       		rol.w	#8,d4
00002EAA 1204                       		move.b	d4,d1
00002EAC 6100 0000                  		bsr	SMEG_FM_FindWrite
00002EB0                            
00002EB0 7028                       		moveq	#$28,d0
00002EB2 7200                       		moveq	#0,d1
00002EB4 122D 000D                  		move.b	Chn_FM_Key(a5),d1
00002EB8 E949                       		lsl.w	#4,d1
00002EBA D22D 0007                  		add.b	Chn_ID(a5),d1
00002EBE 6100 0000                  		bsr	FM_RegWrite_1
00002EC2                            		
00002EC2 13FC 002A 00A0 4000 33FC+  		Z80_ON
00002ED2                            @Disabled:
00002ED2 4E75                       		rts
00002ED4                            
00002ED4                            ; -------------------------------
00002ED4                            ; Play PSG
00002ED4                            ; -------------------------------
00002ED4                            
00002ED4                            @ChannelPlay_PSG:
00002ED4 0C2D 00E0 0007             		cmp.b	#$E0,Chn_ID(a5)
00002EDA 6700                       		beq.s	@PlayNoise
00002EDC                            
00002EDC 0C2D 00C0 0007                             cmp.b	#$C0,Chn_ID(a5)
00002EE2 6600                                       bne.s	@NotPsg3
00002EE4 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
00002EEA 6700                       		beq.s	@NotPsg3
00002EEC 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
00002EF4 4E75                                       rts
00002EF6                            
00002EF6                            @NotPsg3:
00002EF6 7200                       		moveq	#0,d1
00002EF8 302D 0000                  		move.w	Chn_Freq(a5),d0
00002EFC 122D 0007                  		move.b	Chn_ID(a5),d1
00002F00 0881 0007                  		bclr	#7,d1
00002F04 EA49                       		lsr.w	#5,d1
00002F06 6000 0000                  		bra	@SetFreq
00002F0A                            
00002F0A                            @PlayNoise:
00002F0A 082E 0002 0001             		btst	#bitTone3,DrvSettings(a6)
00002F10 67C0                       		beq.s	@Disabled
00002F12                            
00002F12 302D 0000                  		move.w	Chn_Freq(a5),d0
00002F16 7202                       		moveq	#2,d1
00002F18                            
00002F18                            ;---------------------
00002F18                            ; Set frequency
00002F18                            ;
00002F18                            ; d0 - frequency (0-$3ff)
00002F18                            ; d1 - channel (0, 1, 2)
00002F18                            ;---------------------
00002F18                            
00002F18                            @SetFreq:
00002F18 1400                       		move.b	d0,d2
00002F1A 0202 000F                  		and.b	#$F,d2
00002F1E 0602 0080                  		add.b	#$80,d2
00002F22 0201 0003                  		and.b	#$3,d1
00002F26 EB09                       		lsl.b	#$5,d1
00002F28 8401                       		or.b	d1,d2
00002F2A 13C2 00C0 0011             		move.b	d2,($C00011).l	;$80+channel<<5+(freq&$f)
00002F30 E848                       		lsr.w	#$4,d0
00002F32 13C0 00C0 0011             		move.b	d0,($C00011).l	;freq>>4
00002F38 4E75                       		rts
00002F3A                            		
00002F3A                            ; -------------------------------
00002F3A                            ; Play DAC
00002F3A                            ; -------------------------------
00002F3A                            
00002F3A                            @ChannelPlay_DAC:
00002F3A                            ; 		if SMEG_Z80
00002F3A                            ;  		btst	#bitDacNote,DrvSettings(a6)
00002F3A                            ;  		bne	@FoundIt
00002F3A                            
00002F3A 33FC 0100 00A1 1100 0839+  		Z80_OFF
00002F4C 7000                       		moveq	#0,d0			; TODO: Loop flag
00002F4E E308                       		lsl.b	#1,d0
00002F50 08C0 0000                  		bset	#0,d0
00002F54 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
00002F5A 13FC 002A 00A0 4000 33FC+  		Z80_ON
00002F6A                            @FoundIt:
00002F6A                            ; 		endif
00002F6A 4E75                       		rts
00002F6C                            
00002F6C                            ; -------------------------------
00002F6C                            ; Play PCM
00002F6C                            ; -------------------------------
00002F6C                            
00002F6C                            @ChannelPlay_PCM:	
00002F6C                             		
00002F6C 4E75                       		rts
00002F6E                            
00002F6E                            ; -------------------------------
00002F6E                            ; Mute/Rest channel
00002F6E                            ; -------------------------------
00002F6E                            
00002F6E                            SMEG_ChannelRest:
00002F6E 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00002F74 6700                       		beq.s	@Return
00002F76                            		
00002F76 0816 0000                  		btst	#bitPriority,(a6)
00002F7A 6700                       		beq.s	@SFX_Mode
00002F7C 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00002F84 6700                       		beq.s	@SFX_Mode
00002F86 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00002F8C 7200                        		moveq	#0,d1
00002F8E 122E 0032                   		move.b	LastPattChn(a6),d1
00002F92 0833 0000 1000             		btst	#0,(a3,d1.w)
00002F98 6600 0000                  		bne	@Return
00002F9C                            @SFX_Mode:
00002F9C 4A2D 0007                  		tst.b	Chn_ID(a5)
00002FA0 6B00                       		bmi.s	@PSG_Rest
00002FA2                            
00002FA2 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
00002FA8 6600                                       bne.s	@NoChk6
00002FAA 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00002FB0 6600                       		bne.s	@DAC_Rest
00002FB2                            
00002FB2                            @NoChk6:
00002FB2 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00002FB8 6C00 0000                  		bge	@PCM_Rest
00002FBC                            		
00002FBC 7028                       		moveq	#$28,d0
00002FBE 7200                                       moveq	#0,d1
00002FC0 122D 0007                  		move.b	Chn_ID(a5),d1
00002FC4 33FC 0100 00A1 1100 0839+  		Z80_OFF
00002FD6 6100 0000                  		bsr	FM_RegWrite_1
00002FDA 13FC 002A 00A0 4000 33FC+  		Z80_ON
00002FEA                            
00002FEA                            @Return:
00002FEA 4E75                       		rts
00002FEC                            
00002FEC                            ; -------------------------------
00002FEC                            ; PSG Rest
00002FEC                            ; -------------------------------
00002FEC                            
00002FEC                            @PSG_Rest:
00002FEC 7000                       		moveq	#0,d0
00002FEE 102D 0007                  		move.b	Chn_ID(a5),d0
00002FF2 0600 001F                  		add.b	#$1F,d0
00002FF6 13C0 00C0 0011             		move.b	d0,($C00011)
00002FFC                            
00002FFC                            @Disabled:
00002FFC 4E75                       		rts
00002FFE                            
00002FFE                            ; -------------------------------
00002FFE                            ; DAC Rest
00002FFE                            ; -------------------------------
00002FFE                            
00002FFE                            @DAC_Rest:
00002FFE 33FC 0100 00A1 1100 0839+    		Z80_OFF
00003010 702B                       		moveq	#$2B,d0
00003012 7200                                       moveq	#0,d1
00003014 6100 0000                    		bsr	FM_RegWrite_1
00003018                            
00003018 7000                       		moveq	#0,d0
0000301A 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
00003020 13FC 002A 00A0 4000 33FC+  		Z80_ON
00003030 4E75                       		rts
00003032                            
00003032                            ; -------------------------------
00003032                            ; PCM Rest
00003032                            ; -------------------------------
00003032                            
00003032                            @PCM_Rest:
00003032                            @ReturnPCM:
00003032 4E75                       		rts
00003034                            		
00003034                            ; ================================================================
00003034                            ; Subs
00003034                            ; ================================================================
00003034                            
00003034                            ; -------------------------------------------
00003034                            ; Extra channels communication
00003034                            ; -------------------------------------------
00003034                            
00003034                            SMEG_CD_Call:
00003034 4E75                       		rts
00003036                            
00003036                            SMEG_MARS_Call:
00003036 4E75                        		rts
00003038                             		
00003038                            ; -------------------------------------------
00003038                            ; Set instrument
00003038                            ; -------------------------------------------
00003038                            
00003038                            SMEG_SetVoice:
00003038 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
0000303E 6700 0000                  		beq	@Return
00003042                            		
00003042 0816 0000                  		btst	#bitPriority,(a6)
00003046 6700                       		beq.s	@SFX_Mode
00003048 0839 0001 FFFF D918        		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00003050 6700                       		beq.s	@SFX_Mode
00003052 47F9 FFFF D94E              		lea	(RAM_SMEG_PrioList),a3
00003058 7200                        		moveq	#0,d1
0000305A 122E 0032                   		move.b	LastPattChn(a6),d1
0000305E 0833 0000 1000             		btst	#0,(a3,d1.w)
00003064 6600 0000                  		bne	@Return
00003068                            @SFX_Mode:
00003068                            
00003068 4AAE 0014                  		tst.l	SongVoices(a6)
0000306C 6700 0000                  		beq	@Return
00003070 4A2D 0007                  		tst.b	Chn_ID(a5)
00003074 6B00 0000                  		bmi	@Return
00003078                            
00003078 0C2D 0006 0007                             cmp.b	#6,Chn_ID(a5)
0000307E 6600                                       bne.s	@NoChk6_Voice
00003080 082E 0000 0001             		btst	#bitDacOn,DrvSettings(a6)
00003086 6600 0000                  		bne	SMEG_SetVoice_DAC
0000308A                            @NoChk6_Voice:
0000308A 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00003090 6C00 0000                  		bge	SMEG_SetVoice_PCM
00003094                            		
00003094 7000                       		moveq	#0,d0
00003096 102D 0007                  		move.b	Chn_ID(a5),d0
0000309A 0C00 0004                  		cmp.b	#4,d0
0000309E 6D00                       		blt.s	@Low3
000030A0 0400 0004                  		sub.b	#4,d0
000030A4                            @Low3:
000030A4 266E 0014                  		movea.l	SongVoices(a6),a3
000030A8 7C00                       		moveq	#0,d6
000030AA 1C2D 0008                  		move.b	Chn_Inst(a5),d6
000030AE                            @FindNext:
000030AE 4A53                       		tst.w	(a3)
000030B0 6B00 0000                  		bmi	@Return
000030B4 7200                       		moveq	#0,d1
000030B6 322B 0002                  		move.w	2(a3),d1
000030BA BC53                       		cmp.w	(a3),d6
000030BC 6700                       		beq.s	@Found
000030BE D6FC 0008                   		adda.w	#8,a3
000030C2 60EA                       		bra.s	@FindNext
000030C4                            
000030C4                            @Found:
000030C4 D6FC 0004                  		adda.w	#4,a3
000030C8                            
000030C8 2653                       		movea.l	(a3),a3
000030CA C2FC 0019                  		mulu.w	#$19,d1
000030CE D6C1                       		adda	d1,a3
000030D0                            ; 		tst.w	d1
000030D0                            ; 		beq.s	@Nothing
000030D0                            ; 		sub.w	#1,d1
000030D0                            ; @NextFM:
000030D0                            ; 		adda	#$19,a3
000030D0                            ; 		dbf	d1,@NextFM
000030D0                            
000030D0                            @Nothing:
000030D0 4840                       		swap	d0
000030D2 303C 0028                  		move.w	#$28,d0
000030D6 7200                       		moveq	#0,d1
000030D8 122D 0007                  		move.b	Chn_ID(a5),d1
000030DC 33FC 0100 00A1 1100 0839+  		Z80_OFF
000030EE 6100 0000                  		bsr	FM_RegWrite_1
000030F2 4840                       		swap	d0
000030F4                            
000030F4 2D4C 0004                  		move.l	a4,AddrBackup(a6)
000030F8 49FA 0000                  		lea	SMEG_FM_RegList(pc),a4
000030FC 3C00                       		move.w	d0,d6
000030FE 7818                       		moveq	#$18,d4
00003100                            @Next:
00003100 3A06                       		move.w	d6,d5
00003102 101C                       		move.b	(a4)+,d0
00003104 3600                       		move.w	d0,d3
00003106 D045                       		add.w	d5,d0
00003108 121B                       		move.b	(a3)+,d1
0000310A                            
0000310A 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
00003110 6C00                       		bge.s	@Chn456
00003112 6100 0000                  		bsr	FM_RegWrite_1
00003116 51CC FFE8                  		dbf	d4,@Next
0000311A 6000                       		bra.s	@BackZ80
0000311C                            
0000311C                            @Chn456:
0000311C 6100 0000                  		bsr	FM_RegWrite_2
00003120 51CC FFDE                  		dbf	d4,@Next
00003124                            @BackZ80:
00003124 13FC 002A 00A0 4000 33FC+  		Z80_ON
00003134 286E 0004                  		movea.l	AddrBackup(a6),a4
00003138                            @Return:
00003138 4E75                       		rts
0000313A                            
0000313A                            ; -------------------------------------------
0000313A                            ; Set FM panning
0000313A                            ; -------------------------------------------
0000313A                            
0000313A                            SMEG_FM_SetPan:
0000313A 4A2D 0007                  		tst.b	Chn_ID(a5)
0000313E 6B00                       		bmi.s	@Return
00003140                            		
00003140 303C 00B4                  		move.w	#$B4,d0
00003144 7400                       		moveq	#0,d2
00003146 142D 0007                  		move.b	Chn_ID(a5),d2
0000314A 7200                       		moveq	#0,d1
0000314C 122D 000C                  		move.b	Chn_Panning(a5),d1
00003150                            
00003150 33FC 0100 00A1 1100 0839+  		Z80_OFF
00003162 0C02 0003                  		cmp.b	#3,d2
00003166 6E00                       		bgt.s	@SecondFM
00003168 D042                       		add.w	d2,d0
0000316A 6100 0000                  		bsr	FM_RegWrite_1
0000316E 6000                       		bra.s	@BackZ80
00003170                            @SecondFM:
00003170 0442 0004                  		sub.w	#4,d2
00003174 D042                       		add.w	d2,d0
00003176 6100 0000                  		bsr	FM_RegWrite_2
0000317A                            @BackZ80:
0000317A 13FC 002A 00A0 4000 33FC+  		Z80_ON
0000318A                            @Return:
0000318A 4E75                       		rts
0000318C                            		
0000318C                            ; -------------------------------------------
0000318C                            ; Send DAC
0000318C                            ; -------------------------------------------
0000318C                            
0000318C                            SMEG_SetVoice_DAC:
0000318C 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00003192 6700 0000                  		beq	@Return
00003196                            		
00003196                            ; 		if SMEG_Z80
00003196 266E 0018                  		movea.l	SongSampl(a6),a3
0000319A 7200                       		moveq	#0,d1
0000319C 122D 0008                  		move.b	Chn_Inst(a5),d1
000031A0                            
000031A0                            @FindSample:
000031A0 4A53                       		tst.w	(a3)
000031A2 6B00                       		bmi.s	@Return
000031A4 B253                       		cmp.w	(a3),d1
000031A6 6700                       		beq.s	@Found
000031A8 D6FC 0010                   		adda	#$10,a3
000031AC 60F2                       		bra.s	@FindSample
000031AE                            
000031AE                            @Found:
000031AE D6FC 0002                  		adda.w	#2,a3
000031B2 33FC 0100 00A1 1100 0839+  		Z80_OFF
000031C4 361B                        		move.w	(a3)+,d3
000031C6 201B                        		move.l	(a3)+,d0
000031C8 221B                        		move.l	(a3)+,d1
000031CA 241B                        		move.l	(a3)+,d2
000031CC 6100                       		bsr.s	SMEG_Z80_LoadWav
000031CE 13FC 002A 00A0 4000 33FC+  		Z80_ON
000031DE 1B44 000E                    		move.b 	d4,Chn_PCM_Pitch(a5)
000031E2                              		
000031E2 7200                       		moveq	#0,d1
000031E4 7400                       		moveq 	#0,d2
000031E6 122D 000B                  		move.b	Chn_Note(a5),d1
000031EA 142D 000E                    		move.b 	Chn_PCM_Pitch(a5),d2
000031EE D242                         		add.w	d2,d1
000031F0                                  		
000031F0 ED49                       		lsl.w	#6,d1
000031F2 0641 0200                  		add.w	#$200,d1
000031F6 33FC 0100 00A1 1100 0839+  		Z80_OFF
00003208 13C1 00A0 00F6             		move.b	d1,($A000F6)		; ld bc,(NEW ADDRESS)
0000320E E049                       		lsr.w	#8,d1			;
00003210 13C1 00A0 00F7             		move.b	d1,($A000F7)		;
00003216                            
00003216                            @Return:
00003216 4E75                       		rts
00003218                            
00003218                            ; ---------------------------------
00003218                            
00003218                            SMEG_Z80_LoadWav:
00003218 47F9 00A0 01E0             		lea	($A001E0),a3
0000321E 7600                       		moveq	#0,d3
00003220 7800                       		moveq	#0,d4
00003222                              		
00003222                            		;Start
00003222 4A40                       		tst.w	d0
00003224 6A00                       		bpl.s	@plus_s
00003226 383C 0081                  		move.w	#$81,d4
0000322A                            @plus_s:
0000322A 4840                       		swap	d0
0000322C 4844                       		swap	d4
0000322E 1800                       		move.b	d0,d4
00003230 4844                       		swap	d4
00003232 4840                       		swap	d0
00003234 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
00003236 4844                       		swap	d4
00003238 16C4                       		move.b	d4,(a3)+		;		$xx0000
0000323A 4844                       		swap	d4
0000323C 16C0                       		move.b	d0,(a3)+		;start Addr	$00xx
0000323E E048                       		lsr.w	#8,d0
00003240 16C0                       		move.b	d0,(a3)+		;		$xx00
00003242                            		
00003242                            		;Loop
00003242 7800                       		moveq	#0,d4
00003244 4A41                       		tst.w	d1
00003246 6A00                       		bpl.s	@plus_e
00003248 383C 0081                  		move.w	#$81,d4
0000324C                            @plus_e:
0000324C 4841                       		swap	d1
0000324E 4844                       		swap	d4
00003250 1801                       		move.b	d1,d4
00003252 4844                       		swap	d4
00003254 4841                       		swap	d1
00003256 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
00003258 4844                       		swap	d4
0000325A 16C4                       		move.b	d4,(a3)+		;		$xx0000
0000325C 4844                       		swap	d4
0000325E 16C1                       		move.b	d1,(a3)+		;start Addr	$00xx
00003260 E049                       		lsr.w	#8,d1
00003262 16C1                       		move.b	d1,(a3)+		;		$xx00
00003264                            		
00003264                            		;End
00003264 7800                       		moveq	#0,d4
00003266 4A42                       		tst.w	d2
00003268 6A00                       		bpl.s	@plus_l
0000326A 383C 0081                  		move.w	#$81,d4
0000326E                            @plus_l:
0000326E 4842                       		swap	d2
00003270 4844                       		swap	d4
00003272 1802                       		move.b	d2,d4
00003274 4844                       		swap	d4
00003276 4842                       		swap	d2
00003278 16C4                       		move.b	d4,(a3)+		;start Bank	+$8000
0000327A 4844                       		swap	d4
0000327C 16C4                       		move.b	d4,(a3)+		;		$xx0000
0000327E 4844                       		swap	d4
00003280 16C2                       		move.b	d2,(a3)+		;start Addr	$00xx
00003282 E04A                       		lsr.w	#8,d2
00003284 16C2                       		move.b	d2,(a3)+		;		$xx00
00003286                            		
00003286                            ; 		endif
00003286 4E75                       		rts
00003288                            
00003288                            ; -------------------------------------------
00003288                            ; Send PCM/PWM
00003288                            ; -------------------------------------------
00003288                            
00003288                            SMEG_SetVoice_PCM:
00003288                            @FinishList:
00003288 4E75                       		rts
0000328A                            		
0000328A                            ; -------------------------------------------
0000328A                            ; Reset FM
0000328A                            ; -------------------------------------------
0000328A                            
0000328A                            SMEG_FM_Reset:
0000328A 33FC 0100 00A1 1100 0839+  		Z80_OFF
0000329C                            
0000329C 7028                       		moveq	#$28,d0
0000329E 7200                       		moveq	#0,d1
000032A0 6100 0000                  		bsr	FM_RegWrite_1
000032A4 7028                       		moveq	#$28,d0
000032A6 7201                       		moveq	#1,d1
000032A8 6100 0000                  		bsr	FM_RegWrite_1
000032AC 7028                       		moveq	#$28,d0
000032AE 7202                       		moveq	#2,d1
000032B0 6100 0000                  		bsr	FM_RegWrite_1
000032B4 7028                       		moveq	#$28,d0
000032B6 7204                       		moveq	#4,d1
000032B8 6100 0000                  		bsr	FM_RegWrite_1
000032BC 7028                       		moveq	#$28,d0
000032BE 7205                       		moveq	#5,d1
000032C0 6100 0000                  		bsr	FM_RegWrite_1
000032C4 7028                       		moveq	#$28,d0
000032C6 7206                       		moveq	#6,d1
000032C8 6100 0000                  		bsr	FM_RegWrite_1
000032CC                            
000032CC 13FC 002A 00A0 4000 33FC+  		Z80_ON
000032DC 4E75                       		rts
000032DE                            
000032DE                            ; -------------------------------------------
000032DE                            ; Find FM
000032DE                            ; -------------------------------------------
000032DE                            
000032DE                            SMEG_FM_FindWrite:
000032DE 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
000032E4 6C00                       		bge.s	@Second
000032E6 6100 0000                  		bsr	FM_RegWrite_1
000032EA 4E75                       		rts
000032EC                            @Second:
000032EC 6100 0000                  		bsr	FM_RegWrite_2
000032F0 4E75                       		rts
000032F2                            
000032F2                            ; -------------------------------------------
000032F2                            ; Write to FM register
000032F2                            ; -------------------------------------------
000032F2                            
000032F2                            FM_RegWrite_1:
000032F2 1439 00A0 4000             		move.b	($A04000).l,d2
000032F8 0802 0007                  		btst	#7,d2
000032FC 66F4                       		bne.s	FM_RegWrite_1
000032FE 13C0 00A0 4000             		move.b	d0,($A04000).l
00003304                            @Loop:
00003304 1439 00A0 4000             		move.b	($A04000).l,d2
0000330A 0802 0007                  		btst	#7,d2
0000330E 66F4                       		bne.s	@Loop
00003310 13C1 00A0 4001             		move.b	d1,($A04001).l
00003316 4E75                       		rts
00003318                            
00003318                            FM_RegWrite_2:
00003318 1439 00A0 4000             		move.b	($A04000).l,d2
0000331E 0802 0007                  		btst	#7,d2
00003322 66CE                       		bne.s	FM_RegWrite_1
00003324 13C0 00A0 4002             		move.b	d0,($A04002).l
0000332A                            @Loop:
0000332A 1439 00A0 4000             		move.b	($A04000).l,d2
00003330 0802 0007                  		btst	#7,d2
00003334 66F4                       		bne.s	@Loop
00003336 13C1 00A0 4003             		move.b	d1,($A04003).l
0000333C 4E75                       		rts
0000333E                            		
0000333E                            ; -----------------------
0000333E                            ; Setup channels
0000333E                            ; -----------------------
0000333E                            
0000333E                            SMEG_Load_SetChnls:
0000333E 286E 0008                  		movea.l	SongRequest(a6),a4				;a4 - Music data
00003342 3D6E 0020 0024             		move.w	TicksRequest(a6),TicksSet(a6)
00003348                            
00003348                            ; -----------------------
00003348                            ; Get instruments
00003348                            ; -----------------------
00003348                            
00003348 2D5C 0014                  		move.l	(a4)+,SongVoices(a6)
0000334C 2D5C 0018                  		move.l	(a4)+,SongSampl(a6)
00003350 2D5C 001C                  		move.l	(a4)+,SongPcmSamp(a6)
00003354                            	
00003354                            ; -----------------------
00003354                            ; Get the
00003354                            ; PatternEnd/PatternLoop
00003354                            ; numbers
00003354                            ; -----------------------
00003354                            
00003354 1D5C 0002                  		move.b	(a4)+,PatternEnd(a6)
00003358 1D5C 0003                  		move.b	(a4)+,PatternLoop(a6)
0000335C                            
0000335C                            ; -----------------------
0000335C                            ; Setup the channel IDs
0000335C                            ; -----------------------
0000335C                            
0000335C 7011                       		moveq	#(MaxChannels)-1,d0
0000335E                            @SetId:
0000335E 1B7C 0001 0006             		move.b	#1,Chn_Type(a5)
00003364 1B5C 0007                  		move.b	(a4)+,Chn_ID(a5)
00003368 426D 0000                  		clr.w	Chn_Freq(a5)
0000336C                            		
0000336C 0C2D 00FF 0007             		cmp.b	#$FF,Chn_ID(a5)
00003372 6700                       		beq.s	@Disabled
00003374 4A2D 0007                  		tst.b	Chn_ID(a5)
00003378 6A00                       		bpl.s	@NotPSG
0000337A                            		
0000337A 7200                         		moveq	#0,d1
0000337C 122D 0007                    		move.b	Chn_ID(a5),d1
00003380 0641 001F                    		add.w	#$1F,d1
00003384 13C1 00C0 0011              		move.b	d1,($C00011).l
0000338A                            @NotPSG:
0000338A 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00003390 6C00                        		bge.s	@Disabled
00003392                             		
00003392 1B7C 000F 000D              		move.b	#%00001111,Chn_FM_Key(a5)
00003398 1B7C 00C0 000C              		move.b	#$C0,Chn_Panning(a5)
0000339E                            
0000339E                            @Disabled:
0000339E DAFC 0010                  		adda 	#sizeof_Chn,a5
000033A2 51C8 FFBA                  		dbf	d0,@SetId
000033A6                             		
000033A6                            ; -----------------------
000033A6                            ; Master volumes
000033A6                            ; -----------------------
000033A6                            
000033A6 7011                       		moveq	#(MaxChannels)-1,d0
000033A8                            @SetVol:
000033A8 1B5C 000A                  		move.b	(a4)+,Chn_DefVol(a5)
000033AC DAFC 0010                  		adda 	#sizeof_Chn,a5
000033B0 51C8 FFF6                  		dbf	d0,@SetVol
000033B4                            
000033B4                            ; -----------------------
000033B4                            ; last steps
000033B4                            ; -----------------------
000033B4                            
000033B4 2D4C 000C                  		move.l	a4,SongStart(a6)
000033B8 1D5C 0029                  		move.b	(a4)+,PattSize+1(a6)
000033BC 1D5C 0028                  		move.b	(a4)+,PattSize(a6)
000033C0 426E 002A                  		clr.w	PattRead(a6)
000033C4 D8FC 0006                  		adda	#6,a4
000033C8 2D4C 0010                  		move.l	a4,SongRead(a6)
000033CC 4E75                       		rts
000033CE                            		
000033CE                            ; -----------------------
000033CE                            ; Fix stuff to BGM
000033CE                            ; -----------------------
000033CE                            
000033CE                            SMEG_Load_FixBgm:
000033CE 4BF9 FFFF D960             		lea	(RAM_SMEG_Chnls_BGM),a5
000033D4 7811                       		moveq	#(MaxChannels)-1,d4
000033D6                            @SetId:
000033D6 1B7C 0080 000C             		move.b	#$80,Chn_Panning(a5)
000033DC                            
000033DC 4A2D 0007                  		tst.b	Chn_ID(a5)
000033E0 6B00                       		bmi.s	@NotFM
000033E2 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
000033E8 6C00                       		bge.s	@NotFM
000033EA                            
000033EA 422D 000D                  		clr.b	Chn_FM_Key(a5)
000033EE 1B7C 000F 000D             		move.b	#%00001111,Chn_FM_Key(a5)
000033F4 1B7C 00C0 000C             		move.b	#$C0,Chn_Panning(a5)
000033FA 6100 FD3E                  		bsr	SMEG_FM_SetPan
000033FE                            @NotFM:
000033FE DAFC 0010                  		adda 	#sizeof_Chn,a5
00003402 51CC FFD2                  		dbf	d4,@SetId
00003406                            		
00003406 33FC 0100 00A1 1100 0839+  		Z80_OFF
00003418 702B                       		moveq	#$2B,d0
0000341A 7200                                       moveq	#0,d1
0000341C 6100 FED4                    		bsr	FM_RegWrite_1
00003420                              		
00003420 7000                       		moveq	#0,d0
00003422 13C0 00A0 01ED             		move.b	d0,($A001E0+$D)
00003428 13FC 002A 00A0 4000 33FC+  		Z80_ON
00003438                            		
00003438 4E75                       		rts
0000343A                            		
0000343A                            ; -----------------------
0000343A                            ; Exclusive features
0000343A                            ;
0000343A                            ; TODO: creo que es
0000343A                            ; mala idea hacer esperar
0000343A                            ; al VBlank ya que moví
0000343A                            ; la rutina esta
0000343A                            ; -----------------------
0000343A                            
0000343A                            SMEG_Load_SetExtChnls:
0000343A                            		
0000343A                            @Return:
0000343A 4E75                       		rts
0000343C                            		
0000343C                            ; -------------------------------------------
0000343C                            ; Reset PSG
0000343C                            ; -------------------------------------------
0000343C                            
0000343C                            SMEG_PSG_Reset:
0000343C 13FC 009F 00C0 0011        		move.b	#$9F,($C00011).l
00003444 13FC 00BF 00C0 0011        		move.b	#$BF,($C00011).l
0000344C 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
00003454 13FC 00FF 00C0 0011        		move.b	#$FF,($C00011).l
0000345C 4E75                       		rts
0000345E                            
0000345E                            ; -------------------------------------------
0000345E                            ; Reset PCM
0000345E                            ; -------------------------------------------
0000345E                            
0000345E                            SMEG_PCM_Reset:
0000345E 4AAE 001C                  		tst.l	SongPcmSamp(a6)
00003462 6700                       		beq.s	@NoResetPCM
00003464 6B00 0000                  		bmi	@NoResetPCM
00003468                            		
00003468                            
00003468                            @NoResetPCM:
00003468 4E75                       		rts
0000346A                            
0000346A                            ; ================================================================
0000346A                            ; -------------------------------------------------
0000346A                            ; Data
0000346A                            ; -------------------------------------------------
0000346A                            
0000346A                            SMEG_FM_RegList:
0000346A B0                         		dc.b $B0
0000346B 3038 343C                  		dc.b $30,$38,$34,$3C
0000346F 5058 545C                  		dc.b $50,$58,$54,$5C
00003473 6068 646C                  		dc.b $60,$68,$64,$6C
00003477 7078 747C                  		dc.b $70,$78,$74,$7C
0000347B 8088 848C                  		dc.b $80,$88,$84,$8C
0000347F 4048 444C                  		dc.b $40,$48,$44,$4C
00003483                            SMEG_RegSetVol:
00003484 00                         		even
00003484                            	
00003484                            ; ---------------------------------------------------
00003484                            
00003484                            Z80_Driver:	incbin	"engine/sound/data/z80/main.bin"
00004884                            Z80_DriverEnd:
00004884                            		even
00004884                            		
00004884                            		
00004884                            		
00004884                            ; ====================================================================
00004884                            ; ---------------------------------------------
00004884                            ; Data | Shared
00004884                            ; ---------------------------------------------
00004884                            
00004884                            		include	"engine/shared/main.asm"
00004884                            ; ====================================================================
00004884                            ; Shared Data
00004884                            ; ====================================================================
00004884                            
00004884                            Art_TempFont:	incbin	"engine/shared/data/art_dbgfont.bin",0,($20*96)
00005484                            Art_TempFont_End:
00005484                            		even
00005484                            
00005484                            ; 		if SegaCD
00005484                            ; Pal_StampsTest:	incbin	"engine/misc/stamptest/pal.bin"
00005484                            ; 		even
00005484                            ; Map_StampsTest:	dc.w ((@End-Map_StampsTest)/2)-1
00005484                            ; 		incbin	"engine/misc/stamptest/map.bin"
00005484                            ; @End:
00005484                            ; 		even
00005484                            ; 		endif
00005484                            ; 		endif
00005484                            		
00005484                            ; ---------------------------------------------
00005484                            ; Data | Modes
00005484                            ; ---------------------------------------------
00005484                            
00005484                            ; 		include	"engine/modes/level/data/main.asm"
00005484                            		include	"engine/modes/title/data/main.asm"
00005484                            ; =================================================================
00005484                            ; ------------------------------------------------
00005484                            ; Data
00005484                            ; ------------------------------------------------
00005484                            
00005484 0000                       Art_Title_BG:	dc.w ((@End-Art_Title_BG)/4)-1
00005486                            		incbin	"engine/modes/Title/data/bg_art.bin"
0000B7E6                            @End:
0000B7E6                            		even
0000B7E6 0000                       Art_Title:	dc.w ((@End-Art_Title)/4)-1
0000B7E8                            		incbin	"engine/modes/Title/data/art.bin"
0000D988                            @End:
0000D988                            		even
0000D988                            		
0000D988                            		
0000D988                            Pal_Title_BG:	incbin	"engine/modes/Title/data/bg_pal.bin"
0000D9A8                            @End:
0000D9A8                            		even
0000D9A8                            Map_Title_BG:	incbin	"engine/modes/Title/data/bg_map.bin"
0000E268                            		even
0000E268                            		
0000E268                            
0000E268                            
0000E268                            Pal_Title:	incbin	"engine/modes/Title/data/pal.bin"
0000E288                            @End:
0000E288                            		even
0000E288                            Map_Title:	incbin	"engine/modes/Title/data/map.bin"
0000EB48                            		even
0000EB48                            		even
0000EB48                            		
0000EB48                            ; ---------------------------------------------
0000EB48                            ; Data | Sound
0000EB48                            ; ---------------------------------------------
0000EB48                            
0000EB48                            		include	"engine/sound/data/main.asm"
0000EB48                            ; ================================================================
0000EB48                            ; User data
0000EB48                            ; ================================================================
0000EB48                             		
0000EB48                            ; ================================================================	
0000EB48                            ; ***************************************************
0000EB48                            ; FM Voices
0000EB48                            ; ***************************************************
0000EB48                            
0000EB48                            ; ins_piano_casino:
0000EB48                            ;    		incbin	"engine/sound/data/instruments/old/piano/piano_real.bin"
0000EB48                            ;    		even
0000EB48                            
0000EB48                            ; ins_piano_80s:
0000EB48                            ;   		incbin	"engine/sound/data/instruments/old/piano/piano_80s.bin"
0000EB48                            ;   		even
0000EB48                            ins_piano_generic:
0000EB48                               		incbin	"engine/sound/data/instruments/old/piano/piano_generic.bin"
0000EB62 00                             		even
0000EB62                            ins_piano_real:
0000EB62                                		incbin	"engine/sound/data/instruments/old/piano/piano_real.bin"
0000EB7C 00                             		even
0000EB7C                            ins_piano_small:
0000EB7C                               		incbin	"engine/sound/data/instruments/old/piano/piano_small.bin"
0000EB96 00                            		even
0000EB96                            ins_piano_rave:
0000EB96                              		incbin	"engine/sound/data/instruments/old/piano/piano_rave.bin"
0000EBB0 00                             		even
0000EBB0                            ; ; 
0000EBB0                            ; ; ; ----------------------------------------
0000EBB0                            ; ; 
0000EBB0                            ins_bass_techno:
0000EBB0                                		incbin	"engine/sound/data/instruments/old/bass/bass_techno.bin"
0000EBCA 00                             		even
0000EBCA                            ins_brass_funny:
0000EBCA                               		incbin	"engine/sound/data/instruments/old/brass/brass_funny.bin"
0000EBE4 00                            		even
0000EBE4                            ins_brass_2:
0000EBE4                               		incbin	"engine/sound/data/instruments/old/brass/brass_2.bin"
0000EBFE 00                            		even
0000EBFE                            ; ; ins_fmdrum_kick:
0000EBFE                            ; ;  		incbin	"engine/sound/data/instruments/old/drums/fm_kick.bin"
0000EBFE                            ; ;  		even
0000EBFE                            ins_fmdrum_closedhat:
0000EBFE                               		incbin	"engine/sound/data/instruments/old/drums/fm_openhat.bin"
0000EC18 00                            		even
0000EC18                            ; ;  		
0000EC18                            
0000EC18                            ; ; ; ----------------------------------------
0000EC18                            ; ; 
0000EC18                            ; ; ins_bell_test:
0000EC18                            ; ;  		incbin	"engine/sound/data/instruments/old/bell/bell_xmas.bin"
0000EC18                            ; ;  		even
0000EC18                            ; ; 
0000EC18                            ; ; ; ----------------------------------------
0000EC18                            ; ; 
0000EC18                            ins_fx_echo:
0000EC18                              		incbin	"engine/sound/data/instruments/old/fx/ecco_thelagoon.bin"
0000EC96 00                           		even
0000EC96                            	
0000EC96                            ins_kid_1:  	incbin	"engine/sound/data/instruments/old/old/kid/patch_01.smps"
0000ECB0 00                            		even
0000ECB0                            ins_kid_2:  	incbin	"engine/sound/data/instruments/old/old/kid/patch_02.smps"
0000ECCA 00                            		even
0000ECCA                              	
0000ECCA                              	
0000ECCA                            ins_trumpet:
0000ECCA                            		incbin	"engine/sound/data/instruments/old/old/trumpet_generic.bin"
0000ECE4 00                            		even
0000ECE4                             
0000ECE4                            ins_bass_heavy:
0000ECE4                            		incbin	"engine/sound/data/instruments/old/bass/bass_heavy_1.bin"
0000ECFE 00                            		even
0000ECFE                               		
0000ECFE                            inspack_socket:
0000ECFE                            		incbin	"engine/sound/data/instruments/old/old/socket_voiceset.bin"
0000F132 00                            		even
0000F132                               		
0000F132                            ; ================================================================	
0000F132                            ; ***************************************************
0000F132                            ; Music
0000F132                            ; ***************************************************
0000F132                             	
0000F132                            ; MainTheme:
0000F132                            ;   		dc.l @Voices,@Samples,0
0000F132                            ;    		dc.b 33,6
0000F132                            ;   		dc.b  FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
0000F132                            ;   		dc.b PSG_1,PSG_2,PSG_3,NOISE
0000F132                            ;   		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0000F132                            ;   		dcb.b $12,$00
0000F132                            ;    		incbin "engine/sound/data/music/song1.it",$50+$2E63
0000F132                            ;    		even
0000F132                            ; @Voices:
0000F132                            ;   		dc.w 4,0
0000F132                            ;     		dc.l ins_fmdrum_closedhat
0000F132                            ;     		dc.w 6,0
0000F132                            ;     		dc.l ins_bass_techno
0000F132                            ;     		dc.w 7,0
0000F132                            ;    		dc.l ins_brass_funny
0000F132                            ;      		dc.w 9,0
0000F132                            ;      		dc.l ins_fx_echo 
0000F132                            ;   		dc.w $FFFF
0000F132                            ;   		even
0000F132                            ; @Samples:
0000F132                            ;    		dc.w 1,0
0000F132                            ;    		dc.l samp_Kick
0000F132                            ;    		dc.l samp_Kick_end
0000F132                            ;    		dc.l samp_Kick
0000F132                            ;    		dc.w 2,0
0000F132                            ;    		dc.l samp_Snare
0000F132                            ;    		dc.l samp_Snare_end
0000F132                            ;    		dc.l samp_Snare
0000F132                            ;    		dc.w 3,0
0000F132                            ;    		dc.l samp_Tom
0000F132                            ;    		dc.l samp_Tom_end
0000F132                            ;    		dc.l samp_Tom
0000F132                            ;   		dc.w $FFFF
0000F132                            ;   		even
0000F132                            ;  
0000F132                            ; @ExSampl:
0000F132                            ;      		dc.w -1
0000F132                            ;      		dc.w -1
0000F132                            ;    		even
0000F132                            
0000F132                            ; -------------------------------------
0000F132                            
0000F132                            song_Lyle:
0000F132 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,0
0000F13E 1203                          		dc.b 18,3
0000F140 0001 0204 0506               		dc.b  FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
0000F146 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
0000F14A 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0000F152 0000 0000 0000 0000 0000+    		dcb.b $12,$00
0000F164                               		incbin "engine/sound/data/music/something.it",$50+$1150+$10
0001452C                               		even
0001452C                            @Voices:
0001452C                            ;     		dc.w 8,0
0001452C                            ;      		dc.l ins_fmdrum_closedhat
0001452C 0001 0000                      		dc.w 1,0
00014530 0000 ECE4                       		dc.l ins_bass_heavy
00014534 0003 0000                        		dc.w 3,0
00014538 0000 ECCA                       		dc.l ins_trumpet
0001453C                            ;      		dc.w 9,0
0001453C                            ;      		dc.l ins_fx_echo 
0001453C FFFF                         		dc.w $FFFF
0001453E                              		even
0001453E                            @Samples:
0001453E 0005 0000                     		dc.w 5,0
00014542 0000 0000                      		dc.l samp_Kick
00014546 0000 0000                      		dc.l samp_Kick_end
0001454A 0000 0000                      		dc.l samp_Kick
0001454E 0006 0000                      		dc.w 6,0
00014552 0000 0000                      		dc.l samp_Snare
00014556 0000 0000                      		dc.l samp_Snare_end
0001455A 0000 0000                      		dc.l samp_Snare
0001455E FFFF                         		dc.w $FFFF
00014560                              		even
00014560                             
00014560                            @ExSampl:
00014568 FFFF                            		dc.w -1
0001456A 0C01                              		dc.b 12,1
0001456C 0202                              		dc.b 2,2	
0001456E FFFF                            		dc.w -1
00014570                               		even
00014570                               		
00014570                            ; ---------------------------------------------------
00014570                             
00014570                            ; Tempo: 7
00014570                            
00014570                            TestSong:
00014570 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
0001457C 0A00                          		dc.b 10,0
0001457E 0001 0204 0506               		dc.b FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
00014584 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
00014588 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
00014590 0000 0000 0000 0000 0000+    		dcb.b $12,$00
000145A2                               		incbin "engine/sound/data/music/sound-beim-laden.it",$50+$2C28+$18
00017494                               		even
00017494                            @Voices:
00017494 0002 0000                        		dc.w 2,0
00017498 0000 ECE4                       		dc.l ins_bass_heavy
0001749C 0005 0000                        		dc.w 5,0
000174A0 0000 EBFE                      		dc.l ins_fmdrum_closedhat
000174A4 0006 0012                        		dc.w 6,$12
000174A8 0000 ECFE                       		dc.l inspack_socket
000174AC FFFF                         		dc.w $FFFF
000174AE                              		even
000174AE                            @Samples:
000174AE 0001 0000                     		dc.w 1,0
000174B2 0000 0000                      		dc.l samp_TechnoKick
000174B6 0000 0000                      		dc.l samp_TechnoKick_end
000174BA 0000 0000                      		dc.l samp_TechnoKick
000174BE 0007 0000                     		dc.w 7,0
000174C2 0000 0000                      		dc.l samp_TechnoKick
000174C6 0000 0000                      		dc.l samp_TechnoKick_end
000174CA 0000 0000                      		dc.l samp_TechnoKick
000174CE 0003 0000                     		dc.w 3,0
000174D2 0000 0000                      		dc.l samp_TechnoSnare
000174D6 0000 0000                      		dc.l samp_TechnoSnare_end
000174DA 0000 0000                      		dc.l samp_TechnoSnare
000174DE FFFF                         		dc.w $FFFF
000174E0                              		even
000174E0                             
000174E0                            @ExSampl:
000174E8 FFFF                             		dc.w -1
000174EA 0A02                             		dc.b 10,2
000174EC 0B01                              		dc.b 11,1
000174EE FFFF                             		dc.w -1
000174F0                                		even
000174F0                               	
000174F0                            ; ---------------------------------------------------
000174F0                            
000174F0                            ; Tempo: 12
000174F0                            
000174F0                            TestSong_2:
000174F0 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
000174FC 1500                          		dc.b 21,0
000174FE 0001 0204 0506               		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
00017504 80A0 C0FF                    		dc.b PSG_1,PSG_2,PSG_3,-1
00017508 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
00017510 0000 0000 0000 0000 0000+    		dcb.b $12,$00
00017522                               		incbin "engine/sound/data/music/klu_pian.it",$50+$383+8
0001940A                               		even
0001940A                            @Voices:
0001940A 0001 0000                      		dc.w 1,0
0001940E 0000 EB62                        		dc.l ins_piano_real
00019412 FFFF                         		dc.w -1
00019414                              		even
00019414                              		
00019414                            @Samples:
00019414 FFFF                         		dc.w -1
00019416                              		even
00019416                             
00019416                            @ExSampl:
0001941A FFFF                         		dc.w -1
0001941C FFFF                         		dc.w -1
0001941E                              		even
0001941E                              		
0001941E                            ; ---------------------------------------------------
0001941E                            
0001941E                            ; Tempo: 12
0001941E                            
0001941E                            TestSong_3:
0001941E 0000 0000 0000 0000 0000+    		dc.l @Voices,@Samples,@ExSampl
0001942A 0B00                          		dc.b 11,0
0001942C 0001 0204 0506               		dc.b FM_1, FM_2, FM_3, FM_4, FM_5, FM_6
00019432 80A0 C0E0                    		dc.b PSG_1,PSG_2,PSG_3,NOISE
00019436 1011 1213 1415 1617          		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0001943E 0000 0000 0000 0000 0000+    		dcb.b $12,$00
00019450                            ;    		incbin "engine/sound/data/music/doremifa.it",$184F+$50
00019450                                		incbin "engine/sound/data/music/light.it",$1E71+$50+$10
0001C288 00                            		even
0001C288                            @Voices:
0001C288 0001 0000                        		dc.w 1,0
0001C28C 0000 EB96                       		dc.l ins_piano_rave
0001C290 0002 0000                        		dc.w 2,0
0001C294 0000 EBB0                       		dc.l ins_bass_techno
0001C298 000C 0000                        		dc.w 12,0
0001C29C 0000 EBCA                       		dc.l ins_brass_funny
0001C2A0 FFFF                         		dc.w $FFFF
0001C2A2                              		even
0001C2A2                            @Samples:
0001C2A2 0001 0000                     		dc.w 1,0
0001C2A6 0000 0000                      		dc.l samp_Snare
0001C2AA 0000 0000                      		dc.l samp_Snare_end
0001C2AE 0000 0000                      		dc.l samp_Snare
0001C2B2 FFFF                         		dc.w $FFFF
0001C2B4                              		even
0001C2B4                             
0001C2B4                            @ExSampl:
0001C2B8 FFFF                            		dc.w -1
0001C2BA 0301                            		dc.b 3,1
0001C2BC 0401                            		dc.b 4,1
0001C2BE 0D01                            		dc.b 13,1
0001C2C0 FFFF                            		dc.w -1
0001C2C2                               		even
0001C2C2                            
0001C2C2                            
0001C2C2                            ; ---------------------------------------------------
0001C2C2                            
0001C2C2                            TestSong_4:
0001C2C2 0000 0000 0000 0000 0000+   		dc.l @Voices,@Samples,@ExSampl
0001C2CE 0D01                         		dc.b 13,1
0001C2D0 0001 0204 0506              		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
0001C2D6 80A0 C0E0                   		dc.b PSG_1,PSG_2,PSG_3,NOISE
0001C2DA 1011 1213 1415 1617         		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0001C2E2 0000 0000 0000 0000 0000+   		dcb.b $12,$00
0001C2F4                              		incbin "engine/sound/data/music/yuki.it",$50+$39E9+$18
0001F580                              		even
0001F580                            @Voices:
0001F580 0008 0000                     		dc.w 8,0
0001F584 0000 EBFE                      		dc.l ins_fmdrum_closedhat
0001F588 0003 0000                     		dc.w 3,0
0001F58C 0000 EBB0                      		dc.l ins_bass_techno
0001F590 0006 0000                      		dc.w 6,0
0001F594 0000 EB62                     		dc.l ins_piano_real
0001F598                            ;     		dc.w 9,0
0001F598                            ;     		dc.l ins_fx_echo 
0001F598 FFFF                        		dc.w $FFFF
0001F59A                             		even
0001F59A                            @Samples:
0001F59A 0004 0000                    		dc.w 4,0
0001F59E 0000 0000                     		dc.l samp_Kick
0001F5A2 0000 0000                     		dc.l samp_Kick_end
0001F5A6 0000 0000                     		dc.l samp_Kick
0001F5AA 0001 0000                     		dc.w 1,0
0001F5AE 0000 0000                     		dc.l samp_Snare
0001F5B2 0000 0000                     		dc.l samp_Snare_end
0001F5B6 0000 0000                     		dc.l samp_Snare
0001F5BA 0010 0000                     		dc.w 16,0
0001F5BE 0000 0000                     		dc.l samp_Tom
0001F5C2 0000 0000                     		dc.l samp_Tom_end
0001F5C6 0000 0000                     		dc.l samp_Tom
0001F5CA 0012 0000                     		dc.w 18,0
0001F5CE 0000 0000                     		dc.l samp_Tom
0001F5D2 0000 0000                     		dc.l samp_Tom_end
0001F5D6 0000 0000                     		dc.l samp_Tom
0001F5DA FFFF                        		dc.w $FFFF
0001F5DC                             		even
0001F5DC                            
0001F5DC                            @ExSampl:
0001F5E4 FFFF                         		dc.w -1
0001F5E6 0201                            		dc.b 2,1
0001F5E8 0C02                            		dc.b 12,2		
0001F5EA FFFF                         		dc.w -1
0001F5EC                              		even
0001F5EC                            ;  		
0001F5EC                            ; ---------------------------------------------------
0001F5EC                            
0001F5EC                            SmegSong_Title:
0001F5EC 0000 0000 0000 0000 0000+    		dc.l @Voices,0,@ExSampl
0001F5F8 0101                           		dc.b 1,1
0001F5FA 0001 0204 0506                		dc.b FM_1,FM_2,FM_3,FM_4,FM_5,FM_6
0001F600 80A0 C0E0                     		dc.b PSG_1,PSG_2,PSG_3,NOISE	
0001F604 1011 1213 1415 1617            		dc.b PCM_1,PCM_2,PCM_3,PCM_4,PCM_5,PCM_6,PCM_7,PCM_8
0001F60C 0000 0000 0000 0000 0000+     		dcb.b $12,$00
0001F61E                                		incbin "engine/sound/data/music/title.it",$50+$1677+$10
0001F82C 00                             		even
0001F82C                            @Voices:
0001F82C                            ; ;     		dc.w 8,0
0001F82C                            ; ;      		dc.l ins_fmdrum_closedhat
0001F82C                            ; ;     		dc.w 3,0
0001F82C                            ; ;      		dc.l ins_bass_techno
0001F82C                            ; ;      		dc.w 1,0
0001F82C                            ; ;     		dc.l ins_piano_real
0001F82C 0001 0000                        		dc.w 1,0
0001F830 0000 EC18                         		dc.l ins_fx_echo 
0001F834 FFFF                          		dc.w $FFFF
0001F836                               		even
0001F836                            ; @Samples:
0001F836                            ;    		dc.w 4,0
0001F836                            ;     		dc.l samp_Kick
0001F836                            ;     		dc.l samp_Kick_end
0001F836                            ;     		dc.l samp_Kick
0001F836                            ;     		dc.w 1,0
0001F836                            ;     		dc.l samp_Snare
0001F836                            ;     		dc.l samp_Snare_end
0001F836                            ;     		dc.l samp_Snare
0001F836                            ;     		dc.w 16,0
0001F836                            ;     		dc.l samp_Tom
0001F836                            ;     		dc.l samp_Tom_end
0001F836                            ;     		dc.l samp_Tom
0001F836                            ;     		dc.w 18,0
0001F836                            ;     		dc.l samp_Tom
0001F836                            ;     		dc.l samp_Tom_end
0001F836                            ;     		dc.l samp_Tom
0001F836                            ;   		dc.w $FFFF
0001F836                            ;   		even
0001F836                            ;  
0001F836                            @ExSampl:
0001F83A FFFF                            		dc.w -1
0001F83C 0101                              		dc.b 1,1		
0001F83E FFFF                            		dc.w -1
0001F840                               		even
0001F840                             		
0001F840                            ; ================================================================
0001F840                            ; ***************************************************
0001F840                            ; SFX
0001F840                            ; ***************************************************
0001F840                            
0001F840                            sfx_CharJump:
0001F840 0000 0000 0000 0000 0000+  		dc.l 0,0,0
0001F84C 0101                        		dc.b 1,1
0001F84E FFFF FFFF FFFF                		dc.b -1,-1,-1,-1,-1,-1
0001F854 FFFF FFE0                     		dc.b -1,-1,-1,NOISE	
0001F858 FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
0001F860 0000 0000 0000 0000 0000+  		dcb.b $12,$00
0001F872                            
0001F872                            		incbin	"engine/sound/data/sfx/char_jump.it",0x34F+0x50+8
0001F9C8                            		even
0001F9C8                            		
0001F9C8                            ; ---------------------------
0001F9C8                            
0001F9C8                            sfx_PrizeToing:
0001F9C8 0000 0000 0000 0000 0000+  		dc.l 0,0,0
0001F9D4 0101                        		dc.b 1,1
0001F9D6 FFFF FFFF FFFF                		dc.b -1,-1,-1,-1,-1,-1
0001F9DC FFA0 FFE0                     		dc.b -1,PSG_2,-1,NOISE	
0001F9E0 FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
0001F9E8 0000 0000 0000 0000 0000+  		dcb.b $12,$00
0001F9FA                            
0001F9FA                            		incbin	"engine/sound/data/sfx/prize_blup.it",0x347+0x50
0001FB3E 00                         		even
0001FB3E                            
0001FB3E                            ; ---------------------------
0001FB3E                            
0001FB3E                            sfx_ArrowPlup:
0001FB3E 0000 0000 0000 0000 0000+  		dc.l 0,@Samples,0
0001FB4A 0101                        		dc.b 1,1
0001FB4C FFFF FFFF FF06                		dc.b -1,-1,-1,-1,-1,FM_6
0001FB52 FFFF FFFF                     		dc.b -1,-1,-1,-1	
0001FB56 FFFF FFFF FFFF FFFF            		dc.b -1,-1,-1,-1,-1,-1,-1,-1
0001FB5E 0000 0000 0000 0000 0000+  		dcb.b $12,$00
0001FB70                            
0001FB70                            		incbin	"engine/sound/data/sfx/arrow_plup.it",0xE1+0x50
0001FC10 00                         		even
0001FC10                            @Samples:
0001FC10 0001 0000                       		dc.w 1,0
0001FC14 0000 0000                       		dc.l samp_Kick
0001FC18 0000 0000                       		dc.l samp_Kick_end
0001FC1C 0000 0000                       		dc.l samp_Kick
0001FC20 FFFF                          		dc.w -1
0001FC22                               		even
0001FC22                             		
0001FC22                            ; ***************************************************
0001FC22                            ; Z80 Samples
0001FC22                            ; ***************************************************
0001FC22                            
0001FC22                            ;  		if MARS
0001FC22                             		cnop 0,$10000
00020000                            ;   		endif
00020000                            		
00020000                            ; ----------------------------------------
00020000                            
00020000                            samp_Kick:	incbin	"engine/sound/data/samples/dac/sauron_kick.wav",$2C
00020F9A                            samp_Kick_end:
00020F9A                             		even
00020F9A                            samp_Snare:	incbin	"engine/sound/data/samples/dac/snare.wav",$2C
0002237A                            samp_Snare_end:
0002237A                             		even
0002237A                            samp_TechnoKick:
0002237A                            		incbin	"engine/sound/data/samples/dac/ST-72_techno-bassd3.wav",$2C
000229CD                            samp_TechnoKick_end:
000229CE 00                          		even
000229CE                            samp_TechnoSnare:
000229CE                            		incbin	"engine/sound/data/samples/dac/ST-79_whodini-snare.wav",$2C
00024952                            samp_TechnoSnare_end:
00024952                             		even
00024952                            
00024952                            samp_Tom:	incbin	"engine/sound/data/samples/dac/sauron_tom.wav",$2C
0002550C                            samp_Tom_end:
0002550C                             		even
0002550C                             		
0002550C                             		
0002550C                            
0002550C                            ; ---------------------------------------------
0002550C                            ; Data | Misc
0002550C                            ; ---------------------------------------------
0002550C                            		
0002550C                            ; ====================================================================
0002550C                            
0002550C                            		inform 0,"*** ROM SIZE: %h ***",*
0002550C                            		cnop 0,$100000
00100000                            MD_RomEnd:
